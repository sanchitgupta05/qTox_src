!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
4NT_args	./../android/gradlew.bat	/^:4NT_args$/;"	l
ACTION	./../src/chatlog/chatmessage.h	/^        ACTION,$/;"	e	enum:ChatMessage::MessageType
ADDFRIENDFORM_H	./../src/widget/form/addfriendform.h	18;"	d
ADJUSTINGSCROLLAREA_H	./../src/widget/adjustingscrollarea.h	18;"	d
ADVANCEDFORM_H	./../src/widget/form/settings/advancedform.h	18;"	d
AEC_BAD_PARAMETER_ERROR	./../libs/filter_audio/aec/include/echo_cancellation.h	21;"	d
AEC_BAD_PARAMETER_WARNING	./../libs/filter_audio/aec/include/echo_cancellation.h	24;"	d
AEC_NULL_POINTER_ERROR	./../libs/filter_audio/aec/include/echo_cancellation.h	20;"	d
AEC_UNINITIALIZED_ERROR	./../libs/filter_audio/aec/include/echo_cancellation.h	19;"	d
AEC_UNSPECIFIED_ERROR	./../libs/filter_audio/aec/include/echo_cancellation.h	17;"	d
AEC_UNSUPPORTED_FUNCTION_ERROR	./../libs/filter_audio/aec/include/echo_cancellation.h	18;"	d
AGC_BAD_PARAMETER_ERROR	./../libs/filter_audio/agc/include/gain_control.h	21;"	d
AGC_BAD_PARAMETER_WARNING	./../libs/filter_audio/agc/include/gain_control.h	24;"	d
AGC_DEFAULT_COMP_GAIN	./../libs/filter_audio/agc/analog_agc.c	46;"	d	file:
AGC_DEFAULT_TARGET_LEVEL	./../libs/filter_audio/agc/analog_agc.c	45;"	d	file:
AGC_MUL32	./../libs/filter_audio/agc/digital_agc.h	21;"	d
AGC_NULL_POINTER_ERROR	./../libs/filter_audio/agc/include/gain_control.h	20;"	d
AGC_SCALEDIFF32	./../libs/filter_audio/agc/digital_agc.h	23;"	d
AGC_UNINITIALIZED_ERROR	./../libs/filter_audio/agc/include/gain_control.h	19;"	d
AGC_UNSPECIFIED_ERROR	./../libs/filter_audio/agc/include/gain_control.h	17;"	d
AGC_UNSUPPORTED_FUNCTION_ERROR	./../libs/filter_audio/agc/include/gain_control.h	18;"	d
ALC_ALL_DEVICES_SPECIFIER	./../src/widget/form/settings/avform.cpp	31;"	d	file:
ALERT	./../src/chatlog/chatmessage.h	/^        ALERT,$/;"	e	enum:ChatMessage::MessageType
ALIGN16_BEG	./../libs/filter_audio/aec/aec_common.h	17;"	d
ALIGN16_BEG	./../libs/filter_audio/aec/aec_common.h	20;"	d
ALIGN16_END	./../libs/filter_audio/aec/aec_common.h	18;"	d
ALIGN16_END	./../libs/filter_audio/aec/aec_common.h	21;"	d
ANALOG_TARGET_LEVEL	./../libs/filter_audio/agc/analog_agc.c	50;"	d	file:
ANALOG_TARGET_LEVEL_2	./../libs/filter_audio/agc/analog_agc.c	51;"	d	file:
ANAL_BLOCKL_MAX	./../libs/filter_audio/ns/defines.h	15;"	d
ANAL_BLOCKL_MAX	./../libs/filter_audio/ns/nsx_defines.h	14;"	d
ANDROIDGUI_H	./../src/widget/androidgui.h	2;"	d
APP_BASE_NAME	./../android/gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_HOME	./../android/gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
AR	./../Makefile	/^AR            = ar cqs$/;"	m
AUDIOFILTERER_H	./../src/audiofilterer.h	19;"	d
AUDIO_DEBUG	./../src/audio.cpp	19;"	d	file:
AUDIO_H	./../src/audio.h	19;"	d
AUTHOR_CHANGE_SPACING	./../src/widget/form/genericchatform.h	28;"	d
AUTOUPDATE_ENABLED	./../src/autoupdate.h	29;"	d
AUTOUPDATE_ENABLED	./../src/autoupdate.h	31;"	d
AUTOUPDATE_ENABLED	./../src/autoupdate.h	33;"	d
AUTOUPDATE_H	./../src/autoupdate.h	19;"	d
AVFORM_H	./../src/widget/form/settings/avform.h	18;"	d
AVForm	./../src/widget/form/settings/avform.cpp	/^AVForm::AVForm() :$/;"	f	class:AVForm
AVForm	./../src/widget/form/settings/avform.h	/^class AVForm : public GenericForm$/;"	c
AVSettings	./../ui_avsettings.h	/^    class AVSettings: public Ui_AVSettings {};$/;"	c	namespace:Ui
Accepted	./../src/widget/form/setpassworddialog.h	/^    enum ReturnCode {Rejected=QDialog::Rejected, Accepted=QDialog::Accepted, Tertiary};$/;"	e	enum:SetPasswordDialog::ReturnCode
AddFriendForm	./../src/widget/form/addfriendform.cpp	/^AddFriendForm::AddFriendForm()$/;"	f	class:AddFriendForm
AddFriendForm	./../src/widget/form/addfriendform.h	/^class AddFriendForm : public QObject$/;"	c
AdjustingScrollArea	./../src/widget/adjustingscrollarea.cpp	/^AdjustingScrollArea::AdjustingScrollArea(QWidget *parent)$/;"	f	class:AdjustingScrollArea
AdjustingScrollArea	./../src/widget/adjustingscrollarea.h	/^class AdjustingScrollArea : public QScrollArea$/;"	c
AdvancedForm	./../src/widget/form/settings/advancedform.cpp	/^AdvancedForm::AdvancedForm() :$/;"	f	class:AdvancedForm
AdvancedForm	./../src/widget/form/settings/advancedform.h	/^class AdvancedForm : public GenericForm$/;"	c
AdvancedSettings	./../ui_advancedsettings.h	/^    class AdvancedSettings: public Ui_AdvancedSettings {};$/;"	c	namespace:Ui
AecConfig	./../libs/filter_audio/aec/include/echo_cancellation.h	/^} AecConfig;$/;"	t	typeref:struct:__anon20
AecCore	./../libs/filter_audio/aec/aec_core.h	/^typedef struct AecCore AecCore;$/;"	t	typeref:struct:AecCore
AecCore	./../libs/filter_audio/aec/aec_core_internal.h	/^struct AecCore {$/;"	s
AecLevel	./../libs/filter_audio/aec/include/echo_cancellation.h	/^} AecLevel;$/;"	t	typeref:struct:__anon21
AecMetrics	./../libs/filter_audio/aec/include/echo_cancellation.h	/^} AecMetrics;$/;"	t	typeref:struct:__anon22
AgcVad_t	./../libs/filter_audio/agc/digital_agc.h	/^} AgcVad_t; \/\/ total = 54 bytes$/;"	t	typeref:struct:__anon3
Agc_t	./../libs/filter_audio/agc/analog_agc.h	/^} Agc_t;$/;"	t	typeref:struct:__anon1
Align	./../src/chatlog/chatline.h	/^    enum Align {$/;"	g	struct:ColumnFormat
AnalysisUpdate	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*AnalysisUpdate)(NsxInst_t* inst,$/;"	t
AnalysisUpdateC	./../libs/filter_audio/ns/nsx_core.c	/^static void AnalysisUpdateC(NsxInst_t* inst,$/;"	f	file:
Android	./../ui_android.h	/^    class Android: public Ui_Android {};$/;"	c	namespace:Ui
AndroidGUI	./../src/widget/androidgui.cpp	/^AndroidGUI::AndroidGUI(QWidget *parent) :$/;"	f	class:AndroidGUI
AndroidGUI	./../src/widget/androidgui.h	/^class AndroidGUI : public QWidget$/;"	c
Audio	./../src/audio.h	/^class Audio : QObject$/;"	c
AudioFilterer	./../src/audiofilterer.h	/^class AudioFilterer$/;"	c
AutoScrollDirection	./../src/chatlog/chatlog.h	/^    enum AutoScrollDirection {$/;"	g	class:ChatLog
AutoUpdater	./../src/autoupdate.h	/^class AutoUpdater$/;"	c
Away	./../src/corestructs.h	/^enum class Status : int {Online = 0, Away, Busy, Offline};$/;"	m	class:Status
BASE_NAME	./../libs/filter_audio/Makefile	/^BASE_NAME = libfilteraudio$/;"	m
BGR	./../src/video/videoframe.h	/^        BGR,$/;"	e	enum:VideoFrame::ColorFormat
BIN_SIZE_LRT	./../libs/filter_audio/ns/nsx_defines.h	38;"	d
BLOCKL_MAX	./../libs/filter_audio/ns/defines.h	14;"	d
BROKEN	./../src/corestructs.h	/^        BROKEN$/;"	e	enum:ToxFile::FileStatus
B_LIM	./../libs/filter_audio/ns/defines.h	47;"	d
Big	./../src/misc/style.h	/^        Big,        \/\/ [SystemDefault    ]px$/;"	e	enum:Style::Font
BigBold	./../src/misc/style.h	/^        BigBold,    \/\/ [SystemDefault    ]px, bold$/;"	e	enum:Style::Font
BinaryDelayEstimator	./../libs/filter_audio/other/delay_estimator.h	/^} BinaryDelayEstimator;$/;"	t	typeref:struct:__anon25
BinaryDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator.h	/^} BinaryDelayEstimatorFarend;$/;"	t	typeref:struct:__anon24
BinarySpectrumFix	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^static uint32_t BinarySpectrumFix(const uint16_t* spectrum,$/;"	f	file:
BinarySpectrumFloat	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^static uint32_t BinarySpectrumFloat(const float* spectrum,$/;"	f	file:
BitCount	./../libs/filter_audio/other/delay_estimator.c	/^static int BitCount(uint32_t u32) {$/;"	f	file:
BitCountComparison	./../libs/filter_audio/other/delay_estimator.c	/^static void BitCountComparison(uint32_t binary_vector,$/;"	f	file:
Black	./../src/misc/style.h	/^        Black,$/;"	e	enum:Style::ColorPalette
BrightnessSlider	./../ui_avsettings.h	/^    QSlider *BrightnessSlider;$/;"	m	class:Ui_AVSettings
Busy	./../src/corestructs.h	/^enum class Status : int {Online = 0, Away, Busy, Offline};$/;"	m	class:Status
CALLCONFIRMWIDGET_H	./../src/widget/callconfirmwidget.h	2;"	d
CAMERAWORKER_H	./../src/video/cameraworker.h	18;"	d
CAMERA_H	./../src/video/camera.h	18;"	d
CC	./../Makefile	/^CC            = gcc$/;"	m
CDATA_H	./../src/misc/cdata.h	18;"	d
CData	./../src/misc/cdata.cpp	/^CData::CData(const QString &data, uint16_t byteSize)$/;"	f	class:CData
CData	./../src/misc/cdata.h	/^class CData$/;"	c
CFFTRND	./../libs/filter_audio/other/complex_fft.c	22;"	d	file:
CFFTRND2	./../libs/filter_audio/other/complex_fft.c	23;"	d	file:
CFFTSFT	./../libs/filter_audio/other/complex_fft.c	21;"	d	file:
CFLAGS	./../Makefile	/^CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT -fPIE $(DEFINES)$/;"	m
CFriendAddress	./../src/misc/cdata.cpp	/^CFriendAddress::CFriendAddress(const QString &friendAddress) :$/;"	f	class:CFriendAddress
CFriendAddress	./../src/misc/cdata.h	/^class CFriendAddress : public CData$/;"	c
CHATFORM_H	./../src/widget/form/chatform.h	18;"	d
CHATLINECONTENTPROXY_H	./../src/chatlog/chatlinecontentproxy.h	18;"	d
CHATLINECONTENT_H	./../src/chatlog/chatlinecontent.h	18;"	d
CHATLINE_H	./../src/chatlog/chatline.h	18;"	d
CHATLOG_H	./../src/chatlog/chatlog.h	18;"	d
CHATMESSAGE_H	./../src/chatlog/chatmessage.h	18;"	d
CHATTEXTEDIT_H	./../src/widget/tool/chattextedit.h	18;"	d
CHK_DIR_EXISTS	./../Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CIFFTRND	./../libs/filter_audio/other/complex_fft.c	26;"	d	file:
CIFFTSFT	./../libs/filter_audio/other/complex_fft.c	25;"	d	file:
CLASSPATH	./../android/gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CMD_LINE_ARGS	./../android/gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	./../android/gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
CMD_LINE_ARGS	./../android/gradlew.bat	/^set CMD_LINE_ARGS=%\$$/;"	v
COMPRESS	./../Makefile	/^COMPRESS      = gzip -9f$/;"	m
CONFIG_FILE_NAME	./../src/core.cpp	/^const QString Core::CONFIG_FILE_NAME = "data";$/;"	m	class:Core	file:
CONFIG_FILE_NAME	./../src/core.h	/^    static const QString CONFIG_FILE_NAME;$/;"	m	class:Core
COPY	./../Makefile	/^COPY          = cp -f$/;"	m
COPY_DIR	./../Makefile	/^COPY_DIR      = cp -f -R$/;"	m
COPY_FILE	./../Makefile	/^COPY_FILE     = cp -f$/;"	m
COREAV_H	./../src/coreav.h	2;"	d
COREDEFINES_H	./../src/coredefines.h	2;"	d
CORESTRUCTS_H	./../src/corestructs.h	2;"	d
CORE_DISCONNECT_TOLERANCE	./../src/core.cpp	323;"	d	file:
CORE_HPP	./../src/core.h	18;"	d
CROPPINGLABEL_H	./../src/widget/croppinglabel.h	18;"	d
CSTRING_H	./../src/misc/cstring.h	18;"	d
CString	./../src/misc/cstring.cpp	/^CString::CString(const CString &cstr)$/;"	f	class:CString
CString	./../src/misc/cstring.cpp	/^CString::CString(const QByteArray& ba_string)$/;"	f	class:CString
CString	./../src/misc/cstring.cpp	/^CString::CString(const QString& string) :$/;"	f	class:CString
CString	./../src/misc/cstring.h	/^class CString$/;"	c
CUSTOMTEXTDOCUMENT_H	./../src/chatlog/customtextdocument.h	18;"	d
CUserId	./../src/misc/cdata.cpp	/^CUserId::CUserId(const QString &userId) :$/;"	f	class:CUserId
CUserId	./../src/misc/cdata.h	/^class CUserId : public CData$/;"	c
CXX	./../Makefile	/^CXX           = g++$/;"	m
CXXFLAGS	./../Makefile	/^CXXFLAGS      = -m64 -pipe -O2 -std=c++0x -Wall -W -D_REENTRANT -fPIE $(DEFINES)$/;"	m
CallConfirmWidget	./../src/widget/callconfirmwidget.cpp	/^CallConfirmWidget::CallConfirmWidget(const QWidget *Anchor) :$/;"	f	class:CallConfirmWidget
CallConfirmWidget	./../src/widget/callconfirmwidget.h	/^class CallConfirmWidget : public QWidget$/;"	c
CamFrame	./../ui_avsettings.h	/^    QFrame *CamFrame;$/;"	m	class:Ui_AVSettings
CamVideoSurface	./../ui_avsettings.h	/^    VideoSurface *CamVideoSurface;$/;"	m	class:Ui_AVSettings
Camera	./../src/video/camera.cpp	/^Camera::Camera()$/;"	f	class:Camera
Camera	./../src/video/camera.h	/^class Camera : public VideoSource$/;"	c
CameraWorker	./../src/video/cameraworker.cpp	/^CameraWorker::CameraWorker(int index)$/;"	f	class:CameraWorker
CameraWorker	./../src/video/cameraworker.h	/^class CameraWorker : public QObject$/;"	c
Center	./../src/chatlog/chatline.h	/^        Center,$/;"	e	enum:ColumnFormat::Align
ChatForm	./../src/widget/form/chatform.cpp	/^ChatForm::ChatForm(Friend* chatFriend)$/;"	f	class:ChatForm
ChatForm	./../src/widget/form/chatform.h	/^class ChatForm : public GenericChatForm$/;"	c
ChatLine	./../src/chatlog/chatline.cpp	/^ChatLine::ChatLine()$/;"	f	class:ChatLine
ChatLine	./../src/chatlog/chatline.h	/^class ChatLine$/;"	c
ChatLineContent	./../src/chatlog/chatlinecontent.h	/^class ChatLineContent : public QGraphicsItem$/;"	c
ChatLineContentProxy	./../src/chatlog/chatlinecontentproxy.cpp	/^ChatLineContentProxy::ChatLineContentProxy(QWidget* widget, int minWidth, float widthInPercent)$/;"	f	class:ChatLineContentProxy
ChatLineContentProxy	./../src/chatlog/chatlinecontentproxy.h	/^class ChatLineContentProxy : public ChatLineContent$/;"	c
ChatLineContentType	./../src/chatlog/chatlinecontent.h	/^        ChatLineContentType = QGraphicsItem::UserType + 1,$/;"	e	enum:ChatLineContent::GraphicsItemType
ChatLog	./../src/chatlog/chatlog.cpp	/^ChatLog::ChatLog(QWidget* parent)$/;"	f	class:ChatLog
ChatLog	./../src/chatlog/chatlog.h	/^class ChatLog : public QGraphicsView$/;"	c
ChatMessage	./../src/chatlog/chatmessage.cpp	/^ChatMessage::ChatMessage()$/;"	f	class:ChatMessage
ChatMessage	./../src/chatlog/chatmessage.h	/^class ChatMessage : public ChatLine$/;"	c
ChatTextEdit	./../src/widget/tool/chattextedit.cpp	/^ChatTextEdit::ChatTextEdit(QWidget *parent) :$/;"	f	class:ChatTextEdit
ChatTextEdit	./../src/widget/tool/chattextedit.h	/^class ChatTextEdit : public QTextEdit$/;"	c
ChatType	./../src/historykeeper.h	/^    enum ChatType {ctSingle = 0, ctGroup};$/;"	g	class:HistoryKeeper
ClickableTE	./../src/widget/form/settings/identityform.h	/^class ClickableTE : public QLineEdit$/;"	c
CmpFloat	./../libs/filter_audio/aec/aec_core.c	/^static int CmpFloat(const void* a, const void* b) {$/;"	f	file:
ColorFormat	./../src/video/videoframe.h	/^    enum ColorFormat$/;"	g	struct:VideoFrame
ColorPalette	./../src/misc/style.h	/^    enum ColorPalette$/;"	g	class:Style
ColumnFormat	./../src/chatlog/chatline.h	/^    ColumnFormat() {}$/;"	f	struct:ColumnFormat
ColumnFormat	./../src/chatlog/chatline.h	/^    ColumnFormat(qreal s, Policy p, Align halign = Left)$/;"	f	struct:ColumnFormat
ColumnFormat	./../src/chatlog/chatline.h	/^struct ColumnFormat$/;"	s
ComfortNoise	./../libs/filter_audio/aec/aec_core.c	/^static void ComfortNoise(AecCore* aec,$/;"	f	file:
ComputeDdBasedWienerFilter	./../libs/filter_audio/ns/ns_core.c	/^static void ComputeDdBasedWienerFilter(const NSinst_t* self,$/;"	f	file:
ComputeSnr	./../libs/filter_audio/ns/ns_core.c	/^static void ComputeSnr(const NSinst_t* self,$/;"	f	file:
ComputeSpectralDifference	./../libs/filter_audio/ns/ns_core.c	/^static void ComputeSpectralDifference(NSinst_t* self,$/;"	f	file:
ComputeSpectralFlatness	./../libs/filter_audio/ns/ns_core.c	/^static void ComputeSpectralFlatness(NSinst_t* self, const float* magnIn) {$/;"	f	file:
ContrastSlider	./../ui_avsettings.h	/^    QSlider *ContrastSlider;$/;"	m	class:Ui_AVSettings
Core	./../src/core.cpp	/^Core::Core(Camera* cam, QThread *CoreThread, QString loadPath) :$/;"	f	class:Core
Core	./../src/core.h	/^class Core : public QObject$/;"	c
CreateRealFFT	./../libs/filter_audio/other/real_fft.h	/^typedef struct RealFFT* (*CreateRealFFT)(int order);$/;"	t	typeref:struct:CreateRealFFT
CroppingLabel	./../src/widget/croppinglabel.cpp	/^CroppingLabel::CroppingLabel(QWidget* parent)$/;"	f	class:CroppingLabel
CroppingLabel	./../src/widget/croppinglabel.h	/^class CroppingLabel : public QLabel$/;"	c
CrossCorrelation	./../libs/filter_audio/other/signal_processing_library.h	/^typedef void (*CrossCorrelation)(int32_t* cross_correlation,$/;"	t
CustomTextDocument	./../src/chatlog/customtextdocument.cpp	/^CustomTextDocument::CustomTextDocument(QObject *parent)$/;"	f	class:CustomTextDocument
CustomTextDocument	./../src/chatlog/customtextdocument.h	/^class CustomTextDocument : public QTextDocument$/;"	c
DD_PR_SNR	./../libs/filter_audio/ns/defines.h	31;"	d
DD_PR_SNR_Q11	./../libs/filter_audio/ns/nsx_defines.h	25;"	d
DEFAULT_JVM_OPTS	./../android/gradlew.bat	/^set DEFAULT_JVM_OPTS=$/;"	v
DEFINES	./../Makefile	/^DEFINES       = -DGIT_VERSION="\\"2ea3d73756b5e846dac461f9762eaca12dad8134\\"" -DTIMESTAMP=1425879168 -DLOG_TO_FILE -DQTOX_PLATFORM_EXT -DQTOX_FILTER_AUDIO -DENABLE_SYSTRAY_STATUSNOTIFIER_BACKEND -DENABLE_SYSTRAY_GTK_BACKEND -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_SQL_LIB -DQT_XML_LIB -DQT_NETWORK_LIB -DQT_GUI_LIB -DQT_CORE_LIB$/;"	m
DEL_DIR	./../Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_FILE	./../Makefile	/^DEL_FILE      = rm -f$/;"	m
DESTDIR	./../Makefile	/^DESTDIR       = #avoid trailing-slash linebreak$/;"	m
DIFF_REF_TO_ANALOG	./../libs/filter_audio/agc/analog_agc.c	64;"	d	file:
DIFF_WRAP	./../libs/filter_audio/other/ring_buffer.c	/^  DIFF_WRAP$/;"	e	enum:Wrap	file:
DIGITAL_REF_AT_0_COMP_GAIN	./../libs/filter_audio/agc/analog_agc.c	61;"	d	file:
DIRNAME	./../android/gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	./../android/gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
DIST	./../Makefile	/^DIST          = \/usr\/lib\/x86_64-linux-gnu\/qt5\/mkspecs\/features\/spec_pre.prf \\$/;"	m
DOCUMENTCACHE_H	./../src/chatlog/documentcache.h	18;"	d
DarkGrey	./../src/misc/style.h	/^        DarkGrey,$/;"	e	enum:Style::ColorPalette
Db	./../src/historykeeper.h	/^namespace Db { enum class syncType; }$/;"	n
Db	./../src/misc/db/plaindb.h	/^namespace Db {$/;"	n
Db	./../src/misc/settings.h	/^namespace Db { enum class syncType; }$/;"	n
DelayEstimator	./../libs/filter_audio/other/delay_estimator_internal.h	/^} DelayEstimator;$/;"	t	typeref:struct:__anon40
DelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator_internal.h	/^} DelayEstimatorFarend;$/;"	t	typeref:struct:__anon39
Denormalize	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*Denormalize) (NsxInst_t* inst, int16_t* in, int factor);$/;"	t
DenormalizeC	./../libs/filter_audio/ns/nsx_core.c	/^static void DenormalizeC(NsxInst_t* inst, int16_t* in, int factor) {$/;"	f	file:
DhtServer	./../src/corestructs.h	/^struct DhtServer$/;"	s
DhtServer	./../src/misc/settings.h	/^    struct DhtServer$/;"	s	class:Settings
DigitalAgc_t	./../libs/filter_audio/agc/digital_agc.h	/^} DigitalAgc_t;$/;"	t	typeref:struct:__anon4
DocumentCache	./../src/chatlog/documentcache.h	/^    DocumentCache() {}$/;"	f	class:DocumentCache
DocumentCache	./../src/chatlog/documentcache.h	/^class DocumentCache$/;"	c
Down	./../src/chatlog/chatlog.h	/^        Down,$/;"	e	enum:ChatLog::AutoScrollDirection
DownsampleFast	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int (*DownsampleFast)(const int16_t* data_in,$/;"	t
EMOTICONSWIDGET_H	./../src/widget/emoticonswidget.h	18;"	d
ENCRYPTEDDB_H	./../src/misc/db/encrypteddb.h	18;"	d
END_STARTUP_LONG	./../libs/filter_audio/ns/defines.h	21;"	d
END_STARTUP_LONG	./../libs/filter_audio/ns/nsx_defines.h	17;"	d
END_STARTUP_SHORT	./../libs/filter_audio/ns/defines.h	22;"	d
END_STARTUP_SHORT	./../libs/filter_audio/ns/nsx_defines.h	18;"	d
ERROR	./../src/chatlog/chatmessage.h	/^        ERROR,$/;"	e	enum:ChatMessage::SystemMessageType
EVENT_GC_TIMEOUT	./../src/ipc.h	/^    static const int EVENT_GC_TIMEOUT = 5;$/;"	m	class:IPC
EVENT_QUEUE_SIZE	./../src/ipc.h	/^    static const int EVENT_QUEUE_SIZE = 32;$/;"	m	class:IPC
EVENT_TIMER_MS	./../src/ipc.h	/^    static const int EVENT_TIMER_MS = 1000;$/;"	m	class:IPC
EXIT_UPDATE_MACX	./../src/main.cpp	41;"	d	file:
EXIT_UPDATE_MACX_FAIL	./../src/main.cpp	42;"	d	file:
EmoticonsWidget	./../src/widget/emoticonswidget.cpp	/^EmoticonsWidget::EmoticonsWidget(QWidget *parent) :$/;"	f	class:EmoticonsWidget
EmoticonsWidget	./../src/widget/emoticonswidget.h	/^class EmoticonsWidget : public QMenu$/;"	c
EncryptedDb	./../src/misc/db/encrypteddb.cpp	/^EncryptedDb::EncryptedDb(const QString &fname, QList<QString> initList) :$/;"	f	class:EncryptedDb
EncryptedDb	./../src/misc/db/encrypteddb.h	/^class EncryptedDb : public PlainDb$/;"	c
Energy	./../libs/filter_audio/ns/ns_core.c	/^static float Energy(const float* buffer, int length) {$/;"	f	file:
EstBufDelayExtended	./../libs/filter_audio/aec/echo_cancellation.c	/^static void EstBufDelayExtended(aecpc_t* self) {$/;"	f	file:
EstBufDelayNormal	./../libs/filter_audio/aec/echo_cancellation.c	/^static void EstBufDelayNormal(aecpc_t* aecpc) {$/;"	f	file:
EstimateSkew	./../libs/filter_audio/aec/aec_resampler.c	/^int EstimateSkew(const int* rawSkew,$/;"	f
ExtraBig	./../src/misc/style.h	/^        ExtraBig,   \/\/ [SystemDefault + 2]px, bold$/;"	e	enum:Style::Font
FACTOR	./../libs/filter_audio/ns/defines.h	23;"	d
FACTOR_1_LRT_DIFF	./../libs/filter_audio/ns/nsx_defines.h	41;"	d
FACTOR_2_FLAT_Q10	./../libs/filter_audio/ns/nsx_defines.h	43;"	d
FACTOR_Q16	./../libs/filter_audio/ns/nsx_defines.h	19;"	d
FACTOR_Q7	./../libs/filter_audio/ns/nsx_defines.h	20;"	d
FACTOR_Q7_STARTUP	./../libs/filter_audio/ns/nsx_defines.h	21;"	d
FFT	./../libs/filter_audio/ns/ns_core.c	/^static void FFT(NSinst_t* self,$/;"	f	file:
FILENAME	./../src/misc/settings.cpp	/^const QString Settings::FILENAME = "qtox.ini";$/;"	m	class:Settings	file:
FILENAME	./../src/misc/settings.h	/^    static const QString FILENAME;$/;"	m	class:Settings
FILENAME	./../updater/settingsDir.cpp	/^const QString FILENAME = "settings.ini";$/;"	v
FILESFORM_H	./../src/widget/form/filesform.h	18;"	d
FILETRANSFERWIDGET_H	./../src/chatlog/content/filetransferwidget.h	18;"	d
FILTER_AUDIO	./../libs/filter_audio/filter_audio.h	3;"	d
FIX_SND_PCM_PREPARE_BUG	./../src/audio.cpp	24;"	d	file:
FLOWLAYOUT_H	./../src/misc/flowlayout.h	42;"	d
FRAME_LEN	./../libs/filter_audio/aec/aec_core.h	20;"	d
FRIENDLISTWIDGET_H	./../src/widget/friendlistwidget.h	18;"	d
FRIENDLIST_H	./../src/friendlist.h	18;"	d
FRIENDREQUESTDIALOG_HPP	./../src/widget/tool/friendrequestdialog.h	18;"	d
FRIENDWIDGET_H	./../src/widget/friendwidget.h	18;"	d
FRIEND_H	./../src/friend.h	18;"	d
FeatureParameterExtraction	./../libs/filter_audio/ns/ns_core.c	/^static void FeatureParameterExtraction(NSinst_t* self, int flag) {$/;"	f	file:
FeatureUpdate	./../libs/filter_audio/ns/ns_core.c	/^static void FeatureUpdate(NSinst_t* self,$/;"	f	file:
FileStatus	./../src/corestructs.h	/^    enum FileStatus$/;"	g	struct:ToxFile
FileTransferWidget	./../src/chatlog/content/filetransferwidget.cpp	/^FileTransferWidget::FileTransferWidget(QWidget *parent, ToxFile file)$/;"	f	class:FileTransferWidget
FileTransferWidget	./../src/chatlog/content/filetransferwidget.h	/^class FileTransferWidget : public QWidget$/;"	c
FileTransferWidget	./../ui_filetransferwidget.h	/^    class FileTransferWidget: public Ui_FileTransferWidget {};$/;"	c	namespace:Ui
FilesForm	./../src/widget/form/filesform.cpp	/^FilesForm::FilesForm()$/;"	f	class:FilesForm
FilesForm	./../src/widget/form/filesform.h	/^class FilesForm : public QObject$/;"	c
FilterAdaptation	./../libs/filter_audio/aec/aec_core.c	/^static void FilterAdaptation(AecCore* aec, float* fft, float ef[2][PART_LEN1]) {$/;"	f	file:
FilterAdaptationSSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void FilterAdaptationSSE2(AecCore* aec,$/;"	f	file:
FilterFar	./../libs/filter_audio/aec/aec_core.c	/^static void FilterFar(AecCore* aec, float yf[2][PART_LEN1]) {$/;"	f	file:
FilterFarSSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void FilterFarSSE2(AecCore* aec, float yf[2][PART_LEN1]) {$/;"	f	file:
FilterState	./../libs/filter_audio/other/signal_processing_library.h	/^} FilterState;$/;"	t	typeref:struct:__anon37
Filter_Audio	./../libs/filter_audio/filter_audio.c	/^} Filter_Audio;$/;"	t	typeref:struct:__anon42	file:
Filter_Audio	./../libs/filter_audio/filter_audio.h	/^typedef struct Filter_Audio Filter_Audio;$/;"	t	typeref:struct:Filter_Audio
Filter_Audio	./../src/audiofilterer.h	/^typedef struct Filter_Audio Filter_Audio;$/;"	t	typeref:struct:Filter_Audio
FixedSize	./../src/chatlog/chatline.h	/^        FixedSize,$/;"	e	enum:ColumnFormat::Policy
FloatS16ToS16	./../libs/filter_audio/other/float_util.c	/^void FloatS16ToS16(const float* src, size_t size, int16_t* dest) {$/;"	f
FloatS16ToS16_C	./../libs/filter_audio/other/float_util.c	/^static int16_t FloatS16ToS16_C(float v) {$/;"	f	file:
FlowLayout	./../src/misc/flowlayout.cpp	/^FlowLayout::FlowLayout(QWidget *parent, int margin, int hSpacing, int vSpacing)$/;"	f	class:FlowLayout
FlowLayout	./../src/misc/flowlayout.cpp	/^FlowLayout::FlowLayout(int margin, int hSpacing, int vSpacing)$/;"	f	class:FlowLayout
FlowLayout	./../src/misc/flowlayout.h	/^class FlowLayout : public QLayout$/;"	c
Font	./../src/misc/style.h	/^    enum Font$/;"	g	class:Style
FreeRealFFT	./../libs/filter_audio/other/real_fft.h	/^typedef void (*FreeRealFFT)(struct RealFFT* self);$/;"	t
Friend	./../src/friend.cpp	/^Friend::Friend(int FriendId, const ToxID &UserId)$/;"	f	class:Friend
Friend	./../src/friend.h	/^struct Friend$/;"	s
FriendList	./../src/friendlist.h	/^class FriendList$/;"	c
FriendListWidget	./../src/widget/friendlistwidget.cpp	/^FriendListWidget::FriendListWidget(QWidget *parent) :$/;"	f	class:FriendListWidget
FriendListWidget	./../src/widget/friendlistwidget.h	/^class FriendListWidget : public QWidget$/;"	c
FriendRequestDialog	./../src/widget/tool/friendrequestdialog.cpp	/^FriendRequestDialog::FriendRequestDialog(QWidget *parent, const QString &userId, const QString &message) :$/;"	f	class:FriendRequestDialog
FriendRequestDialog	./../src/widget/tool/friendrequestdialog.h	/^class FriendRequestDialog : public QDialog$/;"	c
FriendWidget	./../src/widget/friendwidget.cpp	/^FriendWidget::FriendWidget(int FriendId, QString id)$/;"	f	class:FriendWidget
FriendWidget	./../src/widget/friendwidget.h	/^struct FriendWidget : public GenericChatroomWidget$/;"	s
GAIN_TBL_LEN	./../libs/filter_audio/agc/analog_agc.c	70;"	d	file:
GAMMA_NOISE_TRANS_AND_SPEECH_Q8	./../libs/filter_audio/ns/nsx_defines.h	61;"	d
GAMMA_PAUSE	./../libs/filter_audio/ns/defines.h	45;"	d
GENERALFORM_H	./../src/widget/form/settings/generalform.h	18;"	d
GENERICCHATFORM_H	./../src/widget/form/genericchatform.h	18;"	d
GENERICCHATROOMWIDGET_H	./../src/widget/genericchatroomwidget.h	18;"	d
GENERICDDINTERFACE_H	./../src/misc/db/genericddinterface.h	18;"	d
GENERICFORM_H	./../src/widget/form/settings/genericsettings.h	18;"	d
GROUPCHATFORM_H	./../src/widget/form/groupchatform.h	18;"	d
GROUPCHAT_MAX_SIZE	./../src/coredefines.h	5;"	d
GROUPLIST_H	./../src/grouplist.h	18;"	d
GROUPWIDGET_H	./../src/widget/groupwidget.h	18;"	d
GROUP_H	./../src/group.h	18;"	d
GTK	./../src/widget/systemtrayicon_private.h	/^    GTK,$/;"	m	class:SystrayBackendType
GUI	./../src/widget/gui.cpp	/^GUI::GUI(QObject *parent) :$/;"	f	class:GUI
GUI	./../src/widget/gui.h	/^class GUI : public QObject$/;"	c
GUI_H	./../src/widget/gui.h	2;"	d
GeneralForm	./../src/widget/form/settings/generalform.cpp	/^GeneralForm::GeneralForm(SettingsWidget *myParent) :$/;"	f	class:GeneralForm
GeneralForm	./../src/widget/form/settings/generalform.h	/^class GeneralForm : public GenericForm$/;"	c
GeneralSettings	./../ui_generalsettings.h	/^    class GeneralSettings: public Ui_GeneralSettings {};$/;"	c	namespace:Ui
GenericChatForm	./../src/widget/form/genericchatform.cpp	/^GenericChatForm::GenericChatForm(QWidget *parent)$/;"	f	class:GenericChatForm
GenericChatForm	./../src/widget/form/genericchatform.h	/^class GenericChatForm : public QWidget$/;"	c
GenericChatroomWidget	./../src/widget/genericchatroomwidget.cpp	/^GenericChatroomWidget::GenericChatroomWidget(QWidget *parent)$/;"	f	class:GenericChatroomWidget
GenericChatroomWidget	./../src/widget/genericchatroomwidget.h	/^class GenericChatroomWidget : public QFrame$/;"	c
GenericDdInterface	./../src/misc/db/genericddinterface.h	/^class GenericDdInterface$/;"	c
GenericForm	./../src/widget/form/settings/genericsettings.h	/^    GenericForm(const QString &name, const QPixmap &icon) : formName(name), formIcon(icon) {;}$/;"	f	class:GenericForm
GenericForm	./../src/widget/form/settings/genericsettings.h	/^class GenericForm : public QWidget$/;"	c
GetBufferReadRegions	./../libs/filter_audio/other/ring_buffer.c	/^static size_t GetBufferReadRegions(RingBuffer* buf,$/;"	f	file:
GetHighbandGain	./../libs/filter_audio/aec/aec_core.c	/^static void GetHighbandGain(const float* lambda, float* nlpGainHband) {$/;"	f	file:
GraphicsItemType	./../src/chatlog/chatlinecontent.h	/^    enum GraphicsItemType$/;"	g	class:ChatLineContent
Green	./../src/misc/style.h	/^        Green,$/;"	e	enum:Style::ColorPalette
Group	./../src/group.cpp	/^Group::Group(int GroupId, QString Name, bool IsAvGroupchat)$/;"	f	class:Group
Group	./../src/group.h	/^class Group : public QObject$/;"	c
GroupChatForm	./../src/widget/form/groupchatform.cpp	/^GroupChatForm::GroupChatForm(Group* chatGroup)$/;"	f	class:GroupChatForm
GroupChatForm	./../src/widget/form/groupchatform.h	/^class GroupChatForm : public GenericChatForm$/;"	c
GroupList	./../src/grouplist.h	/^class GroupList$/;"	c
GroupWidget	./../src/widget/groupwidget.cpp	/^GroupWidget::GroupWidget(int GroupId, QString Name)$/;"	f	class:GroupWidget
GroupWidget	./../src/widget/groupwidget.h	/^class GroupWidget : public GenericChatroomWidget$/;"	c
HALF_ANAL_BLOCKL	./../libs/filter_audio/ns/defines.h	16;"	d
HALF_ANAL_BLOCKL	./../libs/filter_audio/ns/nsx_defines.h	15;"	d
HEADER	./../libs/filter_audio/Makefile	/^HEADER = filter_audio.h$/;"	m
HISTORYKEEPER_H	./../src/historykeeper.h	18;"	d
HIST_PAR_EST	./../libs/filter_audio/ns/defines.h	44;"	d
HIST_PAR_EST	./../libs/filter_audio/ns/nsx_defines.h	34;"	d
HPstate	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t HPstate;$/;"	m	struct:__anon3
HistMessage	./../src/historykeeper.h	/^        HistMessage(qint64 id, QString chat, QString sender, QString message, QDateTime timestamp, bool isSent) :$/;"	f	struct:HistoryKeeper::HistMessage
HistMessage	./../src/historykeeper.h	/^    struct HistMessage$/;"	s	class:HistoryKeeper
HistogramBasedValidation	./../libs/filter_audio/other/delay_estimator.c	/^static int HistogramBasedValidation(const BinaryDelayEstimator* self,$/;"	f	file:
HistoryKeeper	./../src/historykeeper.cpp	/^HistoryKeeper::HistoryKeeper(GenericDdInterface *db_) :$/;"	f	class:HistoryKeeper
HistoryKeeper	./../src/historykeeper.h	/^class HistoryKeeper$/;"	c
HueSlider	./../ui_avsettings.h	/^    QSlider *HueSlider;$/;"	m	class:Ui_AVSettings
ICONCACHE_H	./../src/chatlog/pixmapcache.h	18;"	d
IDENTITYFORM_H	./../src/widget/form/settings/identityform.h	18;"	d
IFFT	./../libs/filter_audio/ns/ns_core.c	/^static void IFFT(NSinst_t* self,$/;"	f	file:
IMAGE_H	./../src/chatlog/content/image.h	18;"	d
INCLUDEDIR	./../libs/filter_audio/Makefile	/^INCLUDEDIR ?= include$/;"	m
INCPATH	./../Makefile	/^INCPATH       = -I\/usr\/lib\/x86_64-linux-gnu\/qt5\/mkspecs\/linux-g++-64 -I. -Ilibs\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/lib64\/glib-2.0\/include -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -I\/usr\/include\/gtk-2.0 -I\/usr\/lib\/gtk-2.0\/include -I\/usr\/lib64\/gtk-2.0\/include -I\/usr\/lib\/i386-linux-gnu\/gtk-2.0\/include -I\/usr\/lib\/x86_64-linux-gnu\/gtk-2.0\/include -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/pango-1.0 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/lib64\/glib-2.0\/include -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -I\/usr\/include\/gtk-2.0 -I\/usr\/lib\/gtk-2.0\/include -I\/usr\/lib64\/gtk-2.0\/include -I\/usr\/lib\/i386-linux-gnu\/gtk-2.0\/include -I\/usr\/lib\/x86_64-linux-gnu\/gtk-2.0\/include -I\/usr\/include\/atk-1.0 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/qt5 -I\/usr\/include\/qt5\/QtSvg -I\/usr\/include\/qt5\/QtOpenGL -I\/usr\/include\/qt5\/QtWidgets -I\/usr\/include\/qt5\/QtSql -I\/usr\/include\/qt5\/QtXml -I\/usr\/include\/qt5\/QtNetwork -I\/usr\/include\/qt5\/QtGui -I\/usr\/include\/qt5\/QtCore -I. -I.$/;"	m
INFO	./../src/chatlog/chatmessage.h	/^        INFO,$/;"	e	enum:ChatMessage::SystemMessageType
INSTALL_DIR	./../Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_FILE	./../Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_PROGRAM	./../Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
IPC	./../src/ipc.cpp	/^IPC::IPC()$/;"	f	class:IPC
IPC	./../src/ipc.h	/^class IPC : public QThread$/;"	c
IPCEvent	./../src/ipc.h	/^    struct IPCEvent$/;"	s	class:IPC
IPCMemory	./../src/ipc.h	/^    struct IPCMemory$/;"	s	class:IPC
IPC_H	./../src/ipc.h	19;"	d
IPC_PROTOCOL_VERSION	./../src/ipc.h	32;"	d
IP_LENGTH	./../libs/filter_audio/ns/defines.h	27;"	d
IS_ON_DESKTOP_GUI	./../src/widget/widget.cpp	67;"	d	file:
IS_ON_DESKTOP_GUI	./../src/widget/widget.cpp	69;"	d	file:
IS_STATUS_NOTIFIER	./../src/platform/statusnotifier/statusnotifier.h	40;"	d
IS_STATUS_NOTIFIER_CLASS	./../src/platform/statusnotifier/statusnotifier.h	41;"	d
ITEM_INTERFACE	./../src/platform/statusnotifier/interfaces.h	34;"	d
ITEM_NAME	./../src/platform/statusnotifier/interfaces.h	32;"	d
ITEM_OBJECT	./../src/platform/statusnotifier/interfaces.h	33;"	d
IdentityForm	./../src/widget/form/settings/identityform.cpp	/^IdentityForm::IdentityForm() :$/;"	f	class:IdentityForm
IdentityForm	./../src/widget/form/settings/identityform.h	/^class IdentityForm : public GenericForm$/;"	c
IdentitySettings	./../ui_identitysettings.h	/^    class IdentitySettings: public Ui_IdentitySettings {};$/;"	c	namespace:Ui
Image	./../src/chatlog/content/image.cpp	/^Image::Image(QSize Size, const QString& filename)$/;"	f	class:Image
Image	./../src/chatlog/content/image.h	/^class Image : public ChatLineContent$/;"	c
IncreaseSeed	./../libs/filter_audio/other/randomization_functions.c	/^static uint32_t IncreaseSeed(uint32_t* seed) {$/;"	f	file:
InitFunctionPointers	./../libs/filter_audio/other/spl_init.c	/^static void InitFunctionPointers(void) {$/;"	f	file:
InitLevel	./../libs/filter_audio/aec/aec_core.c	/^static void InitLevel(PowerLevel* level) {$/;"	f	file:
InitMetrics	./../libs/filter_audio/aec/aec_core.c	/^static void InitMetrics(AecCore* self) {$/;"	f	file:
InitPointersToC	./../libs/filter_audio/other/spl_init.c	/^static void InitPointersToC() {$/;"	f	file:
InitPointersToMIPS	./../libs/filter_audio/other/spl_init.c	/^static void InitPointersToMIPS() {$/;"	f	file:
InitPointersToNeon	./../libs/filter_audio/other/spl_init.c	/^static void InitPointersToNeon() {$/;"	f	file:
InitStats	./../libs/filter_audio/aec/aec_core.c	/^static void InitStats(Stats* stats) {$/;"	f	file:
JAVA_EXE	./../android/gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	./../android/gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_HOME	./../android/gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
KDE5	./../src/widget/systemtrayicon_private.h	/^    KDE5,$/;"	m	class:SystrayBackendType
LFLAGS	./../Makefile	/^LFLAGS        = -m64 -Wl,-O1$/;"	m
LIBDIR	./../libs/filter_audio/Makefile	/^LIBDIR ?= lib$/;"	m
LIBS	./../Makefile	/^LIBS          = $(SUBLIBS) -L\/usr\/X11R6\/lib64 -L\/home\/sgupta51\/Research\/qTox\/libs\/lib\/ -ltoxcore -ltoxav -ltoxencryptsave -ltoxdns -lvpx -lsodium -lopenal -lopencv_core -lopencv_highgui -lopencv_imgproc -lX11 -lXss -lfilteraudio -lglib-2.0 -lgdk_pixbuf-2.0 -lgio-2.0 -lcairo -lgtk-x11-2.0 -lgdk-x11-2.0 -lgobject-2.0 -lQt5Svg -L\/usr\/lib\/x86_64-linux-gnu -lQt5OpenGL -lQt5Widgets -lQt5Sql -lQt5Xml -lQt5Network -lQt5Gui -lQt5Core -lGL -lpthread $/;"	m
LIM_PEAK_SPACE_FLAT_DIFF	./../libs/filter_audio/ns/nsx_defines.h	47;"	d
LIM_PEAK_WEIGHT_FLAT_DIFF	./../libs/filter_audio/ns/nsx_defines.h	49;"	d
LINK	./../Makefile	/^LINK          = g++$/;"	m
LOADHISTORYDIALOG_H	./../src/widget/form/loadhistorydialog.h	18;"	d
LRT_FEATURE_THR	./../libs/filter_audio/ns/defines.h	39;"	d
LRT_TAVG	./../libs/filter_audio/ns/defines.h	32;"	d
Left	./../src/chatlog/chatline.h	/^        Left,$/;"	e	enum:ColumnFormat::Align
LightGrey	./../src/misc/style.h	/^        LightGrey,$/;"	e	enum:Style::ColorPalette
ListWidgetItem	./../src/widget/form/filesform.h	/^class ListWidgetItem : public QListWidgetItem$/;"	c
LoadHistoryDialog	./../src/widget/form/loadhistorydialog.cpp	/^LoadHistoryDialog::LoadHistoryDialog(QWidget *parent) :$/;"	f	class:LoadHistoryDialog
LoadHistoryDialog	./../src/widget/form/loadhistorydialog.h	/^class LoadHistoryDialog : public QDialog$/;"	c
LoadHistoryDialog	./../ui_loadhistorydialog.h	/^    class LoadHistoryDialog: public Ui_LoadHistoryDialog {};$/;"	c	namespace:Ui
MAKEFILE	./../Makefile	/^MAKEFILE      = Makefile$/;"	m
MASKABLEPIXMAPWIDGET_H	./../src/widget/maskablepixmapwidget.h	18;"	d
MAX_DIFF	./../libs/filter_audio/ns/nsx_defines.h	54;"	d
MAX_FLAT_Q10	./../libs/filter_audio/ns/nsx_defines.h	52;"	d
MAX_GROUP_MESSAGE_LEN	./../src/core.cpp	51;"	d	file:
MAX_RESAMP_LEN	./../libs/filter_audio/aec/echo_cancellation.c	92;"	d	file:
MAX_SIZE_OF_UTF8_ENCODED_CHARACTER	./../src/misc/cstring.h	/^    const static int MAX_SIZE_OF_UTF8_ENCODED_CHARACTER = 4;$/;"	m	class:CString
MIN_DIFF	./../libs/filter_audio/ns/nsx_defines.h	55;"	d
MIN_FLAT_Q10	./../libs/filter_audio/ns/nsx_defines.h	53;"	d
MKDIR	./../Makefile	/^MKDIR         = mkdir -p$/;"	m
MOVE	./../Makefile	/^MOVE          = mv -f$/;"	m
MUL_ACCUM_1	./../libs/filter_audio/other/resample_by_2.c	/^static __inline int32_t MUL_ACCUM_1(int32_t tbl_value,$/;"	f	file:
MUL_ACCUM_1	./../libs/filter_audio/other/resample_by_2.c	62;"	d	file:
MUL_ACCUM_2	./../libs/filter_audio/other/resample_by_2.c	/^static __inline int32_t MUL_ACCUM_2(int32_t tbl_value,$/;"	f	file:
MUL_ACCUM_2	./../libs/filter_audio/other/resample_by_2.c	63;"	d	file:
MainWindow	./../ui_mainwindow.h	/^    class MainWindow: public Ui_MainWindow {};$/;"	c	namespace:Ui
MaskablePixmapWidget	./../src/widget/maskablepixmapwidget.cpp	/^MaskablePixmapWidget::MaskablePixmapWidget(QWidget *parent, QSize size, QString maskName)$/;"	f	class:MaskablePixmapWidget
MaskablePixmapWidget	./../src/widget/maskablepixmapwidget.h	/^class MaskablePixmapWidget : public QWidget$/;"	c
MaxAbsValueW16	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int16_t (*MaxAbsValueW16)(const int16_t* vector, int length);$/;"	t
MaxAbsValueW32	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int32_t (*MaxAbsValueW32)(const int32_t* vector, int length);$/;"	t
MaxValueW16	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int16_t (*MaxValueW16)(const int16_t* vector, int length);$/;"	t
MaxValueW32	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int32_t (*MaxValueW32)(const int32_t* vector, int length);$/;"	t
MeanEstimatorFloat	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^static void MeanEstimatorFloat(float new_value,$/;"	f	file:
Medium	./../src/misc/style.h	/^        Medium,     \/\/ [SystemDefault - 1]px$/;"	e	enum:Style::Font
MediumBold	./../src/misc/style.h	/^        MediumBold, \/\/ [SystemDefault - 1]px, bold$/;"	e	enum:Style::Font
MediumGrey	./../src/misc/style.h	/^        MediumGrey,$/;"	e	enum:Style::ColorPalette
MediumGreyLight	./../src/misc/style.h	/^        MediumGreyLight,$/;"	e	enum:Style::ColorPalette
MessageType	./../src/chatlog/chatmessage.h	/^    enum MessageType$/;"	g	class:ChatMessage
MinValueW16	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int16_t (*MinValueW16)(const int16_t* vector, int length);$/;"	t
MinValueW32	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int32_t (*MinValueW32)(const int32_t* vector, int length);$/;"	t
MsgPtr	./../src/offlinemsgengine.h	/^    struct MsgPtr {$/;"	s	class:OfflineMsgEngine
MulIm	./../libs/filter_audio/aec/aec_core.c	/^__inline static float MulIm(float aRe, float aIm, float bRe, float bIm) {$/;"	f	file:
MulIm	./../libs/filter_audio/aec/aec_core_sse2.c	/^__inline static float MulIm(float aRe, float aIm, float bRe, float bIm) {$/;"	f	file:
MulRe	./../libs/filter_audio/aec/aec_core.c	/^__inline static float MulRe(float aRe, float aIm, float bRe, float bIm) {$/;"	f	file:
MulRe	./../libs/filter_audio/aec/aec_core_sse2.c	/^__inline static float MulRe(float aRe, float aIm, float bRe, float bIm) {$/;"	f	file:
Multi	./../src/chatlog/chatlog.h	/^        Multi,$/;"	e	enum:ChatLog::SelectionMode
NAME_COL_WIDTH	./../src/chatlog/chatmessage.cpp	30;"	d	file:
NB_PROPS	./../src/platform/statusnotifier/statusnotifier.c	/^    NB_PROPS$/;"	e	enum:__anon43	file:
NB_SIGNALS	./../src/platform/statusnotifier/statusnotifier.c	/^    NB_SIGNALS$/;"	e	enum:__anon44	file:
NETCAMVIEW_H	./../src/widget/netcamview.h	18;"	d
NETVIDEOSOURCE_H	./../src/video/netvideosource.h	18;"	d
NEXUS_H	./../src/nexus.h	2;"	d
NOISE_UPDATE	./../libs/filter_audio/ns/defines.h	36;"	d
NOISE_UPDATE_Q8	./../libs/filter_audio/ns/nsx_defines.h	30;"	d
NONE	./../src/video/videoframe.h	/^        NONE,$/;"	e	enum:VideoFrame::ColorFormat
NORMAL	./../src/chatlog/chatmessage.h	/^        NORMAL,$/;"	e	enum:ChatMessage::MessageType
NOTIFICATIONICON_H	./../src/chatlog/content/notificationicon.h	18;"	d
NSParaExtract_t	./../libs/filter_audio/ns/ns_core.h	/^} NSParaExtract_t;$/;"	t	typeref:struct:NSParaExtract_t_
NSParaExtract_t_	./../libs/filter_audio/ns/ns_core.h	/^typedef struct NSParaExtract_t_ {$/;"	s
NSinst_t	./../libs/filter_audio/ns/ns_core.h	/^} NSinst_t;$/;"	t	typeref:struct:NSinst_t_
NSinst_t_	./../libs/filter_audio/ns/ns_core.h	/^typedef struct NSinst_t_ {$/;"	s
NUM_BLOCKS_IN_SAT_BEFORE_CHANGE_TARGET	./../libs/filter_audio/agc/analog_agc.c	67;"	d	file:
NetCamView	./../src/widget/netcamview.cpp	/^NetCamView::NetCamView(QWidget* parent)$/;"	f	class:NetCamView
NetCamView	./../src/widget/netcamview.h	/^class NetCamView : public QWidget$/;"	c
NetVideoSource	./../src/video/netvideosource.cpp	/^NetVideoSource::NetVideoSource()$/;"	f	class:NetVideoSource
NetVideoSource	./../src/video/netvideosource.h	/^class NetVideoSource : public VideoSource$/;"	c
Nexus	./../src/nexus.cpp	/^Nexus::Nexus(QObject *parent) :$/;"	f	class:Nexus
Nexus	./../src/nexus.h	/^class Nexus : public QObject$/;"	c
NoDirection	./../src/chatlog/chatlog.h	/^        NoDirection,$/;"	e	enum:ChatLog::AutoScrollDirection
NoiseEstimation	./../libs/filter_audio/ns/ns_core.c	/^static void NoiseEstimation(NSinst_t* self, float* magn, float* noise) {$/;"	f	file:
NoiseEstimation	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*NoiseEstimation)(NsxInst_t* inst,$/;"	t
NoiseEstimationC	./../libs/filter_audio/ns/nsx_core.c	/^static void NoiseEstimationC(NsxInst_t* inst,$/;"	f	file:
NonLinearProcessing	./../libs/filter_audio/aec/aec_core.c	/^static void NonLinearProcessing(AecCore* aec, float* output, float* outputH) {$/;"	f	file:
None	./../src/chatlog/chatlog.h	/^        None,$/;"	e	enum:ChatLog::SelectionMode
NormalizeRealBuffer	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*NormalizeRealBuffer) (NsxInst_t* inst,$/;"	t
NormalizeRealBufferC	./../libs/filter_audio/ns/nsx_core.c	/^static void NormalizeRealBufferC(NsxInst_t* inst,$/;"	f	file:
NotificationIcon	./../src/chatlog/content/notificationicon.cpp	/^NotificationIcon::NotificationIcon(QSize Size)$/;"	f	class:NotificationIcon
NotificationIcon	./../src/chatlog/content/notificationicon.h	/^class NotificationIcon : public QObject,  public ChatLineContent$/;"	c
NsHandle	./../libs/filter_audio/ns/include/noise_suppression.h	/^typedef struct NsHandleT NsHandle;$/;"	t	typeref:struct:NsHandleT
NsxHandle	./../libs/filter_audio/ns/include/noise_suppression_x.h	/^typedef struct NsxHandleT NsxHandle;$/;"	t	typeref:struct:NsxHandleT
NsxInst_t	./../libs/filter_audio/ns/nsx_core.h	/^} NsxInst_t;$/;"	t	typeref:struct:NsxInst_t_
NsxInst_t_	./../libs/filter_audio/ns/nsx_core.h	/^typedef struct NsxInst_t_ {$/;"	s
OBJ	./../libs/filter_audio/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJECTS	./../Makefile	/^OBJECTS       = audiofilterer.o \\$/;"	m
OBJECTS_DIR	./../Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OFFLINEMSGENGINE_H	./../src/offlinemsgengine.h	18;"	d
OFFSET_ENV_TO_RMS	./../libs/filter_audio/agc/analog_agc.c	56;"	d	file:
OLDFILENAME	./../src/misc/settings.cpp	/^const QString Settings::OLDFILENAME = "settings.ini";$/;"	m	class:Settings	file:
OLDFILENAME	./../src/misc/settings.h	/^    static const QString OLDFILENAME;$/;"	m	class:Settings
ONE_MINUS_DD_PR_SNR_Q11	./../libs/filter_audio/ns/nsx_defines.h	26;"	d
ONE_MINUS_GAMMA_PAUSE_Q8	./../libs/filter_audio/ns/nsx_defines.h	60;"	d
ONE_MINUS_PROB_RANGE_Q8	./../libs/filter_audio/ns/nsx_defines.h	33;"	d
OWNERSHIP_TIMEOUT_S	./../src/ipc.h	/^    static const int OWNERSHIP_TIMEOUT_S = 5;$/;"	m	class:IPC
OfflineMsgEngine	./../src/offlinemsgengine.cpp	/^OfflineMsgEngine::OfflineMsgEngine(Friend *frnd) :$/;"	f	class:OfflineMsgEngine
OfflineMsgEngine	./../src/offlinemsgengine.h	/^class OfflineMsgEngine : public QObject$/;"	c
Online	./../src/corestructs.h	/^enum class Status : int {Online = 0, Away, Busy, Offline};$/;"	m	class:Status
Orange	./../src/misc/style.h	/^        Orange,$/;"	e	enum:Style::ColorPalette
OverdriveAndSuppress	./../libs/filter_audio/aec/aec_core.c	/^static void OverdriveAndSuppress(AecCore* aec,$/;"	f	file:
OverdriveAndSuppressSSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void OverdriveAndSuppressSSE2(AecCore* aec,$/;"	f	file:
PART_LEN	./../libs/filter_audio/aec/aec_core.h	21;"	d
PART_LEN1	./../libs/filter_audio/aec/aec_core.h	22;"	d
PART_LEN2	./../libs/filter_audio/aec/aec_core.h	23;"	d
PAUSED	./../src/corestructs.h	/^        PAUSED,$/;"	e	enum:ToxFile::FileStatus
PC_FILE	./../libs/filter_audio/Makefile	/^PC_FILE = filteraudio.pc$/;"	m
PIXELS_TO_ACT	./../src/widget/widget.h	30;"	d
PLAINDB_H	./../src/misc/db/plaindb.h	18;"	d
PLATFORM_AUTORUN_H	./../src/platform/autorun.h	20;"	d
PLATFORM_TIMER_H	./../src/platform/timer.h	20;"	d
PREFIX	./../libs/filter_audio/Makefile	/^PREFIX ?= \/usr\/local$/;"	m
PRIOR_UPDATE	./../libs/filter_audio/ns/defines.h	35;"	d
PRIOR_UPDATE_Q14	./../libs/filter_audio/ns/nsx_defines.h	29;"	d
PRIVACYFORM_H	./../src/widget/form/settings/privacyform.h	18;"	d
PROB_RANGE	./../libs/filter_audio/ns/defines.h	42;"	d
PROP_0	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_0,$/;"	e	enum:__anon43	file:
PROP_ATTENTION_ICON_NAME	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_ATTENTION_ICON_NAME,$/;"	e	enum:__anon43	file:
PROP_ATTENTION_ICON_PIXBUF	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_ATTENTION_ICON_PIXBUF,$/;"	e	enum:__anon43	file:
PROP_ATTENTION_MOVIE_NAME	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_ATTENTION_MOVIE_NAME,$/;"	e	enum:__anon43	file:
PROP_CATEGORY	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_CATEGORY,$/;"	e	enum:__anon43	file:
PROP_ID	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_ID,$/;"	e	enum:__anon43	file:
PROP_MAIN_ICON_NAME	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_MAIN_ICON_NAME,$/;"	e	enum:__anon43	file:
PROP_MAIN_ICON_PIXBUF	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_MAIN_ICON_PIXBUF,$/;"	e	enum:__anon43	file:
PROP_OVERLAY_ICON_NAME	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_OVERLAY_ICON_NAME,$/;"	e	enum:__anon43	file:
PROP_OVERLAY_ICON_PIXBUF	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_OVERLAY_ICON_PIXBUF,$/;"	e	enum:__anon43	file:
PROP_STATE	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_STATE,$/;"	e	enum:__anon43	file:
PROP_STATUS	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_STATUS,$/;"	e	enum:__anon43	file:
PROP_TITLE	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_TITLE,$/;"	e	enum:__anon43	file:
PROP_TOOLTIP_BODY	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_TOOLTIP_BODY,$/;"	e	enum:__anon43	file:
PROP_TOOLTIP_ICON_NAME	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_TOOLTIP_ICON_NAME,$/;"	e	enum:__anon43	file:
PROP_TOOLTIP_ICON_PIXBUF	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_TOOLTIP_ICON_PIXBUF,$/;"	e	enum:__anon43	file:
PROP_TOOLTIP_TITLE	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_TOOLTIP_TITLE,$/;"	e	enum:__anon43	file:
PROP_WINDOW_ID	./../src/platform/statusnotifier/statusnotifier.c	/^    PROP_WINDOW_ID,$/;"	e	enum:__anon43	file:
PartitionDelay	./../libs/filter_audio/aec/aec_core.c	/^static int PartitionDelay(const AecCore* aec) {$/;"	f	file:
PartitionDelay	./../libs/filter_audio/aec/aec_core_sse2.c	/^static int PartitionDelay(const AecCore* aec) {$/;"	f	file:
PasswordType	./../src/core.h	/^    enum PasswordType {ptMain = 0, ptHistory, ptCounter};$/;"	g	class:Core
PixmapCache	./../src/chatlog/pixmapcache.h	/^    PixmapCache() {}$/;"	f	class:PixmapCache
PixmapCache	./../src/chatlog/pixmapcache.h	/^class PixmapCache$/;"	c
PlainDb	./../src/misc/db/plaindb.cpp	/^PlainDb::PlainDb(const QString &db_name, QList<QString> initList)$/;"	f	class:PlainDb
PlainDb	./../src/misc/db/plaindb.h	/^class PlainDb : public GenericDdInterface$/;"	c	namespace:Db
Platform	./../src/platform/autorun.h	/^namespace Platform$/;"	n
Platform	./../src/platform/autorun_win.cpp	/^namespace Platform$/;"	n	file:
Platform	./../src/platform/autorun_xdg.cpp	/^namespace Platform$/;"	n	file:
Platform	./../src/platform/timer.h	/^namespace Platform$/;"	n
Policy	./../src/chatlog/chatline.h	/^    enum Policy {$/;"	g	struct:ColumnFormat
PowerLevel	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef struct PowerLevel {$/;"	s
PowerLevel	./../libs/filter_audio/aec/aec_core_internal.h	/^} PowerLevel;$/;"	t	typeref:struct:PowerLevel
Precise	./../src/chatlog/chatlog.h	/^        Precise,$/;"	e	enum:ChatLog::SelectionMode
PrepareSpectrum	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*PrepareSpectrum)(NsxInst_t* inst,$/;"	t
PrepareSpectrumC	./../libs/filter_audio/ns/nsx_core.c	/^static void PrepareSpectrumC(NsxInst_t* inst, int16_t* freq_buf) {$/;"	f	file:
PrivacyForm	./../src/widget/form/settings/privacyform.cpp	/^PrivacyForm::PrivacyForm() :$/;"	f	class:PrivacyForm
PrivacyForm	./../src/widget/form/settings/privacyform.h	/^class PrivacyForm : public GenericForm$/;"	c
PrivacySettings	./../ui_privacysettings.h	/^    class PrivacySettings: public Ui_PrivacySettings {};$/;"	c	namespace:Ui
ProcessBlock	./../libs/filter_audio/aec/aec_core.c	/^static void ProcessBlock(AecCore* aec) {$/;"	f	file:
ProcessExtended	./../libs/filter_audio/aec/echo_cancellation.c	/^static void ProcessExtended(aecpc_t* self,$/;"	f	file:
ProcessNormal	./../libs/filter_audio/aec/echo_cancellation.c	/^static int ProcessNormal(aecpc_t* aecpc,$/;"	f	file:
ProxyType	./../src/misc/settings.h	/^enum ProxyType {ptNone, ptSOCKS5, ptHTTP};$/;"	g
QMAKE	./../Makefile	/^QMAKE         = \/usr\/lib\/x86_64-linux-gnu\/qt5\/bin\/qmake$/;"	m
QMAKE_TARGET	./../Makefile	/^QMAKE_TARGET  = qtox$/;"	m
QTOXDNS_H	./../src/toxdns.h	19;"	d
QTOX_PATH	./../updater/widget.cpp	/^const QString QTOX_PATH = "qtox.exe";$/;"	v
QTOX_PATH	./../updater/widget.cpp	/^const QString QTOX_PATH;$/;"	v
QT_MOC_LITERAL	./../moc_addfriendform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_addfriendform.cpp	45;"	d	file:
QT_MOC_LITERAL	./../moc_adjustingscrollarea.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_adjustingscrollarea.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_advancedform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_advancedform.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_audio.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_audio.cpp	48;"	d	file:
QT_MOC_LITERAL	./../moc_avform.cpp	26;"	d	file:
QT_MOC_LITERAL	./../moc_avform.cpp	81;"	d	file:
QT_MOC_LITERAL	./../moc_callconfirmwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_callconfirmwidget.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_camera.cpp	26;"	d	file:
QT_MOC_LITERAL	./../moc_camera.cpp	51;"	d	file:
QT_MOC_LITERAL	./../moc_cameraworker.cpp	26;"	d	file:
QT_MOC_LITERAL	./../moc_cameraworker.cpp	61;"	d	file:
QT_MOC_LITERAL	./../moc_chatform.cpp	107;"	d	file:
QT_MOC_LITERAL	./../moc_chatform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_chatlog.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_chatlog.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_chattextedit.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_chattextedit.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_core.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_core.cpp	269;"	d	file:
QT_MOC_LITERAL	./../moc_croppinglabel.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_croppinglabel.cpp	42;"	d	file:
QT_MOC_LITERAL	./../moc_customtextdocument.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_customtextdocument.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_emoticonswidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_emoticonswidget.cpp	42;"	d	file:
QT_MOC_LITERAL	./../moc_filesform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_filesform.cpp	45;"	d	file:
QT_MOC_LITERAL	./../moc_filetransferwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_filetransferwidget.cpp	50;"	d	file:
QT_MOC_LITERAL	./../moc_friendlistwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_friendlistwidget.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_friendrequestdialog.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_friendrequestdialog.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_friendwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_friendwidget.cpp	53;"	d	file:
QT_MOC_LITERAL	./../moc_generalform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_generalform.cpp	84;"	d	file:
QT_MOC_LITERAL	./../moc_genericchatform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_genericchatform.cpp	58;"	d	file:
QT_MOC_LITERAL	./../moc_genericchatroomwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_genericchatroomwidget.cpp	44;"	d	file:
QT_MOC_LITERAL	./../moc_genericsettings.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_genericsettings.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_group.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_group.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_groupchatform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_groupchatform.cpp	47;"	d	file:
QT_MOC_LITERAL	./../moc_groupwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_groupwidget.cpp	43;"	d	file:
QT_MOC_LITERAL	./../moc_gui.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_gui.cpp	75;"	d	file:
QT_MOC_LITERAL	./../moc_identityform.cpp	128;"	d	file:
QT_MOC_LITERAL	./../moc_identityform.cpp	162;"	d	file:
QT_MOC_LITERAL	./../moc_identityform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_identityform.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_ipc.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_ipc.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_loadhistorydialog.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_loadhistorydialog.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_maskablepixmapwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_maskablepixmapwidget.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_netcamview.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_netcamview.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_nexus.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_nexus.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_notificationicon.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_notificationicon.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_offlinemsgengine.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_offlinemsgengine.cpp	40;"	d	file:
QT_MOC_LITERAL	./../moc_privacyform.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_privacyform.cpp	51;"	d	file:
QT_MOC_LITERAL	./../moc_setpassworddialog.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_setpassworddialog.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_settings.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_settings.cpp	46;"	d	file:
QT_MOC_LITERAL	./../moc_settingswidget.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_settingswidget.cpp	44;"	d	file:
QT_MOC_LITERAL	./../moc_smileypack.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_smileypack.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_spinner.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_spinner.cpp	38;"	d	file:
QT_MOC_LITERAL	./../moc_systemtrayicon.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_systemtrayicon.cpp	40;"	d	file:
QT_MOC_LITERAL	./../moc_tabcompleter.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_tabcompleter.cpp	39;"	d	file:
QT_MOC_LITERAL	./../moc_toxdns.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_toxdns.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_toxuri.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_toxuri.cpp	36;"	d	file:
QT_MOC_LITERAL	./../moc_videosource.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_videosource.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_videosurface.cpp	25;"	d	file:
QT_MOC_LITERAL	./../moc_videosurface.cpp	41;"	d	file:
QT_MOC_LITERAL	./../moc_widget.cpp	166;"	d	file:
QT_MOC_LITERAL	./../moc_widget.cpp	25;"	d	file:
QUANTILE	./../libs/filter_audio/ns/defines.h	18;"	d
Qt	./../src/widget/systemtrayicon_private.h	/^    Qt,$/;"	m	class:SystrayBackendType
RANLIB	./../Makefile	/^RANLIB        = $/;"	m
RETRY_PEER_INFO_INTERVAL	./../src/group.h	23;"	d
RXX_BUFFER_LEN	./../libs/filter_audio/agc/analog_agc.h	36;"	d
RealFFT	./../libs/filter_audio/other/real_fft.c	/^struct RealFFT {$/;"	s	file:
RealForwardFFT	./../libs/filter_audio/other/real_fft.h	/^typedef int (*RealForwardFFT)(struct RealFFT* self,$/;"	t
RealInverseFFT	./../libs/filter_audio/other/real_fft.h	/^typedef int (*RealInverseFFT)(struct RealFFT* self,$/;"	t
Red	./../src/misc/style.h	/^        Red,$/;"	e	enum:Style::ColorPalette
Rejected	./../src/widget/form/setpassworddialog.h	/^    enum ReturnCode {Rejected=QDialog::Rejected, Accepted=QDialog::Accepted, Tertiary};$/;"	e	enum:SetPasswordDialog::ReturnCode
ReopenWav	./../libs/filter_audio/aec/aec_core.c	/^static void ReopenWav(rtc_WavWriter** wav_file,$/;"	f	file:
ReturnCode	./../src/widget/form/setpassworddialog.h	/^    enum ReturnCode {Rejected=QDialog::Rejected, Accepted=QDialog::Accepted, Tertiary};$/;"	g	class:SetPasswordDialog
Right	./../src/chatlog/chatline.h	/^        Right,$/;"	e	enum:ColumnFormat::Align
RingBuffer	./../libs/filter_audio/other/ring_buffer.c	/^struct RingBuffer {$/;"	s	file:
RingBuffer	./../libs/filter_audio/other/ring_buffer.h	/^typedef struct RingBuffer RingBuffer;$/;"	t	typeref:struct:RingBuffer
RobustValidation	./../libs/filter_audio/other/delay_estimator.c	/^static int RobustValidation(const BinaryDelayEstimator* self,$/;"	f	file:
Rxx160_LPw32	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx160_LPw32;       \/\/ Low pass filtered frame energies$/;"	m	struct:__anon1
Rxx160w32	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx160w32;          \/\/ Average energy for one frame$/;"	m	struct:__anon1
Rxx16_LPw32	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx16_LPw32;        \/\/ Low pass filtered subframe energies$/;"	m	struct:__anon1
Rxx16_LPw32Max	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx16_LPw32Max;     \/\/ Keeps track of largest energy subframe$/;"	m	struct:__anon1
Rxx16_vectorw32	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx16_vectorw32[RXX_BUFFER_LEN];\/\/ Array with subframe energies$/;"	m	struct:__anon1
Rxx16pos	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             Rxx16pos;           \/\/ Current position in the Rxx16_vectorw32$/;"	m	struct:__anon1
Rxx16w32_array	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             Rxx16w32_array[2][5];\/\/ Energy values of microphone signal$/;"	m	struct:__anon1
S16ToFloatS16	./../libs/filter_audio/other/float_util.c	/^void S16ToFloatS16(const int16_t* src, size_t size, float* dest) {$/;"	f
SAME_WRAP	./../libs/filter_audio/other/ring_buffer.c	/^  SAME_WRAP,$/;"	e	enum:Wrap	file:
SD_FEATURE_THR	./../libs/filter_audio/ns/defines.h	41;"	d
SED	./../Makefile	/^SED           = sed$/;"	m
SELFCAMVIEW_H	./../src/widget/videosurface.h	18;"	d
SERIALIZE_H	./../src/misc/serialize.h	19;"	d
SERIALIZE_H	./../tools/update-server/qtox-updater-genflist/serialize.h	19;"	d
SERIALIZE_H	./../updater/serialize.h	19;"	d
SETPASSWORDDIALOG_H	./../src/widget/form/setpassworddialog.h	18;"	d
SETTINGSDIR_H	./../updater/settingsDir.h	19;"	d
SETTINGSWIDGET_H	./../src/widget/form/settingswidget.h	18;"	d
SETTINGS_HPP	./../src/misc/settings.h	18;"	d
SF_FEATURE_THR	./../libs/filter_audio/ns/defines.h	40;"	d
SHARED_EXT	./../libs/filter_audio/Makefile	/^    SHARED_EXT = dll$/;"	m
SHARED_EXT	./../libs/filter_audio/Makefile	/^    SHARED_EXT = dylib$/;"	m
SHARED_EXT	./../libs/filter_audio/Makefile	/^    SHARED_EXT = so$/;"	m
SHARED_LIB	./../libs/filter_audio/Makefile	/^    SHARED_LIB = $(BASE_NAME).$(SHARED_EXT).$(shell echo $(VERSION) | rev | cut -d "." -f 1 | rev)$/;"	m
SHARED_LIB	./../libs/filter_audio/Makefile	/^    SHARED_LIB = $(BASE_NAME).$(shell echo $(VERSION) | rev | cut -d "." -f 1 | rev).$(SHARED_EXT)$/;"	m
SHOW_SYSTEM_TRAY_DEFAULT	./../src/misc/settings.cpp	40;"	d	file:
SIGNAL_ACTIVATE	./../src/platform/statusnotifier/statusnotifier.c	/^    SIGNAL_ACTIVATE,$/;"	e	enum:__anon44	file:
SIGNAL_CONTEXT_MENU	./../src/platform/statusnotifier/statusnotifier.c	/^    SIGNAL_CONTEXT_MENU,$/;"	e	enum:__anon44	file:
SIGNAL_REGISTRATION_FAILED	./../src/platform/statusnotifier/statusnotifier.c	/^    SIGNAL_REGISTRATION_FAILED,$/;"	e	enum:__anon44	file:
SIGNAL_SCROLL	./../src/platform/statusnotifier/statusnotifier.c	/^    SIGNAL_SCROLL,$/;"	e	enum:__anon44	file:
SIGNAL_SECONDARY_ACTIVATE	./../src/platform/statusnotifier/statusnotifier.c	/^    SIGNAL_SECONDARY_ACTIVATE,$/;"	e	enum:__anon44	file:
SIMULT	./../libs/filter_audio/ns/defines.h	20;"	d
SIMULT	./../libs/filter_audio/ns/nsx_defines.h	16;"	d
SIZE	./../src/misc/cdata.h	/^    static const uint16_t SIZE;$/;"	m	class:CFriendAddress
SIZE	./../src/misc/cdata.h	/^    static const uint16_t SIZE;$/;"	m	class:CUserId
SMILEYPACK_H	./../src/misc/smileypack.h	18;"	d
SMILEYPACK_SEARCH_PATHS	./../src/misc/smileypack.h	26;"	d
SOURCES	./../Makefile	/^SOURCES       = src\/audiofilterer.cpp \\$/;"	m
SPECT_DIFF_TAVG	./../libs/filter_audio/ns/defines.h	34;"	d
SPECT_DIFF_TAVG_Q8	./../libs/filter_audio/ns/nsx_defines.h	28;"	d
SPECT_FLAT_TAVG_Q14	./../libs/filter_audio/ns/nsx_defines.h	27;"	d
SPECT_FL_TAVG	./../libs/filter_audio/ns/defines.h	33;"	d
SPEECH_UPDATE	./../libs/filter_audio/ns/defines.h	37;"	d
SPINNER_H	./../src/chatlog/content/spinner.h	18;"	d
SRC	./../libs/filter_audio/Makefile	/^SRC = $(wildcard *\/*.c) filter_audio.c$/;"	m
STATIC_LIB	./../libs/filter_audio/Makefile	/^STATIC_LIB = $(BASE_NAME).a$/;"	m
STATUS_NOTIFIER	./../src/platform/statusnotifier/statusnotifier.h	38;"	d
STATUS_NOTIFIER_ATTENTION_ICON	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ATTENTION_ICON,$/;"	e	enum:__anon49
STATUS_NOTIFIER_CATEGORY_APPLICATION_STATUS	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_CATEGORY_APPLICATION_STATUS = 0,$/;"	e	enum:__anon50
STATUS_NOTIFIER_CATEGORY_COMMUNICATIONS	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_CATEGORY_COMMUNICATIONS,$/;"	e	enum:__anon50
STATUS_NOTIFIER_CATEGORY_HARDWARE	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_CATEGORY_HARDWARE$/;"	e	enum:__anon50
STATUS_NOTIFIER_CATEGORY_SYSTEM_SERVICES	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_CATEGORY_SYSTEM_SERVICES,$/;"	e	enum:__anon50
STATUS_NOTIFIER_CLASS	./../src/platform/statusnotifier/statusnotifier.h	39;"	d
STATUS_NOTIFIER_ERROR	./../src/platform/statusnotifier/statusnotifier.h	46;"	d
STATUS_NOTIFIER_ERROR_NO_CONNECTION	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ERROR_NO_CONNECTION = 0,$/;"	e	enum:__anon47
STATUS_NOTIFIER_ERROR_NO_HOST	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ERROR_NO_HOST$/;"	e	enum:__anon47
STATUS_NOTIFIER_ERROR_NO_NAME	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ERROR_NO_NAME,$/;"	e	enum:__anon47
STATUS_NOTIFIER_ERROR_NO_WATCHER	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ERROR_NO_WATCHER,$/;"	e	enum:__anon47
STATUS_NOTIFIER_GET_CLASS	./../src/platform/statusnotifier/statusnotifier.h	42;"	d
STATUS_NOTIFIER_ICON	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_ICON = 0,$/;"	e	enum:__anon49
STATUS_NOTIFIER_OVERLAY_ICON	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_OVERLAY_ICON,$/;"	e	enum:__anon49
STATUS_NOTIFIER_SCROLL_ORIENTATION_HORIZONTAL	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_SCROLL_ORIENTATION_HORIZONTAL = 0,$/;"	e	enum:__anon52
STATUS_NOTIFIER_SCROLL_ORIENTATION_VERTICAL	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_SCROLL_ORIENTATION_VERTICAL$/;"	e	enum:__anon52
STATUS_NOTIFIER_STATE_FAILED	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATE_FAILED$/;"	e	enum:__anon48
STATUS_NOTIFIER_STATE_NOT_REGISTERED	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATE_NOT_REGISTERED = 0,$/;"	e	enum:__anon48
STATUS_NOTIFIER_STATE_REGISTERED	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATE_REGISTERED,$/;"	e	enum:__anon48
STATUS_NOTIFIER_STATE_REGISTERING	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATE_REGISTERING,$/;"	e	enum:__anon48
STATUS_NOTIFIER_STATUS_ACTIVE	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATUS_ACTIVE,$/;"	e	enum:__anon51
STATUS_NOTIFIER_STATUS_NEEDS_ATTENTION	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATUS_NEEDS_ATTENTION$/;"	e	enum:__anon51
STATUS_NOTIFIER_STATUS_PASSIVE	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_STATUS_PASSIVE = 0,$/;"	e	enum:__anon51
STATUS_NOTIFIER_TOOLTIP_ICON	./../src/platform/statusnotifier/statusnotifier.h	/^    STATUS_NOTIFIER_TOOLTIP_ICON,$/;"	e	enum:__anon49
STAT_UPDATES	./../libs/filter_audio/ns/nsx_defines.h	59;"	d
STOPPED	./../src/corestructs.h	/^        STOPPED,$/;"	e	enum:ToxFile::FileStatus
STRIP	./../Makefile	/^STRIP         = strip$/;"	m
STYLE_H	./../src/misc/style.h	18;"	d
SYMLINK	./../Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYSTEMTRAYICON_H	./../src/widget/systemtrayicon.h	2;"	d
SYSTEMTRAYICON_PRIVATE_H	./../src/widget/systemtrayicon_private.h	2;"	d
S_11_22	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_11_22[8];$/;"	m	struct:__anon32
S_12_24	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_12_24[8];$/;"	m	struct:__anon36
S_16_11	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_11[8];$/;"	m	struct:__anon32
S_16_12	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_12[8];$/;"	m	struct:__anon36
S_16_32	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_32[8];$/;"	m	struct:__anon30
S_16_32	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_32[8];$/;"	m	struct:__anon34
S_16_8	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_8[8];$/;"	m	struct:__anon31
S_16_8	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_16_8[8];$/;"	m	struct:__anon35
S_22_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_22_16[8];$/;"	m	struct:__anon31
S_22_22	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_22_22[16];$/;"	m	struct:__anon31
S_22_44	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_22_44[8];$/;"	m	struct:__anon29
S_24_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_24_16[8];$/;"	m	struct:__anon35
S_24_24	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_24_24[16];$/;"	m	struct:__anon35
S_24_48	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_24_48[8];$/;"	m	struct:__anon34
S_24_48	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_24_48[8];$/;"	m	struct:__anon36
S_32_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_32_16[8];$/;"	m	struct:__anon29
S_32_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_32_16[8];$/;"	m	struct:__anon33
S_32_22	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_32_22[8];$/;"	m	struct:__anon30
S_32_24	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_32_24[8];$/;"	m	struct:__anon34
S_44_32	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_44_32[8];$/;"	m	struct:__anon29
S_48_24	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_48_24[8];$/;"	m	struct:__anon35
S_48_32	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_48_32[8];$/;"	m	struct:__anon33
S_48_48	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_48_48[16];$/;"	m	struct:__anon33
S_8_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_8_16[8];$/;"	m	struct:__anon32
S_8_16	./../libs/filter_audio/other/signal_processing_library.h	/^  int32_t S_8_16[8];$/;"	m	struct:__anon36
SaturationSlider	./../ui_avsettings.h	/^    QSlider *SaturationSlider;$/;"	m	class:Ui_AVSettings
ScaleAndAddVectorsWithRound	./../libs/filter_audio/other/signal_processing_library.h	/^typedef int (*ScaleAndAddVectorsWithRound)(const int16_t* in_vector1,$/;"	t
ScaleErrorSignal	./../libs/filter_audio/aec/aec_core.c	/^static void ScaleErrorSignal(AecCore* aec, float ef[2][PART_LEN1]) {$/;"	f	file:
ScaleErrorSignalSSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void ScaleErrorSignalSSE2(AecCore* aec, float ef[2][PART_LEN1]) {$/;"	f	file:
SelectionMode	./../src/chatlog/chatlog.h	/^    enum SelectionMode {$/;"	g	class:ChatLog
SetBit	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^static __inline uint32_t SetBit(uint32_t in, int pos) {$/;"	f	file:
SetPasswordDialog	./../src/widget/form/setpassworddialog.cpp	/^SetPasswordDialog::SetPasswordDialog(QString body, QString extraButton, QWidget* parent)$/;"	f	class:SetPasswordDialog
SetPasswordDialog	./../src/widget/form/setpassworddialog.h	/^class SetPasswordDialog : public QDialog$/;"	c
SetPasswordDialog	./../ui_setpassworddialog.h	/^    class SetPasswordDialog: public Ui_SetPasswordDialog {};$/;"	c	namespace:Ui
Settings	./../src/misc/settings.cpp	/^Settings::Settings() :$/;"	f	class:Settings
Settings	./../src/misc/settings.h	/^class Settings : public QObject$/;"	c
SettingsWidget	./../src/widget/form/settingswidget.cpp	/^SettingsWidget::SettingsWidget(QWidget* parent)$/;"	f	class:SettingsWidget
SettingsWidget	./../src/widget/form/settingswidget.h	/^class SettingsWidget : public QWidget$/;"	c
Small	./../src/misc/style.h	/^        Small,      \/\/ [SystemDefault - 2]px$/;"	e	enum:Style::Font
SmallLight	./../src/misc/style.h	/^        SmallLight  \/\/ [SystemDefault - 2]px, light$/;"	e	enum:Style::Font
SmileyPack	./../src/misc/smileypack.cpp	/^SmileyPack::SmileyPack()$/;"	f	class:SmileyPack
SmileyPack	./../src/misc/smileypack.h	/^class SmileyPack : public QObject$/;"	c
SmoothedPSD	./../libs/filter_audio/aec/aec_core.c	/^static void SmoothedPSD(AecCore* aec,$/;"	f	file:
SmoothedPSD	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void SmoothedPSD(AecCore* aec,$/;"	f	file:
SortableString	./../src/widget/form/tabcompleter.h	/^        inline SortableString(const QString &n) : contents{n} {}$/;"	f	struct:TabCompleter::SortableString
SortableString	./../src/widget/form/tabcompleter.h	/^    struct SortableString {$/;"	s	class:TabCompleter
SpectrumType	./../libs/filter_audio/other/delay_estimator_internal.h	/^} SpectrumType;$/;"	t	typeref:union:__anon38
SpeechNoiseProb	./../libs/filter_audio/ns/ns_core.c	/^static void SpeechNoiseProb(NSinst_t* self,$/;"	f	file:
Spinner	./../src/chatlog/content/spinner.cpp	/^Spinner::Spinner(const QString &img, QSize Size, qreal speed)$/;"	f	class:Spinner
Spinner	./../src/chatlog/content/spinner.h	/^class Spinner : public QObject, public ChatLineContent$/;"	c
Stats	./../libs/filter_audio/aec/aec_core.h	/^typedef struct Stats {$/;"	s
Stats	./../libs/filter_audio/aec/aec_core.h	/^} Stats;$/;"	t	typeref:struct:Stats
Status	./../src/corestructs.h	/^enum class Status : int {Online = 0, Away, Busy, Offline};$/;"	c
StatusNotifier	./../src/platform/statusnotifier/statusnotifier.h	/^typedef struct _StatusNotifier              StatusNotifier;$/;"	t	typeref:struct:_StatusNotifier
StatusNotifier	./../src/widget/systemtrayicon_private.h	/^    StatusNotifier,$/;"	m	class:SystrayBackendType
StatusNotifierCategory	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierCategory;$/;"	t	typeref:enum:__anon50
StatusNotifierClass	./../src/platform/statusnotifier/statusnotifier.h	/^typedef struct _StatusNotifierClass         StatusNotifierClass;$/;"	t	typeref:struct:_StatusNotifierClass
StatusNotifierError	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierError;$/;"	t	typeref:enum:__anon47
StatusNotifierIcon	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierIcon;$/;"	t	typeref:enum:__anon49
StatusNotifierPrivate	./../src/platform/statusnotifier/statusnotifier.h	/^typedef struct _StatusNotifierPrivate       StatusNotifierPrivate;$/;"	t	typeref:struct:_StatusNotifierPrivate
StatusNotifierScrollOrientation	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierScrollOrientation;$/;"	t	typeref:enum:__anon52
StatusNotifierState	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierState;$/;"	t	typeref:enum:__anon48
StatusNotifierStatus	./../src/platform/statusnotifier/statusnotifier.h	/^} StatusNotifierStatus;$/;"	t	typeref:enum:__anon51
StoreAsComplex	./../libs/filter_audio/aec/aec_core.c	/^__inline static void StoreAsComplex(const float* data,$/;"	f	file:
StoreAsComplex	./../libs/filter_audio/aec/aec_core_sse2.c	/^__inline static void StoreAsComplex(const float* data,$/;"	f	file:
Style	./../src/misc/style.h	/^class Style$/;"	c
SubbandCoherence	./../libs/filter_audio/aec/aec_core.c	/^static void SubbandCoherence(AecCore* aec,$/;"	f	file:
SubbandCoherenceSSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^static void SubbandCoherenceSSE2(AecCore* aec,$/;"	f	file:
SynthesisUpdate	./../libs/filter_audio/ns/nsx_core.h	/^typedef void (*SynthesisUpdate)(NsxInst_t* inst,$/;"	t
SynthesisUpdateC	./../libs/filter_audio/ns/nsx_core.c	/^static void SynthesisUpdateC(NsxInst_t* inst,$/;"	f	file:
SystemMessageType	./../src/chatlog/chatmessage.h	/^    enum SystemMessageType$/;"	g	class:ChatMessage
SystemTrayIcon	./../src/widget/systemtrayicon.cpp	/^SystemTrayIcon::SystemTrayIcon()$/;"	f	class:SystemTrayIcon
SystemTrayIcon	./../src/widget/systemtrayicon.h	/^class SystemTrayIcon : public QObject$/;"	c
SystrayBackendType	./../src/widget/systemtrayicon_private.h	/^enum class SystrayBackendType$/;"	c
TABCOMPLETER_H	./../src/widget/form/tabcompleter.h	22;"	d
TAR	./../Makefile	/^TAR           = tar -cf$/;"	m
TARGET	./../Makefile	/^TARGET        = qtox$/;"	m
TARGET	./../libs/filter_audio/Makefile	/^    TARGET = $(BASE_NAME).$(SHARED_EXT)$/;"	m
TARGET	./../libs/filter_audio/Makefile	/^    TARGET = $(BASE_NAME).$(SHARED_EXT).$(VERSION)$/;"	m
TARGET	./../libs/filter_audio/Makefile	/^    TARGET = $(BASE_NAME).$(VERSION).$(SHARED_EXT)$/;"	m
TARGET_ONLY	./../libs/filter_audio/Makefile	/^    TARGET_ONLY = YES$/;"	m
TARGET_ONLY	./../libs/filter_audio/Makefile	/^TARGET_ONLY = NO$/;"	m
TEXT_H	./../src/chatlog/content/text.h	18;"	d
THRES_FLUCT_LRT	./../libs/filter_audio/ns/nsx_defines.h	50;"	d
THRES_PEAK_FLAT	./../libs/filter_audio/ns/nsx_defines.h	45;"	d
THRES_WEIGHT_FLAT_DIFF	./../libs/filter_audio/ns/nsx_defines.h	57;"	d
TIMESTAMP_H	./../src/chatlog/content/timestamp.h	18;"	d
TIME_COL_WIDTH	./../src/chatlog/chatmessage.cpp	31;"	d	file:
TOX1_ASK_FALLBACK	./../src/toxdns.h	29;"	d
TOX1_SILENT_FALLBACK	./../src/toxdns.h	26;"	d
TOXAV_MAX_CALLS	./../src/coredefines.h	4;"	d
TOXAV_MAX_VIDEO_HEIGHT	./../src/coredefines.h	11;"	d
TOXAV_MAX_VIDEO_WIDTH	./../src/coredefines.h	10;"	d
TOXAV_RINGING_TIME	./../src/coredefines.h	7;"	d
TOXME_H	./../src/toxme.h	2;"	d
TOXSAVE_H	./../src/widget/toxsave.h	18;"	d
TOXURI_H	./../src/widget/toxuri.h	19;"	d
TOX_EXT	./../src/core.cpp	/^const QString Core::TOX_EXT = ".tox";$/;"	m	class:Core	file:
TOX_EXT	./../src/core.h	/^    static const QString TOX_EXT;$/;"	m	class:Core
TOX_FILE_INTERVAL	./../src/coredefines.h	6;"	d
TOX_ID_CHECKSUM_LENGTH	./../src/corestructs.h	15;"	d
TOX_ID_LENGTH	./../src/corestructs.cpp	7;"	d	file:
TOX_ID_LENGTH	./../src/toxdns.cpp	27;"	d	file:
TOX_ID_NO_SPAM_LENGTH	./../src/corestructs.h	14;"	d
TOX_ID_PUBLIC_KEY_LENGTH	./../src/corestructs.h	13;"	d
TRANSFER_ROLLING_AVG_COUNT	./../src/chatlog/content/filetransferwidget.h	/^    static const uint8_t TRANSFER_ROLLING_AVG_COUNT = 4;$/;"	m	class:FileTransferWidget
TRANSMITTING	./../src/corestructs.h	/^        TRANSMITTING,$/;"	e	enum:ToxFile::FileStatus
TYPE_STATUS_NOTIFIER	./../src/platform/statusnotifier/statusnotifier.h	37;"	d
TYPE_STATUS_NOTIFIER_CATEGORY	./../src/platform/statusnotifier/enums.h	14;"	d
TYPE_STATUS_NOTIFIER_ERROR	./../src/platform/statusnotifier/enums.h	8;"	d
TYPE_STATUS_NOTIFIER_ICON	./../src/platform/statusnotifier/enums.h	12;"	d
TYPE_STATUS_NOTIFIER_SCROLL_ORIENTATION	./../src/platform/statusnotifier/enums.h	18;"	d
TYPE_STATUS_NOTIFIER_STATE	./../src/platform/statusnotifier/enums.h	10;"	d
TYPE_STATUS_NOTIFIER_STATUS	./../src/platform/statusnotifier/enums.h	16;"	d
TYPING	./../src/chatlog/chatmessage.h	/^        TYPING,$/;"	e	enum:ChatMessage::SystemMessageType
TabCompleter	./../src/widget/form/tabcompleter.cpp	/^TabCompleter::TabCompleter(ChatTextEdit* msgEdit, Group* group)$/;"	f	class:TabCompleter
TabCompleter	./../src/widget/form/tabcompleter.h	/^class TabCompleter : public QObject$/;"	c
Tertiary	./../src/widget/form/setpassworddialog.h	/^    enum ReturnCode {Rejected=QDialog::Rejected, Accepted=QDialog::Accepted, Tertiary};$/;"	e	enum:SetPasswordDialog::ReturnCode
Text	./../src/chatlog/content/text.cpp	/^Text::Text(const QString& txt, QFont font, bool enableElide, const QString &rwText, const QColor c)$/;"	f	class:Text
Text	./../src/chatlog/content/text.h	/^class Text : public ChatLineContent$/;"	c
ThemeDark	./../src/misc/style.h	/^        ThemeDark,$/;"	e	enum:Style::ColorPalette
ThemeLight	./../src/misc/style.h	/^        ThemeLight,$/;"	e	enum:Style::ColorPalette
ThemeMedium	./../src/misc/style.h	/^        ThemeMedium,$/;"	e	enum:Style::ColorPalette
ThemeMediumDark	./../src/misc/style.h	/^        ThemeMediumDark,$/;"	e	enum:Style::ColorPalette
TimeToFrequency	./../libs/filter_audio/aec/aec_core.c	/^static void TimeToFrequency(float time_data[PART_LEN2],$/;"	f	file:
Timestamp	./../src/chatlog/content/timestamp.cpp	/^Timestamp::Timestamp(const QDateTime &time, const QString &format, const QFont &font)$/;"	f	class:Timestamp
Timestamp	./../src/chatlog/content/timestamp.h	/^class Timestamp : public Text$/;"	c
ToxCall	./../src/coreav.h	/^struct ToxCall$/;"	s
ToxDNS	./../src/toxdns.h	/^class ToxDNS : public QObject$/;"	c
ToxFile	./../src/corestructs.cpp	/^ToxFile::ToxFile(int FileNum, int FriendId, QByteArray FileName, QString FilePath, FileDirection Direction)$/;"	f	class:ToxFile
ToxFile	./../src/corestructs.h	/^struct ToxFile$/;"	s
ToxGroupCall	./../src/coreav.h	/^struct ToxGroupCall$/;"	s
ToxID	./../src/corestructs.cpp	/^ToxID::ToxID(const ToxID& other)$/;"	f	class:ToxID
ToxID	./../src/corestructs.h	/^struct ToxID$/;"	s
ToxURIDialog	./../src/widget/toxuri.cpp	/^ToxURIDialog::ToxURIDialog(QWidget *parent, const QString &userId, const QString &message) :$/;"	f	class:ToxURIDialog
ToxURIDialog	./../src/widget/toxuri.h	/^class ToxURIDialog : public QDialog$/;"	c
Toxme	./../src/toxme.h	/^class Toxme$/;"	c
UI_ADVANCEDSETTINGS_H	./../ui_advancedsettings.h	10;"	d
UI_ANDROID_H	./../ui_android.h	10;"	d
UI_AVSETTINGS_H	./../ui_avsettings.h	10;"	d
UI_FILETRANSFERWIDGET_H	./../ui_filetransferwidget.h	10;"	d
UI_GENERALSETTINGS_H	./../ui_generalsettings.h	10;"	d
UI_IDENTITYSETTINGS_H	./../ui_identitysettings.h	10;"	d
UI_LOADHISTORYDIALOG_H	./../ui_loadhistorydialog.h	10;"	d
UI_MAINWINDOW_H	./../ui_mainwindow.h	10;"	d
UI_PRIVACYSETTINGS_H	./../ui_privacysettings.h	10;"	d
UI_SETPASSWORDDIALOG_H	./../ui_setpassworddialog.h	10;"	d
UPDATE_H	./../updater/update.h	19;"	d
Ui	./../src/chatlog/content/filetransferwidget.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/androidgui.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/addfriendform.h	/^namespace Ui {class MainWindow;}$/;"	n
Ui	./../src/widget/form/filesform.h	/^namespace Ui {class MainWindow;}$/;"	n
Ui	./../src/widget/form/genericchatform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/groupchatform.h	/^namespace Ui {class MainWindow;}$/;"	n
Ui	./../src/widget/form/loadhistorydialog.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/setpassworddialog.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settings/advancedform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settings/avform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settings/generalform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settings/identityform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settings/privacyform.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/form/settingswidget.h	/^namespace Ui {class MainWindow;}$/;"	n
Ui	./../src/widget/genericchatroomwidget.h	/^namespace Ui {$/;"	n
Ui	./../src/widget/widget.h	/^namespace Ui {$/;"	n
Ui	./../ui_advancedsettings.h	/^namespace Ui {$/;"	n
Ui	./../ui_android.h	/^namespace Ui {$/;"	n
Ui	./../ui_avsettings.h	/^namespace Ui {$/;"	n
Ui	./../ui_filetransferwidget.h	/^namespace Ui {$/;"	n
Ui	./../ui_generalsettings.h	/^namespace Ui {$/;"	n
Ui	./../ui_identitysettings.h	/^namespace Ui {$/;"	n
Ui	./../ui_loadhistorydialog.h	/^namespace Ui {$/;"	n
Ui	./../ui_mainwindow.h	/^namespace Ui {$/;"	n
Ui	./../ui_privacysettings.h	/^namespace Ui {$/;"	n
Ui	./../ui_setpassworddialog.h	/^namespace Ui {$/;"	n
Ui	./../updater/widget.h	/^namespace Ui {$/;"	n
Ui_AVSettings	./../ui_avsettings.h	/^class Ui_AVSettings$/;"	c
Ui_AdvancedSettings	./../ui_advancedsettings.h	/^class Ui_AdvancedSettings$/;"	c
Ui_Android	./../ui_android.h	/^class Ui_Android$/;"	c
Ui_FileTransferWidget	./../ui_filetransferwidget.h	/^class Ui_FileTransferWidget$/;"	c
Ui_GeneralSettings	./../ui_generalsettings.h	/^class Ui_GeneralSettings$/;"	c
Ui_IdentitySettings	./../ui_identitysettings.h	/^class Ui_IdentitySettings$/;"	c
Ui_LoadHistoryDialog	./../ui_loadhistorydialog.h	/^class Ui_LoadHistoryDialog$/;"	c
Ui_MainWindow	./../ui_mainwindow.h	/^class Ui_MainWindow$/;"	c
Ui_PrivacySettings	./../ui_privacysettings.h	/^class Ui_PrivacySettings$/;"	c
Ui_SetPasswordDialog	./../ui_setpassworddialog.h	/^class Ui_SetPasswordDialog$/;"	c
Unity	./../src/widget/systemtrayicon_private.h	/^    Unity,$/;"	m	class:SystrayBackendType
Up	./../src/chatlog/chatlog.h	/^        Up,$/;"	e	enum:ChatLog::AutoScrollDirection
UpdateBuffer	./../libs/filter_audio/ns/ns_core.c	/^static void UpdateBuffer(const float* frame,$/;"	f	file:
UpdateFile	./../src/autoupdate.h	/^    struct UpdateFile$/;"	s	class:AutoUpdater
UpdateFile	./../updater/update.h	/^struct UpdateFile$/;"	s
UpdateFileMeta	./../src/autoupdate.h	/^    struct UpdateFileMeta$/;"	s	class:AutoUpdater
UpdateFileMeta	./../updater/update.h	/^struct UpdateFileMeta$/;"	s
UpdateLevel	./../libs/filter_audio/aec/aec_core.c	/^static void UpdateLevel(PowerLevel* level, float in[2][PART_LEN1]) {$/;"	f	file:
UpdateMetrics	./../libs/filter_audio/aec/aec_core.c	/^static void UpdateMetrics(AecCore* aec) {$/;"	f	file:
UpdateNoiseEstimate	./../libs/filter_audio/ns/ns_core.c	/^static void UpdateNoiseEstimate(NSinst_t* self,$/;"	f	file:
UpdateNoiseEstimate	./../libs/filter_audio/ns/nsx_core.c	/^static void UpdateNoiseEstimate(NsxInst_t* inst, int offset) {$/;"	f	file:
UpdateRobustValidationStatistics	./../libs/filter_audio/other/delay_estimator.c	/^static void UpdateRobustValidationStatistics(BinaryDelayEstimator* self,$/;"	f	file:
VERSION	./../libs/filter_audio/Makefile	/^VERSION = 0.0.0$/;"	m
VIDEOFRAME_H	./../src/video/videoframe.h	18;"	d
VIDEOSOURCE_H	./../src/video/videosource.h	18;"	d
VariableSize	./../src/chatlog/chatline.h	/^        VariableSize,$/;"	e	enum:ColumnFormat::Policy
VersionInfo	./../src/autoupdate.h	/^    struct VersionInfo$/;"	s	class:AutoUpdater
VideoFrame	./../src/video/videoframe.h	/^    VideoFrame() : format(NONE) {}$/;"	f	struct:VideoFrame
VideoFrame	./../src/video/videoframe.h	/^    VideoFrame(QByteArray d, QSize r, ColorFormat f) : frameData(d), resolution(r), format(f) {}$/;"	f	struct:VideoFrame
VideoFrame	./../src/video/videoframe.h	/^struct VideoFrame$/;"	s
VideoSource	./../src/video/videosource.h	/^class VideoSource : public QObject$/;"	c
VideoSurface	./../src/widget/videosurface.cpp	/^VideoSurface::VideoSurface(QWidget* parent)$/;"	f	class:VideoSurface
VideoSurface	./../src/widget/videosurface.cpp	/^VideoSurface::VideoSurface(VideoSource *source, QWidget* parent)$/;"	f	class:VideoSurface
VideoSurface	./../src/widget/videosurface.h	/^class VideoSurface : public QGLWidget$/;"	c
WATCHER_INTERFACE	./../src/platform/statusnotifier/interfaces.h	30;"	d
WATCHER_NAME	./../src/platform/statusnotifier/interfaces.h	28;"	d
WATCHER_OBJECT	./../src/platform/statusnotifier/interfaces.h	29;"	d
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_COMPLEX_FFT_TABLES_H_	./../libs/filter_audio/other/complex_fft_tables.h	13;"	d
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_REAL_FFT_H_	./../libs/filter_audio/other/real_fft.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_COMMON_H_	./../libs/filter_audio/aec/aec_common.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_H_	./../libs/filter_audio/aec/aec_core.h	16;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_INTERNAL_H_	./../libs/filter_audio/aec/aec_core_internal.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_RESAMPLER_H_	./../libs/filter_audio/aec/aec_resampler.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_ECHO_CANCELLATION_INTERNAL_H_	./../libs/filter_audio/aec/echo_cancellation_internal.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_INCLUDE_ECHO_CANCELLATION_H_	./../libs/filter_audio/aec/include/echo_cancellation.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_MAIN_SOURCE_AEC_RDFT_H_	./../libs/filter_audio/aec/aec_rdft.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_INCLUDE_GAIN_CONTROL_H_	./../libs/filter_audio/agc/include/gain_control.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_MAIN_SOURCE_ANALOG_AGC_H_	./../libs/filter_audio/agc/analog_agc.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_MAIN_SOURCE_DIGITAL_AGC_H_	./../libs/filter_audio/agc/digital_agc.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_INCLUDE_NOISE_SUPPRESSION_H_	./../libs/filter_audio/ns/include/noise_suppression.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_INCLUDE_NOISE_SUPPRESSION_X_H_	./../libs/filter_audio/ns/include/noise_suppression_x.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_DEFINES_H_	./../libs/filter_audio/ns/defines.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_CORE_H_	./../libs/filter_audio/ns/nsx_core.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_DEFINES_H_	./../libs/filter_audio/ns/nsx_defines.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_WINDOWS_PRIVATE_H_	./../libs/filter_audio/ns/windows_private.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_NS_CORE_H_	./../libs/filter_audio/ns/ns_core.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_H_	./../libs/filter_audio/other/delay_estimator.h	15;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_INTERNAL_H_	./../libs/filter_audio/other/delay_estimator_internal.h	14;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_WRAPPER_H_	./../libs/filter_audio/other/delay_estimator_wrapper.h	15;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_FFT4G_H_	./../libs/filter_audio/other/fft4g.h	12;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_RING_BUFFER_H_	./../libs/filter_audio/other/ring_buffer.h	15;"	d
WEBRTC_SPL_ABS_W16	./../libs/filter_audio/other/signal_processing_library.h	34;"	d
WEBRTC_SPL_ABS_W32	./../libs/filter_audio/other/signal_processing_library.h	36;"	d
WEBRTC_SPL_LSHIFT_W32	./../libs/filter_audio/other/signal_processing_library.h	90;"	d
WEBRTC_SPL_MAX	./../libs/filter_audio/other/signal_processing_library.h	31;"	d
WEBRTC_SPL_MAX_LPC_ORDER	./../libs/filter_audio/other/signal_processing_library.h	29;"	d
WEBRTC_SPL_MEMCPY_W16	./../libs/filter_audio/other/signal_processing_library.h	102;"	d
WEBRTC_SPL_MIN	./../libs/filter_audio/other/signal_processing_library.h	30;"	d
WEBRTC_SPL_MUL	./../libs/filter_audio/other/signal_processing_library.h	39;"	d
WEBRTC_SPL_MUL_16_16	./../libs/filter_audio/other/signal_processing_library.h	52;"	d
WEBRTC_SPL_MUL_16_16_RSFT	./../libs/filter_audio/other/signal_processing_library.h	70;"	d
WEBRTC_SPL_MUL_16_16_RSFT_WITH_ROUND	./../libs/filter_audio/other/signal_processing_library.h	73;"	d
WEBRTC_SPL_MUL_16_32_RSFT11	./../libs/filter_audio/other/signal_processing_library.h	60;"	d
WEBRTC_SPL_MUL_16_32_RSFT14	./../libs/filter_audio/other/signal_processing_library.h	63;"	d
WEBRTC_SPL_MUL_16_32_RSFT15	./../libs/filter_audio/other/signal_processing_library.h	66;"	d
WEBRTC_SPL_MUL_16_32_RSFT16	./../libs/filter_audio/other/signal_processing_library.h	54;"	d
WEBRTC_SPL_MUL_16_U16	./../libs/filter_audio/other/signal_processing_library.h	45;"	d
WEBRTC_SPL_RAND	./../libs/filter_audio/other/signal_processing_library.h	94;"	d
WEBRTC_SPL_RESAMPLE_BY_2_INTERNAL_H_	./../libs/filter_audio/other/resample_by_2_internal.h	18;"	d
WEBRTC_SPL_RSHIFT_U32	./../libs/filter_audio/other/signal_processing_library.h	92;"	d
WEBRTC_SPL_SAT	./../libs/filter_audio/other/signal_processing_library.h	81;"	d
WEBRTC_SPL_SCALEDIFF32	./../libs/filter_audio/other/signal_processing_library.h	78;"	d
WEBRTC_SPL_SHIFT_W32	./../libs/filter_audio/other/signal_processing_library.h	85;"	d
WEBRTC_SPL_SIGNAL_PROCESSING_LIBRARY_H_	./../libs/filter_audio/other/signal_processing_library.h	19;"	d
WEBRTC_SPL_SPL_INL_H_	./../libs/filter_audio/other/spl_inl.h	16;"	d
WEBRTC_SPL_SQRT_ITER	./../libs/filter_audio/other/spl_sqrt_floor.c	47;"	d	file:
WEBRTC_SPL_UMUL	./../libs/filter_audio/other/signal_processing_library.h	41;"	d
WEBRTC_SPL_UMUL_32_16	./../libs/filter_audio/other/signal_processing_library.h	43;"	d
WEBRTC_SPL_WORD16_MAX	./../libs/filter_audio/other/signal_processing_library.h	25;"	d
WEBRTC_SPL_WORD16_MIN	./../libs/filter_audio/other/signal_processing_library.h	26;"	d
WEBRTC_SPL_WORD32_MAX	./../libs/filter_audio/other/signal_processing_library.h	27;"	d
WEBRTC_SPL_WORD32_MIN	./../libs/filter_audio/other/signal_processing_library.h	28;"	d
WEBRTC_UNTRUSTED_DELAY	./../libs/filter_audio/aec/echo_cancellation.c	68;"	d	file:
WIDGET_H	./../src/widget/widget.h	18;"	d
WIDGET_H	./../updater/widget.h	19;"	d
WIDTH	./../libs/filter_audio/ns/defines.h	24;"	d
WIDTH_PR_MAP	./../libs/filter_audio/ns/defines.h	38;"	d
WIDTH_Q8	./../libs/filter_audio/ns/nsx_defines.h	22;"	d
W_LENGTH	./../libs/filter_audio/ns/defines.h	28;"	d
WebRtcAec_BufferFarend	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_BufferFarend(void* aecInst,$/;"	f
WebRtcAec_BufferFarendPartition	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_BufferFarendPartition(AecCore* aec, const float* farend) {$/;"	f
WebRtcAec_ComfortNoise	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_ComfortNoise_t WebRtcAec_ComfortNoise;$/;"	v
WebRtcAec_ComfortNoise_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_ComfortNoise_t)(AecCore* aec,$/;"	t
WebRtcAec_Create	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_Create(void** aecInst) {$/;"	f
WebRtcAec_CreateAec	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_CreateAec(AecCore** aecInst) {$/;"	f
WebRtcAec_CreateResampler	./../libs/filter_audio/aec/aec_resampler.c	/^int WebRtcAec_CreateResampler(void** resampInst) {$/;"	f
WebRtcAec_FilterAdaptation	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_FilterAdaptation_t WebRtcAec_FilterAdaptation;$/;"	v
WebRtcAec_FilterAdaptation_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_FilterAdaptation_t)(AecCore* aec,$/;"	t
WebRtcAec_FilterFar	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_FilterFar_t WebRtcAec_FilterFar;$/;"	v
WebRtcAec_FilterFar_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_FilterFar_t)(AecCore* aec, float yf[2][PART_LEN1]);$/;"	t
WebRtcAec_Free	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_Free(void* aecInst) {$/;"	f
WebRtcAec_FreeAec	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_FreeAec(AecCore* aec) {$/;"	f
WebRtcAec_FreeResampler	./../libs/filter_audio/aec/aec_resampler.c	/^int WebRtcAec_FreeResampler(void* resampInst) {$/;"	f
WebRtcAec_GetDelayMetrics	./../libs/filter_audio/aec/echo_cancellation.c	/^int WebRtcAec_GetDelayMetrics(void* handle, int* median, int* std) {$/;"	f
WebRtcAec_GetDelayMetricsCore	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_GetDelayMetricsCore(AecCore* self, int* median, int* std) {$/;"	f
WebRtcAec_GetEchoStats	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_GetEchoStats(AecCore* self,$/;"	f
WebRtcAec_GetMetrics	./../libs/filter_audio/aec/echo_cancellation.c	/^int WebRtcAec_GetMetrics(void* handle, AecMetrics* metrics) {$/;"	f
WebRtcAec_GetSkew	./../libs/filter_audio/aec/aec_resampler.c	/^int WebRtcAec_GetSkew(void* resampInst, int rawSkew, float* skewEst) {$/;"	f
WebRtcAec_Init	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_Init(void* aecInst, int32_t sampFreq, int32_t scSampFreq) {$/;"	f
WebRtcAec_InitAec	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_InitAec(AecCore* aec, int sampFreq) {$/;"	f
WebRtcAec_InitAec_SSE2	./../libs/filter_audio/aec/aec_core_sse2.c	/^void WebRtcAec_InitAec_SSE2(void) {$/;"	f
WebRtcAec_InitResampler	./../libs/filter_audio/aec/aec_resampler.c	/^int WebRtcAec_InitResampler(void* resampInst, int deviceSampleRateHz) {$/;"	f
WebRtcAec_MoveFarReadPtr	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_MoveFarReadPtr(AecCore* aec, int elements) {$/;"	f
WebRtcAec_OverdriveAndSuppress	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_OverdriveAndSuppress_t WebRtcAec_OverdriveAndSuppress;$/;"	v
WebRtcAec_OverdriveAndSuppress_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_OverdriveAndSuppress_t)(AecCore* aec,$/;"	t
WebRtcAec_Process	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_Process(void* aecInst,$/;"	f
WebRtcAec_ProcessFrame	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_ProcessFrame(AecCore* aec,$/;"	f
WebRtcAec_ResampleLinear	./../libs/filter_audio/aec/aec_resampler.c	/^void WebRtcAec_ResampleLinear(void* resampInst,$/;"	f
WebRtcAec_ScaleErrorSignal	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_ScaleErrorSignal_t WebRtcAec_ScaleErrorSignal;$/;"	v
WebRtcAec_ScaleErrorSignal_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_ScaleErrorSignal_t)(AecCore* aec,$/;"	t
WebRtcAec_SetConfigCore	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_SetConfigCore(AecCore* self,$/;"	f
WebRtcAec_SetSystemDelay	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_SetSystemDelay(AecCore* self, int delay) {$/;"	f
WebRtcAec_SubbandCoherence	./../libs/filter_audio/aec/aec_core.c	/^WebRtcAec_SubbandCoherence_t WebRtcAec_SubbandCoherence;$/;"	v
WebRtcAec_SubbandCoherence_t	./../libs/filter_audio/aec/aec_core_internal.h	/^typedef void (*WebRtcAec_SubbandCoherence_t)(AecCore* aec,$/;"	t
WebRtcAec_aec_core	./../libs/filter_audio/aec/echo_cancellation.c	/^AecCore* WebRtcAec_aec_core(void* handle) {$/;"	f
WebRtcAec_delay_correction_enabled	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_delay_correction_enabled(AecCore* self) {$/;"	f
WebRtcAec_echo_state	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_echo_state(AecCore* self) { return self->echoState; }$/;"	f
WebRtcAec_enable_delay_correction	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_enable_delay_correction(AecCore* self, int enable) {$/;"	f
WebRtcAec_enable_reported_delay	./../libs/filter_audio/aec/aec_core.c	/^void WebRtcAec_enable_reported_delay(AecCore* self, int enable) {$/;"	f
WebRtcAec_far_time_buf	./../libs/filter_audio/aec/aec_core.c	/^void* WebRtcAec_far_time_buf(AecCore* self) { return self->far_time_buf; }$/;"	f
WebRtcAec_get_echo_status	./../libs/filter_audio/aec/echo_cancellation.c	/^int WebRtcAec_get_echo_status(void* handle, int* status) {$/;"	f
WebRtcAec_get_error_code	./../libs/filter_audio/aec/echo_cancellation.c	/^int32_t WebRtcAec_get_error_code(void* aecInst) {$/;"	f
WebRtcAec_kExtendedSmoothingCoefficients	./../libs/filter_audio/aec/aec_core.c	/^const float WebRtcAec_kExtendedSmoothingCoefficients[2][2] = {{0.9f, 0.1f},$/;"	v
WebRtcAec_kMinFarendPSD	./../libs/filter_audio/aec/aec_core.c	/^const float WebRtcAec_kMinFarendPSD = 15;$/;"	v
WebRtcAec_kNormalSmoothingCoefficients	./../libs/filter_audio/aec/aec_core.c	/^const float WebRtcAec_kNormalSmoothingCoefficients[2][2] = {{0.9f, 0.1f},$/;"	v
WebRtcAec_overDriveCurve	./../libs/filter_audio/aec/aec_core.c	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_overDriveCurve[65] = {$/;"	v
WebRtcAec_reported_delay_enabled	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_reported_delay_enabled(AecCore* self) {$/;"	f
WebRtcAec_set_config	./../libs/filter_audio/aec/echo_cancellation.c	/^int WebRtcAec_set_config(void* handle, AecConfig config) {$/;"	f
WebRtcAec_sqrtHanning	./../libs/filter_audio/aec/aec_core.c	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_sqrtHanning[65] = {$/;"	v
WebRtcAec_system_delay	./../libs/filter_audio/aec/aec_core.c	/^int WebRtcAec_system_delay(AecCore* self) { return self->system_delay; }$/;"	f
WebRtcAec_weightCurve	./../libs/filter_audio/aec/aec_core.c	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_weightCurve[65] = {$/;"	v
WebRtcAgc_AddFarend	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_AddFarend(void *state, const int16_t *in_far, int16_t samples)$/;"	f
WebRtcAgc_AddFarendToDigital	./../libs/filter_audio/agc/digital_agc.c	/^int32_t WebRtcAgc_AddFarendToDigital(DigitalAgc_t *stt, const int16_t *in_far,$/;"	f
WebRtcAgc_AddMic	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_AddMic(void *state, int16_t *in_mic, int16_t *in_mic_H,$/;"	f
WebRtcAgc_CalculateGainTable	./../libs/filter_audio/agc/digital_agc.c	/^int32_t WebRtcAgc_CalculateGainTable(int32_t *gainTable, \/\/ Q16$/;"	f
WebRtcAgc_Create	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_Create(void **agcInst)$/;"	f
WebRtcAgc_ExpCurve	./../libs/filter_audio/agc/analog_agc.c	/^void WebRtcAgc_ExpCurve(int16_t volume, int16_t *index)$/;"	f
WebRtcAgc_Free	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_Free(void *state)$/;"	f
WebRtcAgc_Init	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_Init(void *agcInst, int32_t minLevel, int32_t maxLevel,$/;"	f
WebRtcAgc_InitDigital	./../libs/filter_audio/agc/digital_agc.c	/^int32_t WebRtcAgc_InitDigital(DigitalAgc_t *stt, int16_t agcMode)$/;"	f
WebRtcAgc_InitVad	./../libs/filter_audio/agc/digital_agc.c	/^void WebRtcAgc_InitVad(AgcVad_t *state)$/;"	f
WebRtcAgc_Process	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_Process(void *agcInst, const int16_t *in_near,$/;"	f
WebRtcAgc_ProcessAnalog	./../libs/filter_audio/agc/analog_agc.c	/^int32_t WebRtcAgc_ProcessAnalog(void *state, int32_t inMicLevel,$/;"	f
WebRtcAgc_ProcessDigital	./../libs/filter_audio/agc/digital_agc.c	/^int32_t WebRtcAgc_ProcessDigital(DigitalAgc_t *stt, const int16_t *in_near,$/;"	f
WebRtcAgc_ProcessVad	./../libs/filter_audio/agc/digital_agc.c	/^int16_t WebRtcAgc_ProcessVad(AgcVad_t *state, \/\/ (i) VAD state$/;"	f
WebRtcAgc_SaturationCtrl	./../libs/filter_audio/agc/analog_agc.c	/^void WebRtcAgc_SaturationCtrl(Agc_t *stt, uint8_t *saturated, int32_t *env)$/;"	f
WebRtcAgc_SpeakerInactiveCtrl	./../libs/filter_audio/agc/analog_agc.c	/^void WebRtcAgc_SpeakerInactiveCtrl(Agc_t *stt)$/;"	f
WebRtcAgc_UpdateAgcThresholds	./../libs/filter_audio/agc/analog_agc.c	/^void WebRtcAgc_UpdateAgcThresholds(Agc_t *stt)$/;"	f
WebRtcAgc_VirtualMic	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_VirtualMic(void *agcInst, int16_t *in_near, int16_t *in_near_H,$/;"	f
WebRtcAgc_ZeroCtrl	./../libs/filter_audio/agc/analog_agc.c	/^void WebRtcAgc_ZeroCtrl(Agc_t *stt, int32_t *inMicLevel, int32_t *env)$/;"	f
WebRtcAgc_config_t	./../libs/filter_audio/agc/include/gain_control.h	/^} WebRtcAgc_config_t;$/;"	t	typeref:struct:__anon7
WebRtcAgc_get_config	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_get_config(void *agcInst, WebRtcAgc_config_t *config)$/;"	f
WebRtcAgc_set_config	./../libs/filter_audio/agc/analog_agc.c	/^int WebRtcAgc_set_config(void *agcInst, WebRtcAgc_config_t agcConfig)$/;"	f
WebRtcNs_Analyze	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_Analyze(NsHandle* NS_inst, float* spframe) {$/;"	f
WebRtcNs_AnalyzeCore	./../libs/filter_audio/ns/ns_core.c	/^int WebRtcNs_AnalyzeCore(NSinst_t* self, float* speechFrame) {$/;"	f
WebRtcNs_Create	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_Create(NsHandle** NS_inst) {$/;"	f
WebRtcNs_Free	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_Free(NsHandle* NS_inst) {$/;"	f
WebRtcNs_Init	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_Init(NsHandle* NS_inst, uint32_t fs) {$/;"	f
WebRtcNs_InitCore	./../libs/filter_audio/ns/ns_core.c	/^int WebRtcNs_InitCore(NSinst_t* self, uint32_t fs) {$/;"	f
WebRtcNs_Process	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_Process(NsHandle* NS_inst, float* spframe, float* spframe_H,$/;"	f
WebRtcNs_ProcessCore	./../libs/filter_audio/ns/ns_core.c	/^int WebRtcNs_ProcessCore(NSinst_t* self,$/;"	f
WebRtcNs_prior_speech_probability	./../libs/filter_audio/ns/noise_suppression.c	/^float WebRtcNs_prior_speech_probability(NsHandle* handle) {$/;"	f
WebRtcNs_set_policy	./../libs/filter_audio/ns/noise_suppression.c	/^int WebRtcNs_set_policy(NsHandle* NS_inst, int mode) {$/;"	f
WebRtcNs_set_policy_core	./../libs/filter_audio/ns/ns_core.c	/^int WebRtcNs_set_policy_core(NSinst_t* self, int mode) {$/;"	f
WebRtcNsx_AnalysisUpdate	./../libs/filter_audio/ns/nsx_core.c	/^AnalysisUpdate WebRtcNsx_AnalysisUpdate;$/;"	v
WebRtcNsx_CalcParametricNoiseEstimate	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_CalcParametricNoiseEstimate(NsxInst_t* inst,$/;"	f
WebRtcNsx_ComputeSpectralDifference	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_ComputeSpectralDifference(NsxInst_t* inst, uint16_t* magnIn) {$/;"	f
WebRtcNsx_ComputeSpectralFlatness	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_ComputeSpectralFlatness(NsxInst_t* inst, uint16_t* magn) {$/;"	f
WebRtcNsx_Create	./../libs/filter_audio/ns/noise_suppression_x.c	/^int WebRtcNsx_Create(NsxHandle** nsxInst) {$/;"	f
WebRtcNsx_DataAnalysis	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_DataAnalysis(NsxInst_t* inst, short* speechFrame, uint16_t* magnU16) {$/;"	f
WebRtcNsx_DataSynthesis	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_DataSynthesis(NsxInst_t* inst, short* outFrame) {$/;"	f
WebRtcNsx_Denormalize	./../libs/filter_audio/ns/nsx_core.c	/^Denormalize WebRtcNsx_Denormalize;$/;"	v
WebRtcNsx_FeatureParameterExtraction	./../libs/filter_audio/ns/nsx_core.c	/^void WebRtcNsx_FeatureParameterExtraction(NsxInst_t* inst, int flag) {$/;"	f
WebRtcNsx_Free	./../libs/filter_audio/ns/noise_suppression_x.c	/^int WebRtcNsx_Free(NsxHandle* nsxInst) {$/;"	f
WebRtcNsx_Init	./../libs/filter_audio/ns/noise_suppression_x.c	/^int WebRtcNsx_Init(NsxHandle* nsxInst, uint32_t fs) {$/;"	f
WebRtcNsx_InitCore	./../libs/filter_audio/ns/nsx_core.c	/^int32_t WebRtcNsx_InitCore(NsxInst_t* inst, uint32_t fs) {$/;"	f
WebRtcNsx_InitMips	./../libs/filter_audio/ns/nsx_core.c	/^static void WebRtcNsx_InitMips(void) {$/;"	f	file:
WebRtcNsx_InitNeon	./../libs/filter_audio/ns/nsx_core.c	/^static void WebRtcNsx_InitNeon(void) {$/;"	f	file:
WebRtcNsx_NoiseEstimation	./../libs/filter_audio/ns/nsx_core.c	/^NoiseEstimation WebRtcNsx_NoiseEstimation;$/;"	v
WebRtcNsx_NormalizeRealBuffer	./../libs/filter_audio/ns/nsx_core.c	/^NormalizeRealBuffer WebRtcNsx_NormalizeRealBuffer;$/;"	v
WebRtcNsx_PrepareSpectrum	./../libs/filter_audio/ns/nsx_core.c	/^PrepareSpectrum WebRtcNsx_PrepareSpectrum;$/;"	v
WebRtcNsx_Process	./../libs/filter_audio/ns/noise_suppression_x.c	/^int WebRtcNsx_Process(NsxHandle* nsxInst, short* speechFrame,$/;"	f
WebRtcNsx_ProcessCore	./../libs/filter_audio/ns/nsx_core.c	/^int WebRtcNsx_ProcessCore(NsxInst_t* inst, short* speechFrame, short* speechFrameHB,$/;"	f
WebRtcNsx_SpeechNoiseProb	./../libs/filter_audio/ns/nsx_core_c.c	/^void WebRtcNsx_SpeechNoiseProb(NsxInst_t* inst,$/;"	f
WebRtcNsx_SynthesisUpdate	./../libs/filter_audio/ns/nsx_core.c	/^SynthesisUpdate WebRtcNsx_SynthesisUpdate;$/;"	v
WebRtcNsx_kCounterDiv	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kCounterDiv[201] = {$/;"	v	file:
WebRtcNsx_kLogTable	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kLogTable[9] = {$/;"	v	file:
WebRtcNsx_kLogTableFrac	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kLogTableFrac[256] = {$/;"	v	file:
WebRtcNsx_set_policy	./../libs/filter_audio/ns/noise_suppression_x.c	/^int WebRtcNsx_set_policy(NsxHandle* nsxInst, int mode) {$/;"	f
WebRtcNsx_set_policy_core	./../libs/filter_audio/ns/nsx_core.c	/^int WebRtcNsx_set_policy_core(NsxInst_t* inst, int mode) {$/;"	f
WebRtcSpl_AddSatW16	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_AddSatW16(int16_t a, int16_t b) {$/;"	f
WebRtcSpl_AddSatW32	./../libs/filter_audio/other/spl_inl.h	/^static __inline int32_t WebRtcSpl_AddSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_AllPassQMF	./../libs/filter_audio/other/splitting_filter.c	/^void WebRtcSpl_AllPassQMF(int32_t* in_data, int data_length,$/;"	f
WebRtcSpl_AnalysisQMF	./../libs/filter_audio/other/splitting_filter.c	/^void WebRtcSpl_AnalysisQMF(const int16_t* in_data, int in_data_length,$/;"	f
WebRtcSpl_ComplexBitReverse	./../libs/filter_audio/other/complex_bit_reverse.c	/^void WebRtcSpl_ComplexBitReverse(int16_t* __restrict complex_data, int stages) {$/;"	f
WebRtcSpl_ComplexFFT	./../libs/filter_audio/other/complex_fft.c	/^int WebRtcSpl_ComplexFFT(int16_t frfi[], int stages, int mode)$/;"	f
WebRtcSpl_ComplexIFFT	./../libs/filter_audio/other/complex_fft.c	/^int WebRtcSpl_ComplexIFFT(int16_t frfi[], int stages, int mode)$/;"	f
WebRtcSpl_CopyFromEndW16	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_CopyFromEndW16(const int16_t *vector_in,$/;"	f
WebRtcSpl_CreateRealFFT	./../libs/filter_audio/other/spl_init.c	/^CreateRealFFT WebRtcSpl_CreateRealFFT;$/;"	v
WebRtcSpl_CreateRealFFTC	./../libs/filter_audio/other/real_fft.c	/^struct RealFFT* WebRtcSpl_CreateRealFFTC(int order) {$/;"	f
WebRtcSpl_CreateRealFFTNeon	./../libs/filter_audio/other/real_fft.c	/^struct RealFFT* WebRtcSpl_CreateRealFFTNeon(int order) {$/;"	f
WebRtcSpl_CrossCorrelation	./../libs/filter_audio/other/spl_init.c	/^CrossCorrelation WebRtcSpl_CrossCorrelation;$/;"	v
WebRtcSpl_CrossCorrelationC	./../libs/filter_audio/other/cross_correlation.c	/^void WebRtcSpl_CrossCorrelationC(int32_t* cross_correlation,$/;"	f
WebRtcSpl_DivResultInQ31	./../libs/filter_audio/other/division_operations.c	/^int32_t WebRtcSpl_DivResultInQ31(int32_t num, int32_t den)$/;"	f
WebRtcSpl_DivU32U16	./../libs/filter_audio/other/division_operations.c	/^uint32_t WebRtcSpl_DivU32U16(uint32_t num, uint16_t den)$/;"	f
WebRtcSpl_DivW32HiLow	./../libs/filter_audio/other/division_operations.c	/^int32_t WebRtcSpl_DivW32HiLow(int32_t num, int16_t den_hi, int16_t den_low)$/;"	f
WebRtcSpl_DivW32W16	./../libs/filter_audio/other/division_operations.c	/^int32_t WebRtcSpl_DivW32W16(int32_t num, int16_t den)$/;"	f
WebRtcSpl_DivW32W16ResW16	./../libs/filter_audio/other/division_operations.c	/^int16_t WebRtcSpl_DivW32W16ResW16(int32_t num, int16_t den)$/;"	f
WebRtcSpl_DotProductWithScale	./../libs/filter_audio/other/dot_product_with_scale.c	/^int32_t WebRtcSpl_DotProductWithScale(const int16_t* vector1,$/;"	f
WebRtcSpl_DownBy2IntToShort	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_DownBy2IntToShort(int32_t *in, int32_t len, int16_t *out,$/;"	f
WebRtcSpl_DownBy2ShortToInt	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_DownBy2ShortToInt(const int16_t *in,$/;"	f
WebRtcSpl_DownsampleBy2	./../libs/filter_audio/other/resample_by_2.c	/^void WebRtcSpl_DownsampleBy2(const int16_t* in, int len,$/;"	f
WebRtcSpl_DownsampleFast	./../libs/filter_audio/other/spl_init.c	/^DownsampleFast WebRtcSpl_DownsampleFast;$/;"	v
WebRtcSpl_DownsampleFastC	./../libs/filter_audio/other/downsample_fast.c	/^int WebRtcSpl_DownsampleFastC(const int16_t* data_in,$/;"	f
WebRtcSpl_Energy	./../libs/filter_audio/other/energy.c	/^int32_t WebRtcSpl_Energy(int16_t* vector, int vector_length, int* scale_factor)$/;"	f
WebRtcSpl_FreeRealFFT	./../libs/filter_audio/other/spl_init.c	/^FreeRealFFT WebRtcSpl_FreeRealFFT;$/;"	v
WebRtcSpl_FreeRealFFTC	./../libs/filter_audio/other/real_fft.c	/^void WebRtcSpl_FreeRealFFTC(struct RealFFT* self) {$/;"	f
WebRtcSpl_FreeRealFFTNeon	./../libs/filter_audio/other/real_fft.c	/^void WebRtcSpl_FreeRealFFTNeon(struct RealFFT* self) {$/;"	f
WebRtcSpl_GetScalingSquare	./../libs/filter_audio/other/get_scaling_square.c	/^int16_t WebRtcSpl_GetScalingSquare(int16_t* in_vector,$/;"	f
WebRtcSpl_GetSizeInBits	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_GetSizeInBits(uint32_t n) {$/;"	f
WebRtcSpl_Init	./../libs/filter_audio/other/spl_init.c	/^void WebRtcSpl_Init() {$/;"	f
WebRtcSpl_LPBy2IntToInt	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_LPBy2IntToInt(const int32_t* in, int32_t len, int32_t* out,$/;"	f
WebRtcSpl_LPBy2ShortToInt	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_LPBy2ShortToInt(const int16_t* in, int32_t len, int32_t* out,$/;"	f
WebRtcSpl_MaxAbsIndexW16	./../libs/filter_audio/other/min_max_operations.c	/^int WebRtcSpl_MaxAbsIndexW16(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MaxAbsValueW16	./../libs/filter_audio/other/spl_init.c	/^MaxAbsValueW16 WebRtcSpl_MaxAbsValueW16;$/;"	v
WebRtcSpl_MaxAbsValueW16C	./../libs/filter_audio/other/min_max_operations.c	/^int16_t WebRtcSpl_MaxAbsValueW16C(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MaxAbsValueW32	./../libs/filter_audio/other/spl_init.c	/^MaxAbsValueW32 WebRtcSpl_MaxAbsValueW32;$/;"	v
WebRtcSpl_MaxAbsValueW32C	./../libs/filter_audio/other/min_max_operations.c	/^int32_t WebRtcSpl_MaxAbsValueW32C(const int32_t* vector, int length) {$/;"	f
WebRtcSpl_MaxIndexW16	./../libs/filter_audio/other/min_max_operations.c	/^int WebRtcSpl_MaxIndexW16(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MaxIndexW32	./../libs/filter_audio/other/min_max_operations.c	/^int WebRtcSpl_MaxIndexW32(const int32_t* vector, int length) {$/;"	f
WebRtcSpl_MaxValueW16	./../libs/filter_audio/other/spl_init.c	/^MaxValueW16 WebRtcSpl_MaxValueW16;$/;"	v
WebRtcSpl_MaxValueW16C	./../libs/filter_audio/other/min_max_operations.c	/^int16_t WebRtcSpl_MaxValueW16C(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MaxValueW32	./../libs/filter_audio/other/spl_init.c	/^MaxValueW32 WebRtcSpl_MaxValueW32;$/;"	v
WebRtcSpl_MaxValueW32C	./../libs/filter_audio/other/min_max_operations.c	/^int32_t WebRtcSpl_MaxValueW32C(const int32_t* vector, int length) {$/;"	f
WebRtcSpl_MemCpyReversedOrder	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_MemCpyReversedOrder(int16_t* dest, int16_t* source, int length)$/;"	f
WebRtcSpl_MemSetW16	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_MemSetW16(int16_t *ptr, int16_t set_value, int length)$/;"	f
WebRtcSpl_MemSetW32	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_MemSetW32(int32_t *ptr, int32_t set_value, int length)$/;"	f
WebRtcSpl_MinIndexW16	./../libs/filter_audio/other/min_max_operations.c	/^int WebRtcSpl_MinIndexW16(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MinIndexW32	./../libs/filter_audio/other/min_max_operations.c	/^int WebRtcSpl_MinIndexW32(const int32_t* vector, int length) {$/;"	f
WebRtcSpl_MinValueW16	./../libs/filter_audio/other/spl_init.c	/^MinValueW16 WebRtcSpl_MinValueW16;$/;"	v
WebRtcSpl_MinValueW16C	./../libs/filter_audio/other/min_max_operations.c	/^int16_t WebRtcSpl_MinValueW16C(const int16_t* vector, int length) {$/;"	f
WebRtcSpl_MinValueW32	./../libs/filter_audio/other/spl_init.c	/^MinValueW32 WebRtcSpl_MinValueW32;$/;"	v
WebRtcSpl_MinValueW32C	./../libs/filter_audio/other/min_max_operations.c	/^int32_t WebRtcSpl_MinValueW32C(const int32_t* vector, int length) {$/;"	f
WebRtcSpl_NormU32	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormU32(uint32_t a) {$/;"	f
WebRtcSpl_NormW16	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormW16(int16_t a) {$/;"	f
WebRtcSpl_NormW32	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormW32(int32_t a) {$/;"	f
WebRtcSpl_RandN	./../libs/filter_audio/other/randomization_functions.c	/^int16_t WebRtcSpl_RandN(uint32_t* seed) {$/;"	f
WebRtcSpl_RandU	./../libs/filter_audio/other/randomization_functions.c	/^int16_t WebRtcSpl_RandU(uint32_t* seed) {$/;"	f
WebRtcSpl_RandUArray	./../libs/filter_audio/other/randomization_functions.c	/^int16_t WebRtcSpl_RandUArray(int16_t* vector,$/;"	f
WebRtcSpl_RealForwardFFT	./../libs/filter_audio/other/spl_init.c	/^RealForwardFFT WebRtcSpl_RealForwardFFT;$/;"	v
WebRtcSpl_RealForwardFFTC	./../libs/filter_audio/other/real_fft.c	/^int WebRtcSpl_RealForwardFFTC(struct RealFFT* self,$/;"	f
WebRtcSpl_RealForwardFFTNeon	./../libs/filter_audio/other/real_fft.c	/^int WebRtcSpl_RealForwardFFTNeon(struct RealFFT* self,$/;"	f
WebRtcSpl_RealInverseFFT	./../libs/filter_audio/other/spl_init.c	/^RealInverseFFT WebRtcSpl_RealInverseFFT;$/;"	v
WebRtcSpl_RealInverseFFTC	./../libs/filter_audio/other/real_fft.c	/^int WebRtcSpl_RealInverseFFTC(struct RealFFT* self,$/;"	f
WebRtcSpl_RealInverseFFTNeon	./../libs/filter_audio/other/real_fft.c	/^int WebRtcSpl_RealInverseFFTNeon(struct RealFFT* self,$/;"	f
WebRtcSpl_ResampDotProduct	./../libs/filter_audio/other/resample_fractional.c	/^static void WebRtcSpl_ResampDotProduct(const int32_t *in1, const int32_t *in2,$/;"	f	file:
WebRtcSpl_Resample16khzTo48khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_Resample16khzTo48khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample32khzTo24khz	./../libs/filter_audio/other/resample_fractional.c	/^void WebRtcSpl_Resample32khzTo24khz(const int32_t *In, int32_t *Out,$/;"	f
WebRtcSpl_Resample44khzTo32khz	./../libs/filter_audio/other/resample_fractional.c	/^void WebRtcSpl_Resample44khzTo32khz(const int32_t *In, int32_t *Out,$/;"	f
WebRtcSpl_Resample48khzTo16khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_Resample48khzTo16khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample48khzTo32khz	./../libs/filter_audio/other/resample_fractional.c	/^void WebRtcSpl_Resample48khzTo32khz(const int32_t *In, int32_t *Out,$/;"	f
WebRtcSpl_Resample48khzTo8khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_Resample48khzTo8khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample8khzTo48khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_Resample8khzTo48khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_ResetResample16khzTo48khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_ResetResample16khzTo48khz(WebRtcSpl_State16khzTo48khz* state)$/;"	f
WebRtcSpl_ResetResample48khzTo16khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_ResetResample48khzTo16khz(WebRtcSpl_State48khzTo16khz* state)$/;"	f
WebRtcSpl_ResetResample48khzTo8khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_ResetResample48khzTo8khz(WebRtcSpl_State48khzTo8khz* state)$/;"	f
WebRtcSpl_ResetResample8khzTo48khz	./../libs/filter_audio/other/resample_48khz.c	/^void WebRtcSpl_ResetResample8khzTo48khz(WebRtcSpl_State8khzTo48khz* state)$/;"	f
WebRtcSpl_SatW32ToW16	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_SatW32ToW16(int32_t value32) {$/;"	f
WebRtcSpl_ScaleAndAddVectors	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_ScaleAndAddVectors(const int16_t *in1, int16_t gain1, int shift1,$/;"	f
WebRtcSpl_ScaleAndAddVectorsWithRound	./../libs/filter_audio/other/spl_init.c	/^ScaleAndAddVectorsWithRound WebRtcSpl_ScaleAndAddVectorsWithRound;$/;"	v
WebRtcSpl_ScaleAndAddVectorsWithRoundC	./../libs/filter_audio/other/vector_scaling_operations.c	/^int WebRtcSpl_ScaleAndAddVectorsWithRoundC(const int16_t* in_vector1,$/;"	f
WebRtcSpl_ScaleVector	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_ScaleVector(const int16_t *in_vector, int16_t *out_vector,$/;"	f
WebRtcSpl_ScaleVectorWithSat	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_ScaleVectorWithSat(const int16_t *in_vector, int16_t *out_vector,$/;"	f
WebRtcSpl_Sqrt	./../libs/filter_audio/other/spl_sqrt.c	/^int32_t WebRtcSpl_Sqrt(int32_t value)$/;"	f
WebRtcSpl_SqrtFloor	./../libs/filter_audio/other/spl_sqrt_floor.c	/^int32_t WebRtcSpl_SqrtFloor(int32_t value)$/;"	f
WebRtcSpl_SqrtLocal	./../libs/filter_audio/other/spl_sqrt.c	/^int32_t WebRtcSpl_SqrtLocal(int32_t in)$/;"	f
WebRtcSpl_State16khzTo22khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State16khzTo22khz;$/;"	t	typeref:struct:__anon30
WebRtcSpl_State16khzTo48khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State16khzTo48khz;$/;"	t	typeref:struct:__anon34
WebRtcSpl_State22khzTo16khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State22khzTo16khz;$/;"	t	typeref:struct:__anon29
WebRtcSpl_State22khzTo8khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State22khzTo8khz;$/;"	t	typeref:struct:__anon31
WebRtcSpl_State48khzTo16khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State48khzTo16khz;$/;"	t	typeref:struct:__anon33
WebRtcSpl_State48khzTo8khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State48khzTo8khz;$/;"	t	typeref:struct:__anon35
WebRtcSpl_State8khzTo22khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State8khzTo22khz;$/;"	t	typeref:struct:__anon32
WebRtcSpl_State8khzTo48khz	./../libs/filter_audio/other/signal_processing_library.h	/^} WebRtcSpl_State8khzTo48khz;$/;"	t	typeref:struct:__anon36
WebRtcSpl_SubSatW16	./../libs/filter_audio/other/spl_inl.h	/^static __inline int16_t WebRtcSpl_SubSatW16(int16_t var1, int16_t var2) {$/;"	f
WebRtcSpl_SubSatW32	./../libs/filter_audio/other/spl_inl.h	/^static __inline int32_t WebRtcSpl_SubSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_SynthesisQMF	./../libs/filter_audio/other/splitting_filter.c	/^void WebRtcSpl_SynthesisQMF(const int16_t* low_band, const int16_t* high_band,$/;"	f
WebRtcSpl_UpBy2IntToInt	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2IntToInt(const int32_t *in, int32_t len, int32_t *out,$/;"	f
WebRtcSpl_UpBy2IntToShort	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2IntToShort(const int32_t *in, int32_t len, int16_t *out,$/;"	f
WebRtcSpl_UpBy2ShortToInt	./../libs/filter_audio/other/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2ShortToInt(const int16_t *in, int32_t len, int32_t *out,$/;"	f
WebRtcSpl_UpsampleBy2	./../libs/filter_audio/other/resample_by_2.c	/^void WebRtcSpl_UpsampleBy2(const int16_t* in, int len,$/;"	f
WebRtcSpl_VectorBitShiftW16	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW16(int16_t *res, int16_t length,$/;"	f
WebRtcSpl_VectorBitShiftW32	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW32(int32_t *out_vector,$/;"	f
WebRtcSpl_VectorBitShiftW32ToW16	./../libs/filter_audio/other/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW32ToW16(int16_t* out, int length,$/;"	f
WebRtcSpl_ZerosArrayW16	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_ZerosArrayW16(int16_t *vector, int length)$/;"	f
WebRtcSpl_ZerosArrayW32	./../libs/filter_audio/other/copy_set_operations.c	/^void WebRtcSpl_ZerosArrayW32(int32_t *vector, int length)$/;"	f
WebRtcSpl_kAllPassFilter1	./../libs/filter_audio/other/splitting_filter.c	/^static const uint16_t WebRtcSpl_kAllPassFilter1[3] = {6418, 36982, 57261};$/;"	v	file:
WebRtcSpl_kAllPassFilter2	./../libs/filter_audio/other/splitting_filter.c	/^static const uint16_t WebRtcSpl_kAllPassFilter2[3] = {21333, 49062, 63010};$/;"	v	file:
WebRtc_AddBinaryFarSpectrum	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_AddBinaryFarSpectrum(BinaryDelayEstimatorFarend* handle,$/;"	f
WebRtc_AddFarSpectrumFix	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_AddFarSpectrumFix(void* handle,$/;"	f
WebRtc_AddFarSpectrumFloat	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_AddFarSpectrumFloat(void* handle,$/;"	f
WebRtc_AllocateFarendBufferMemory	./../libs/filter_audio/other/delay_estimator.c	/^int WebRtc_AllocateFarendBufferMemory(BinaryDelayEstimatorFarend* self,$/;"	f
WebRtc_AllocateHistoryBufferMemory	./../libs/filter_audio/other/delay_estimator.c	/^int WebRtc_AllocateHistoryBufferMemory(BinaryDelayEstimator* self,$/;"	f
WebRtc_CreateBinaryDelayEstimator	./../libs/filter_audio/other/delay_estimator.c	/^BinaryDelayEstimator* WebRtc_CreateBinaryDelayEstimator($/;"	f
WebRtc_CreateBinaryDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator.c	/^BinaryDelayEstimatorFarend* WebRtc_CreateBinaryDelayEstimatorFarend($/;"	f
WebRtc_CreateBuffer	./../libs/filter_audio/other/ring_buffer.c	/^RingBuffer* WebRtc_CreateBuffer(size_t element_count, size_t element_size) {$/;"	f
WebRtc_CreateDelayEstimator	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^void* WebRtc_CreateDelayEstimator(void* farend_handle, int max_lookahead) {$/;"	f
WebRtc_CreateDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^void* WebRtc_CreateDelayEstimatorFarend(int spectrum_size, int history_size) {$/;"	f
WebRtc_DelayEstimatorProcessFix	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_DelayEstimatorProcessFix(void* handle,$/;"	f
WebRtc_DelayEstimatorProcessFloat	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_DelayEstimatorProcessFloat(void* handle,$/;"	f
WebRtc_FreeBinaryDelayEstimator	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_FreeBinaryDelayEstimator(BinaryDelayEstimator* self) {$/;"	f
WebRtc_FreeBinaryDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_FreeBinaryDelayEstimatorFarend(BinaryDelayEstimatorFarend* self) {$/;"	f
WebRtc_FreeBuffer	./../libs/filter_audio/other/ring_buffer.c	/^void WebRtc_FreeBuffer(void* handle) {$/;"	f
WebRtc_FreeDelayEstimator	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^void WebRtc_FreeDelayEstimator(void* handle) {$/;"	f
WebRtc_FreeDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^void WebRtc_FreeDelayEstimatorFarend(void* handle) {$/;"	f
WebRtc_InitBinaryDelayEstimator	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_InitBinaryDelayEstimator(BinaryDelayEstimator* self) {$/;"	f
WebRtc_InitBinaryDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_InitBinaryDelayEstimatorFarend(BinaryDelayEstimatorFarend* self) {$/;"	f
WebRtc_InitBuffer	./../libs/filter_audio/other/ring_buffer.c	/^int WebRtc_InitBuffer(RingBuffer* self) {$/;"	f
WebRtc_InitDelayEstimator	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_InitDelayEstimator(void* handle) {$/;"	f
WebRtc_InitDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_InitDelayEstimatorFarend(void* handle) {$/;"	f
WebRtc_MeanEstimatorFix	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_MeanEstimatorFix(int32_t new_value,$/;"	f
WebRtc_MoveReadPtr	./../libs/filter_audio/other/ring_buffer.c	/^int WebRtc_MoveReadPtr(RingBuffer* self, int element_count) {$/;"	f
WebRtc_MulAccumW16	./../libs/filter_audio/other/spl_inl.h	/^static __inline int32_t WebRtc_MulAccumW16(int16_t a, int16_t b, int32_t c) {$/;"	f
WebRtc_ProcessBinarySpectrum	./../libs/filter_audio/other/delay_estimator.c	/^int WebRtc_ProcessBinarySpectrum(BinaryDelayEstimator* self,$/;"	f
WebRtc_ReadBuffer	./../libs/filter_audio/other/ring_buffer.c	/^size_t WebRtc_ReadBuffer(RingBuffer* self,$/;"	f
WebRtc_SoftResetBinaryDelayEstimator	./../libs/filter_audio/other/delay_estimator.c	/^int WebRtc_SoftResetBinaryDelayEstimator(BinaryDelayEstimator* self,$/;"	f
WebRtc_SoftResetBinaryDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator.c	/^void WebRtc_SoftResetBinaryDelayEstimatorFarend($/;"	f
WebRtc_SoftResetDelayEstimator	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_SoftResetDelayEstimator(void* handle, int delay_shift) {$/;"	f
WebRtc_SoftResetDelayEstimatorFarend	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^void WebRtc_SoftResetDelayEstimatorFarend(void* handle, int delay_shift) {$/;"	f
WebRtc_WriteBuffer	./../libs/filter_audio/other/ring_buffer.c	/^size_t WebRtc_WriteBuffer(RingBuffer* self,$/;"	f
WebRtc_available_read	./../libs/filter_audio/other/ring_buffer.c	/^size_t WebRtc_available_read(const RingBuffer* self) {$/;"	f
WebRtc_available_write	./../libs/filter_audio/other/ring_buffer.c	/^size_t WebRtc_available_write(const RingBuffer* self) {$/;"	f
WebRtc_binary_last_delay	./../libs/filter_audio/other/delay_estimator.c	/^int WebRtc_binary_last_delay(BinaryDelayEstimator* self) {$/;"	f
WebRtc_binary_last_delay_quality	./../libs/filter_audio/other/delay_estimator.c	/^float WebRtc_binary_last_delay_quality(BinaryDelayEstimator* self) {$/;"	f
WebRtc_cdft	./../libs/filter_audio/other/fft4g.c	/^void WebRtc_cdft(int n, int isgn, float *a, int *ip, float *w)$/;"	f
WebRtc_enable_robust_validation	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_enable_robust_validation(void* handle, int enable) {$/;"	f
WebRtc_get_allowed_offset	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_get_allowed_offset(const void* handle) {$/;"	f
WebRtc_history_size	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_history_size(const void* handle) {$/;"	f
WebRtc_is_robust_validation_enabled	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_is_robust_validation_enabled(const void* handle) {$/;"	f
WebRtc_last_delay	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_last_delay(void* handle) {$/;"	f
WebRtc_last_delay_quality	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^float WebRtc_last_delay_quality(void* handle) {$/;"	f
WebRtc_lookahead	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_lookahead(void* handle) {$/;"	f
WebRtc_rdft	./../libs/filter_audio/other/fft4g.c	/^void WebRtc_rdft(int n, int isgn, float *a, int *ip, float *w)$/;"	f
WebRtc_set_allowed_offset	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_set_allowed_offset(void* handle, int allowed_offset) {$/;"	f
WebRtc_set_history_size	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_set_history_size(void* handle, int history_size) {$/;"	f
WebRtc_set_lookahead	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^int WebRtc_set_lookahead(void* handle, int lookahead) {$/;"	f
White	./../src/misc/style.h	/^        White,$/;"	e	enum:Style::ColorPalette
Widget	./../src/widget/widget.cpp	/^Widget::Widget(QWidget *parent)$/;"	f	class:Widget
Widget	./../src/widget/widget.h	/^class Widget : public QMainWindow$/;"	c
Widget	./../updater/widget.cpp	/^Widget::Widget(QWidget *parent) :$/;"	f	class:Widget
Widget	./../updater/widget.h	/^class Widget : public QWidget$/;"	c
WindowData	./../libs/filter_audio/aec/aec_core.c	/^__inline static void WindowData(float* x_windowed, const float* x) {$/;"	f	file:
WindowData	./../libs/filter_audio/aec/aec_core_sse2.c	/^__inline static void WindowData(float* x_windowed, const float* x) {$/;"	f	file:
Windowing	./../libs/filter_audio/ns/ns_core.c	/^static void Windowing(const float* window,$/;"	f	file:
Wrap	./../libs/filter_audio/other/ring_buffer.c	/^enum Wrap {$/;"	g	file:
YUV	./../src/video/videoframe.h	/^        YUV,$/;"	e	enum:VideoFrame::ColorFormat
Yellow	./../src/misc/style.h	/^        Yellow,$/;"	e	enum:Style::ColorPalette
_2	./../ui_filetransferwidget.h	/^    QHBoxLayout *_2;$/;"	m	class:Ui_FileTransferWidget
_FILTER_AUDIO	./../libs/filter_audio/filter_audio.c	31;"	d	file:
_NB_STATUS_NOTIFIER_ICONS	./../src/platform/statusnotifier/statusnotifier.h	/^    _NB_STATUS_NOTIFIER_ICONS$/;"	e	enum:__anon49
_SKIP	./../android/gradlew.bat	/^set _SKIP=2$/;"	v
_StatusNotifier	./../src/platform/statusnotifier/statusnotifier.h	/^struct _StatusNotifier$/;"	s
_StatusNotifierClass	./../src/platform/statusnotifier/statusnotifier.h	/^struct _StatusNotifierClass$/;"	s
_StatusNotifierPrivate	./../src/platform/statusnotifier/statusnotifier.c	/^struct _StatusNotifierPrivate$/;"	s	file:
__INTERFACES_H__	./../src/platform/statusnotifier/interfaces.h	24;"	d
__STATUS_NOTIFIER_ENUMS_H__	./../src/platform/statusnotifier/enums.h	2;"	d
__STATUS_NOTIFIER_H__	./../src/platform/statusnotifier/statusnotifier.h	24;"	d
__g_cclosure_user_marshal_MARSHAL_H__	./../src/platform/statusnotifier/closures.h	24;"	d
_askQuestion	./../src/widget/gui.cpp	/^bool GUI::_askQuestion(const QString& title, const QString& msg,$/;"	f	class:GUI
_getProp	./../src/video/cameraworker.cpp	/^double CameraWorker::_getProp(int prop)$/;"	f	class:CameraWorker
_itemInputDialog	./../src/widget/gui.cpp	/^QString GUI::_itemInputDialog(QWidget * parent, const QString & title,$/;"	f	class:GUI
_mm_add_ps_4x1	./../libs/filter_audio/aec/aec_core_sse2.c	/^__inline static void _mm_add_ps_4x1(__m128 sum, float *dst) {$/;"	f	file:
_mm_castps_si128	./../libs/filter_audio/aec/aec_rdft.h	/^static __inline __m128i _mm_castps_si128(__m128 a) { return *(__m128i*)&a; }$/;"	f
_mm_castsi128_ps	./../libs/filter_audio/aec/aec_rdft.h	/^static __inline __m128 _mm_castsi128_ps(__m128i a) { return *(__m128*)&a; }$/;"	f
_passwordDialog	./../src/widget/gui.cpp	/^QString GUI::_passwordDialog(const QString& cancel, const QString& body)$/;"	f	class:GUI
_probeResolutions	./../src/video/cameraworker.cpp	/^void CameraWorker::_probeResolutions()$/;"	f	class:CameraWorker
_reloadTheme	./../src/widget/gui.cpp	/^void GUI::_reloadTheme()$/;"	f	class:GUI
_resume	./../src/video/cameraworker.cpp	/^void CameraWorker::_resume()$/;"	f	class:CameraWorker
_setEnabled	./../src/widget/gui.cpp	/^void GUI::_setEnabled(bool state)$/;"	f	class:GUI
_setProp	./../src/video/cameraworker.cpp	/^void CameraWorker::_setProp(int prop, double val)$/;"	f	class:CameraWorker
_setWindowTitle	./../src/widget/gui.cpp	/^void GUI::_setWindowTitle(const QString& title)$/;"	f	class:GUI
_showError	./../src/widget/gui.cpp	/^void GUI::_showError(const QString& title, const QString& msg)$/;"	f	class:GUI
_showInfo	./../src/widget/gui.cpp	/^void GUI::_showInfo(const QString& title, const QString& msg)$/;"	f	class:GUI
_showWarning	./../src/widget/gui.cpp	/^void GUI::_showWarning(const QString& title, const QString& msg)$/;"	f	class:GUI
_suspend	./../src/video/cameraworker.cpp	/^void CameraWorker::_suspend()$/;"	f	class:CameraWorker
aNlp	./../libs/filter_audio/aec/aec_core_internal.h	/^  Stats aNlp;$/;"	m	struct:AecCore
aNlp	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  AecLevel aNlp;$/;"	m	struct:__anon22
abortFlag	./../src/autoupdate.h	/^    static bool abortFlag; \/\/\/< If true, try to abort everything.$/;"	m	class:AutoUpdater
abortUpdates	./../src/autoupdate.cpp	/^void AutoUpdater::abortUpdates()$/;"	f	class:AutoUpdater
acceptFileRecvRequest	./../src/core.cpp	/^void Core::acceptFileRecvRequest(int friendId, int fileNum, QString path)$/;"	f	class:Core
acceptFriendRequest	./../src/core.cpp	/^void Core::acceptFriendRequest(const QString& userId)$/;"	f	class:Core
acceptTransfer	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::acceptTransfer(const QString &filepath)$/;"	f	class:FileTransferWidget
accepted	./../moc_callconfirmwidget.cpp	/^void CallConfirmWidget::accepted()$/;"	f	class:CallConfirmWidget
accepted	./../src/ipc.h	/^        bool accepted;$/;"	m	struct:IPC::IPCEvent
action	./../src/chatlog/chatmessage.h	/^    bool action = false;$/;"	m	class:ChatMessage
actionClose	./../ui_mainwindow.h	/^    QAction *actionClose;$/;"	m	class:Ui_MainWindow
actionQuit	./../src/widget/widget.h	/^            *actionQuit;$/;"	m	class:Widget
actionSentResult	./../moc_core.cpp	/^void Core::actionSentResult(int _t1, const QString & _t2, int _t3)$/;"	f	class:Core
activate	./../src/platform/statusnotifier/statusnotifier.h	/^    gboolean        (*activate)             (StatusNotifier         *sn,$/;"	m	struct:_StatusNotifierClass
activated	./../moc_systemtrayicon.cpp	/^void SystemTrayIcon::activated(QSystemTrayIcon::ActivationReason _t1)$/;"	f	class:SystemTrayIcon
active	./../src/coreav.h	/^    bool active = false;$/;"	m	struct:ToxGroupCall
active	./../src/coreav.h	/^    bool active;$/;"	m	struct:ToxCall
activeChatroomWidget	./../src/widget/widget.h	/^    GenericChatroomWidget *activeChatroomWidget;$/;"	m	class:Widget
activeSpeech	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             activeSpeech;       \/\/ Milliseconds of active speech$/;"	m	struct:__anon1
addAlertMessage	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::addAlertMessage(const ToxID &author, QString message, QDateTime datetime)$/;"	f	class:GenericChatForm
addButton	./../ui_mainwindow.h	/^    QPushButton *addButton;$/;"	m	class:Ui_MainWindow
addChatEntry	./../src/historykeeper.cpp	/^qint64 HistoryKeeper::addChatEntry(const QString& chat, const QString& message, const QString& sender, const QDateTime &dt, bool isSent)$/;"	f	class:HistoryKeeper
addColumn	./../src/chatlog/chatline.cpp	/^void ChatLine::addColumn(ChatLineContent* item, ColumnFormat fmt)$/;"	f	class:ChatLine
addFriend	./../src/friendlist.cpp	/^Friend* FriendList::addFriend(int friendId, const ToxID& userId)$/;"	f	class:FriendList
addFriend	./../src/widget/widget.cpp	/^void Widget::addFriend(int friendId, const QString &userId)$/;"	f	class:Widget
addFriendFailed	./../src/widget/widget.cpp	/^void Widget::addFriendFailed(const QString&, const QString& errorInfo)$/;"	f	class:Widget
addFriendForm	./../src/widget/widget.h	/^    AddFriendForm *addFriendForm;$/;"	m	class:Widget
addGroup	./../src/grouplist.cpp	/^Group* GroupList::addGroup(int groupId, const QString& name, bool isAvGroupchat)$/;"	f	class:GroupList
addGroupChatEntry	./../src/historykeeper.cpp	/^qint64 HistoryKeeper::addGroupChatEntry(const QString &chat, const QString &message, const QString &sender, const QDateTime &dt)$/;"	f	class:HistoryKeeper
addItem	./../src/misc/flowlayout.cpp	/^void FlowLayout::addItem(QLayoutItem *item)$/;"	f	class:FlowLayout
addMessage	./../src/widget/form/genericchatform.cpp	/^ChatMessage::Ptr GenericChatForm::addMessage(const ToxID& author, const QString &message, bool isAction,$/;"	f	class:GenericChatForm
addSelfMessage	./../src/widget/form/genericchatform.cpp	/^ChatMessage::Ptr GenericChatForm::addSelfMessage(const QString &message, bool isAction, const QDateTime &datetime, bool isSent)$/;"	f	class:GenericChatForm
addSystemInfoMessage	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::addSystemInfoMessage(const QString &message, ChatMessage::SystemMessageType type, const QDateTime &datetime)$/;"	f	class:GenericChatForm
addToScene	./../src/chatlog/chatline.cpp	/^void ChatLine::addToScene(QGraphicsScene *scene)$/;"	f	class:ChatLine
addr	./../src/misc/settings.h	/^        QString addr;$/;"	m	struct:Settings::friendProp
address	./../src/corestructs.h	/^    QString address;$/;"	m	struct:DhtServer
address	./../src/misc/settings.h	/^        QString address;$/;"	m	struct:Settings::DhtServer
aec	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  AecCore* aec;$/;"	m	struct:__anon23
aec_rdft_forward_128	./../libs/filter_audio/aec/aec_rdft.c	/^void aec_rdft_forward_128(float* a) {$/;"	f
aec_rdft_init	./../libs/filter_audio/aec/aec_rdft.c	/^void aec_rdft_init(void) {$/;"	f
aec_rdft_init_sse2	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^void aec_rdft_init_sse2(void) {$/;"	f
aec_rdft_inverse_128	./../libs/filter_audio/aec/aec_rdft.c	/^void aec_rdft_inverse_128(float* a) {$/;"	f
aecpc_t	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^} aecpc_t;$/;"	t	typeref:struct:__anon23
agcLog	./../libs/filter_audio/agc/analog_agc.h	/^    FILE* agcLog;$/;"	m	struct:__anon1
agcMode	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             agcMode;            \/\/ Hard coded mode (adaptAna\/adaptDig\/fixedDig)$/;"	m	struct:__anon1
agcMode	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t agcMode;$/;"	m	struct:__anon4
aggrMode	./../libs/filter_audio/ns/ns_core.h	/^  int aggrMode;$/;"	m	struct:NSinst_t_
aggrMode	./../libs/filter_audio/ns/nsx_core.h	/^  int                     aggrMode;$/;"	m	struct:NsxInst_t_
alContext	./../src/audio.h	/^    static ALCcontext* alContext;$/;"	m	class:Audio
alInDev	./../src/audio.h	/^    static ALCdevice* alOutDev, *alInDev;$/;"	m	class:Audio
alMainSource	./../src/audio.h	/^    static ALuint alMainSource;$/;"	m	class:Audio
alOutDev	./../src/audio.h	/^    static ALCdevice* alOutDev, *alInDev;$/;"	m	class:Audio
alSource	./../src/coreav.h	/^    ALuint alSource;$/;"	m	struct:ToxCall
alSources	./../src/coreav.h	/^    QHash<int, ALuint> alSources;$/;"	m	struct:ToxGroupCall
alias	./../src/misc/settings.h	/^        QString alias;$/;"	m	struct:Settings::friendProp
aliasChanged	./../moc_chatform.cpp	/^void ChatForm::aliasChanged(const QString & _t1)$/;"	f	class:ChatForm
aliases	./../src/historykeeper.h	/^    QMap<QString, int> aliases;$/;"	m	class:HistoryKeeper
allowed_offset	./../libs/filter_audio/other/delay_estimator.h	/^  int allowed_offset;$/;"	m	struct:__anon25
alpha	./../src/chatlog/content/notificationicon.h	/^    qreal alpha = 0.0;$/;"	m	class:NotificationIcon
alpha	./../src/chatlog/content/spinner.h	/^    qreal alpha = 0.0;$/;"	m	class:Spinner
anaLen	./../libs/filter_audio/ns/ns_core.h	/^  int anaLen;$/;"	m	struct:NSinst_t_
anaLen	./../libs/filter_audio/ns/nsx_core.h	/^  int                     anaLen;$/;"	m	struct:NsxInst_t_
anaLen2	./../libs/filter_audio/ns/nsx_core.h	/^  int                     anaLen2;$/;"	m	struct:NsxInst_t_
analogTarget	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             analogTarget;       \/\/ Digital reference level in ENV scale$/;"	m	struct:__anon1
analogTargetLevel	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             analogTargetLevel;  \/\/ = RXX_BUFFER_LEN * 846805;       -22 dBfs$/;"	m	struct:__anon1
analysisBuffer	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 analysisBuffer[ANAL_BLOCKL_MAX];$/;"	m	struct:NsxInst_t_
analyzeBuf	./../libs/filter_audio/ns/ns_core.h	/^  float analyzeBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NSinst_t_
anchor	./../src/widget/callconfirmwidget.h	/^    const QWidget* anchor; \/\/\/< The widget we're going to be tracking$/;"	m	class:CallConfirmWidget
androidgui	./../src/nexus.h	/^    AndroidGUI* androidgui;$/;"	m	class:Nexus
answerCall	./../moc_chatform.cpp	/^void ChatForm::answerCall(int _t1)$/;"	f	class:ChatForm
answerCall	./../src/coreav.cpp	/^void Core::answerCall(int callId)$/;"	f	class:Core
anyActiveCalls	./../src/coreav.cpp	/^bool Core::anyActiveCalls()$/;"	f	class:Core
apiUrl	./../src/toxme.h	/^    static const QString apiUrl;$/;"	m	class:Toxme
appFont	./../src/misc/style.cpp	/^QFont appFont(int pixelSize, int weight)$/;"	f
appendToEncrypted	./../src/misc/db/encrypteddb.cpp	/^void EncryptedDb::appendToEncrypted(const QString &sql)$/;"	f	class:EncryptedDb
applyProps	./../src/video/cameraworker.cpp	/^void CameraWorker::applyProps()$/;"	f	class:CameraWorker
applyTheme	./../src/misc/style.cpp	/^void Style::applyTheme()$/;"	f	class:Style
ascent	./../src/chatlog/content/text.h	/^    qreal ascent = 0.0;$/;"	m	class:Text
askProfiles	./../src/misc/settings.cpp	/^QString Settings::askProfiles()$/;"	f	class:Settings
askQuestion	./../src/widget/gui.cpp	/^bool GUI::askQuestion(const QString& title, const QString& msg,$/;"	f	class:GUI
attention_movie_name	./../src/platform/statusnotifier/statusnotifier.c	/^    gchar *attention_movie_name;$/;"	m	struct:_StatusNotifierPrivate	file:
audioDebugLog	./../src/audio.cpp	/^void audioDebugLog(QString msg)$/;"	f
audioGroup	./../ui_avsettings.h	/^    QGroupBox *audioGroup;$/;"	m	class:Ui_AVSettings
audioInLock	./../src/audio.h	/^    static QMutex* audioInLock, *audioOutLock;$/;"	m	class:Audio
audioInputFlag	./../src/widget/form/genericchatform.h	/^    bool audioInputFlag;$/;"	m	class:GenericChatForm
audioOutLock	./../src/audio.h	/^    static QMutex* audioInLock, *audioOutLock;$/;"	m	class:Audio
audioOutputFlag	./../src/widget/form/genericchatform.h	/^    bool audioOutputFlag;$/;"	m	class:GenericChatForm
audioThread	./../src/audio.h	/^    static QThread* audioThread;$/;"	m	class:Audio
autoAccept	./../src/misc/settings.h	/^    QHash<QString, QString> autoAccept;$/;"	m	class:Settings
autoAcceptDir	./../src/misc/settings.h	/^        QString autoAcceptDir;$/;"	m	struct:Settings::friendProp
autoAcceptTransfer	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::autoAcceptTransfer(const QString &path)$/;"	f	class:FileTransferWidget
autoAwayActive	./../src/widget/widget.h	/^    bool autoAwayActive = false;$/;"	m	class:Widget
autoAwayLabel	./../ui_generalsettings.h	/^    QLabel *autoAwayLabel;$/;"	m	class:Ui_GeneralSettings
autoAwaySpinBox	./../ui_generalsettings.h	/^    QSpinBox *autoAwaySpinBox;$/;"	m	class:Ui_GeneralSettings
autoAwayTime	./../src/misc/settings.h	/^    int autoAwayTime;$/;"	m	class:Settings
autoLayout	./../ui_generalsettings.h	/^    QGridLayout *autoLayout;$/;"	m	class:Ui_GeneralSettings
autoSaveEnabled	./../src/misc/settings.h	/^    bool autoSaveEnabled;    $/;"	m	class:Settings
autoSaveFilesDir	./../ui_generalsettings.h	/^    QPushButton *autoSaveFilesDir;$/;"	m	class:Ui_GeneralSettings
autoSaveFilesDirLabel	./../ui_generalsettings.h	/^    QLabel *autoSaveFilesDirLabel;$/;"	m	class:Ui_GeneralSettings
autoacceptFiles	./../ui_generalsettings.h	/^    QCheckBox *autoacceptFiles;$/;"	m	class:Ui_GeneralSettings
autopickBackground	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::autopickBackground()$/;"	f	class:MaskablePixmapWidget
autostartInTray	./../src/misc/settings.h	/^    bool autostartInTray;$/;"	m	class:Settings
avCallFailed	./../moc_core.cpp	/^void Core::avCallFailed(int _t1)$/;"	f	class:Core
avCancel	./../moc_core.cpp	/^void Core::avCancel(int _t1, int _t2)$/;"	f	class:Core
avEnd	./../moc_core.cpp	/^void Core::avEnd(int _t1, int _t2)$/;"	f	class:Core
avEnding	./../moc_core.cpp	/^void Core::avEnding(int _t1, int _t2)$/;"	f	class:Core
avGroupchat	./../src/group.h	/^    bool avGroupchat;$/;"	m	class:Group
avInvite	./../moc_core.cpp	/^void Core::avInvite(int _t1, int _t2, bool _t3)$/;"	f	class:Core
avMediaChange	./../moc_core.cpp	/^void Core::avMediaChange(int _t1, int _t2, bool _t3)$/;"	f	class:Core
avPeerTimeout	./../moc_core.cpp	/^void Core::avPeerTimeout(int _t1, int _t2)$/;"	f	class:Core
avRejected	./../moc_core.cpp	/^void Core::avRejected(int _t1, int _t2)$/;"	f	class:Core
avRequestTimeout	./../moc_core.cpp	/^void Core::avRequestTimeout(int _t1, int _t2)$/;"	f	class:Core
avRinging	./../moc_core.cpp	/^void Core::avRinging(int _t1, int _t2, bool _t3)$/;"	f	class:Core
avStart	./../moc_core.cpp	/^void Core::avStart(int _t1, int _t2, bool _t3)$/;"	f	class:Core
avStarting	./../moc_core.cpp	/^void Core::avStarting(int _t1, int _t2, bool _t3)$/;"	f	class:Core
avatar	./../src/widget/form/genericchatform.h	/^    MaskablePixmapWidget *avatar;$/;"	m	class:GenericChatForm
avatar	./../src/widget/genericchatroomwidget.h	/^    MaskablePixmapWidget* avatar;$/;"	m	class:GenericChatroomWidget
average	./../libs/filter_audio/aec/aec_core.h	/^  float average;$/;"	m	struct:Stats
average	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int average;$/;"	m	struct:__anon21
averagelevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  float averagelevel;$/;"	m	struct:PowerLevel
avgMagnPause	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 avgMagnPause[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
ba	./../libs/filter_audio/other/signal_processing_library.h	/^  const int16_t* ba;$/;"	m	struct:__anon37
backendType	./../src/widget/systemtrayicon.h	/^    SystrayBackendType backendType;$/;"	m	class:SystemTrayIcon
backgroundColor	./../src/chatlog/content/filetransferwidget.h	/^    QColor backgroundColor;$/;"	m	class:FileTransferWidget
backgroundColor	./../src/widget/maskablepixmapwidget.h	/^    QColor backgroundColor;$/;"	m	class:MaskablePixmapWidget
backgroundColorAnimation	./../src/chatlog/content/filetransferwidget.h	/^    QVariantAnimation* backgroundColorAnimation = nullptr;$/;"	m	class:FileTransferWidget
backupProfile	./../src/core.h	/^    QString* backupProfile = nullptr;$/;"	m	class:Core
backupkeys	./../src/core.h	/^    uint8_t* backupkeys[PasswordType::ptCounter] = {nullptr};$/;"	m	class:Core
backups	./../updater/widget.h	/^    QStringList backups;$/;"	m	class:Widget
badProxy	./../moc_core.cpp	/^void Core::badProxy()$/;"	f	class:Core
bbox	./../src/chatlog/chatline.h	/^    QRectF bbox;$/;"	m	class:ChatLine
beforeDisconnect	./../src/widget/androidgui.h	/^    Status beforeDisconnect = Status::Offline;$/;"	m	class:AndroidGUI
beforeDisconnect	./../src/widget/widget.h	/^    Status beforeDisconnect = Status::Offline;$/;"	m	class:Widget
bgrProgramm	./../src/widget/videosurface.h	/^    QOpenGLShaderProgram* bgrProgramm;$/;"	m	class:VideoSurface
binSizeLrt	./../libs/filter_audio/ns/ns_core.h	/^  float binSizeLrt;$/;"	m	struct:NSParaExtract_t_
binSizeSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  float binSizeSpecDiff;$/;"	m	struct:NSParaExtract_t_
binSizeSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float binSizeSpecFlat;$/;"	m	struct:NSParaExtract_t_
binary_far_history	./../libs/filter_audio/other/delay_estimator.h	/^  uint32_t* binary_far_history;$/;"	m	struct:__anon24
binary_farend	./../libs/filter_audio/other/delay_estimator_internal.h	/^  BinaryDelayEstimatorFarend* binary_farend;$/;"	m	struct:__anon39
binary_handle	./../libs/filter_audio/other/delay_estimator_internal.h	/^  BinaryDelayEstimator* binary_handle;$/;"	m	struct:__anon40
binary_near_history	./../libs/filter_audio/other/delay_estimator.h	/^  uint32_t* binary_near_history;$/;"	m	struct:__anon25
bit_counts	./../libs/filter_audio/other/delay_estimator.h	/^  int32_t* bit_counts;$/;"	m	struct:__anon25
bitrv2	./../libs/filter_audio/other/fft4g.c	/^static void bitrv2(int n, int *ip, float *a)$/;"	f	file:
bitrv2_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t bitrv2_128;$/;"	v
bitrv2_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void bitrv2_128_C(float* a) {$/;"	f	file:
bitrv2conj	./../libs/filter_audio/other/fft4g.c	/^static void bitrv2conj(int n, int *ip, float *a)$/;"	f	file:
blendAnimation	./../src/chatlog/content/spinner.h	/^    QVariantAnimation* blendAnimation;$/;"	m	class:Spinner
blockInd	./../libs/filter_audio/ns/ns_core.h	/^  int32_t blockInd;  \/\/ Frame index counter.$/;"	m	struct:NSinst_t_
blockIndex	./../libs/filter_audio/ns/nsx_core.h	/^  int                     blockIndex;  \/\/ Frame index counter.$/;"	m	struct:NsxInst_t_
blockLen	./../libs/filter_audio/ns/ns_core.h	/^  int blockLen;$/;"	m	struct:NSinst_t_
blockLen10ms	./../libs/filter_audio/ns/nsx_core.h	/^  int                     blockLen10ms;$/;"	m	struct:NsxInst_t_
blockPaintEvents	./../src/widget/croppinglabel.h	/^    bool blockPaintEvents;$/;"	m	class:CroppingLabel
blockingClearContacts	./../moc_core.cpp	/^void Core::blockingClearContacts()$/;"	f	class:Core
body	./../src/widget/form/setpassworddialog.h	/^    QString body;$/;"	m	class:SetPasswordDialog
body	./../src/widget/form/settingswidget.h	/^    QWidget *head, *body;$/;"	m	class:SettingsWidget
body	./../ui_setpassworddialog.h	/^    QLabel *body;$/;"	m	class:Ui_SetPasswordDialog
bodyUI	./../src/widget/form/settings/advancedform.h	/^    Ui::AdvancedSettings* bodyUI;$/;"	m	class:AdvancedForm
bodyUI	./../src/widget/form/settings/avform.h	/^    Ui::AVSettings *bodyUI;$/;"	m	class:AVForm
bodyUI	./../src/widget/form/settings/generalform.h	/^    Ui::GeneralSettings *bodyUI;$/;"	m	class:GeneralForm
bodyUI	./../src/widget/form/settings/identityform.h	/^    Ui::IdentitySettings* bodyUI;$/;"	m	class:IdentityForm
bodyUI	./../src/widget/form/settings/privacyform.h	/^    Ui::PrivacySettings* bodyUI;$/;"	m	class:PrivacyForm
bootstrapDht	./../src/core.cpp	/^void Core::bootstrapDht()$/;"	f	class:Core
bottomButton	./../ui_filetransferwidget.h	/^    QPushButton *bottomButton;$/;"	m	class:Ui_FileTransferWidget
boundingRect	./../src/chatlog/chatlinecontentproxy.cpp	/^QRectF ChatLineContentProxy::boundingRect() const$/;"	f	class:ChatLineContentProxy
boundingRect	./../src/chatlog/content/image.cpp	/^QRectF Image::boundingRect() const$/;"	f	class:Image
boundingRect	./../src/chatlog/content/notificationicon.cpp	/^QRectF NotificationIcon::boundingRect() const$/;"	f	class:NotificationIcon
boundingRect	./../src/chatlog/content/spinner.cpp	/^QRectF Spinner::boundingRect() const$/;"	f	class:Spinner
boundingRect	./../src/chatlog/content/text.cpp	/^QRectF Text::boundingRect() const$/;"	f	class:Text
brightnessLabel	./../ui_avsettings.h	/^    QLabel *brightnessLabel;$/;"	m	class:Ui_AVSettings
brush	./../src/widget/callconfirmwidget.h	/^    QBrush brush;$/;"	m	class:CallConfirmWidget
bucket	./../tools/update-server/deployUpdateS3.py	/^bucket = conn.get_bucket('qtox-updater')$/;"	v
bufFile	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  FILE* bufFile;$/;"	m	struct:__anon23
bufSizeStart	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int bufSizeStart;$/;"	m	struct:__anon23
buffer	./../libs/filter_audio/aec/aec_resampler.c	/^  float buffer[kResamplerBufferSize];$/;"	m	struct:__anon9	file:
buffer	./../src/misc/db/encrypteddb.h	/^    QByteArray buffer;$/;"	m	class:EncryptedDb
buildCompletionList	./../src/widget/form/tabcompleter.cpp	/^void TabCompleter::buildCompletionList()$/;"	f	class:TabCompleter
bus_acquired	./../src/platform/statusnotifier/statusnotifier.c	/^bus_acquired (GDBusConnection *conn, const gchar *name, gpointer data)$/;"	f	file:
busyNotification	./../src/chatlog/chatlog.h	/^    ChatLine::Ptr busyNotification;$/;"	m	class:ChatLog
busyScene	./../src/chatlog/chatlog.h	/^    QGraphicsScene* busyScene = nullptr;$/;"	m	class:ChatLog
buttonBox	./../ui_loadhistorydialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_LoadHistoryDialog
buttonBox	./../ui_setpassworddialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_SetPasswordDialog
buttonColor	./../src/chatlog/content/filetransferwidget.h	/^    QColor buttonColor;$/;"	m	class:FileTransferWidget
buttonColorAnimation	./../src/chatlog/content/filetransferwidget.h	/^    QVariantAnimation* buttonColorAnimation = nullptr;$/;"	m	class:FileTransferWidget
buttonWidget	./../ui_filetransferwidget.h	/^    QWidget *buttonWidget;$/;"	m	class:Ui_FileTransferWidget
bytesSent	./../src/corestructs.h	/^    qint64 bytesSent;$/;"	v
cData	./../src/misc/cdata.h	/^    uint8_t* cData;$/;"	m	class:CData
cDataSize	./../src/misc/cdata.h	/^    uint16_t cDataSize;$/;"	m	class:CData
cString	./../src/misc/cstring.h	/^    uint8_t* cString;$/;"	m	class:CString
cStringSize	./../src/misc/cstring.h	/^    uint16_t cStringSize;$/;"	m	class:CString
cache	./../src/chatlog/pixmapcache.h	/^    QHash<QString, QIcon> cache;$/;"	m	class:PixmapCache
cacheSmiley	./../src/misc/smileypack.cpp	/^void SmileyPack::cacheSmiley(const QString &name)$/;"	f	class:SmileyPack
calculateSceneRect	./../src/chatlog/chatlog.cpp	/^QRectF ChatLog::calculateSceneRect() const$/;"	f	class:ChatLog
callButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
callConfirm	./../src/widget/form/chatform.h	/^    CallConfirmWidget *callConfirm;$/;"	m	class:ChatForm
callDuration	./../src/widget/form/chatform.h	/^    QLabel *callDuration;$/;"	m	class:ChatForm
callDurationTimer	./../src/widget/form/chatform.h	/^    QTimer *callDurationTimer;$/;"	m	class:ChatForm
callId	./../src/coreav.h	/^    int callId;$/;"	m	struct:ToxCall
callId	./../src/widget/form/chatform.h	/^    int callId;$/;"	m	class:ChatForm
calls	./../src/core.h	/^    static ToxCall calls[TOXAV_MAX_CALLS];$/;"	m	class:Core
calls	./../src/coreav.cpp	/^ToxCall Core::calls[TOXAV_MAX_CALLS];$/;"	m	class:Core	file:
cam	./../src/video/cameraworker.h	/^    cv::VideoCapture cam;$/;"	m	class:CameraWorker
camIndex	./../src/video/cameraworker.h	/^    int camIndex;$/;"	m	class:CameraWorker
camVideoRes	./../src/misc/settings.h	/^    QSize camVideoRes;$/;"	m	class:Settings
camView	./../src/widget/form/settings/avform.h	/^    VideoSurface* camView;$/;"	m	class:AVForm
camera	./../src/core.h	/^    Camera* camera;$/;"	m	class:Core
cancelCall	./../moc_chatform.cpp	/^void ChatForm::cancelCall(int _t1, int _t2)$/;"	f	class:ChatForm
cancelCall	./../src/coreav.cpp	/^void Core::cancelCall(int callId, int friendId)$/;"	f	class:Core
cancelFileRecv	./../src/core.cpp	/^void Core::cancelFileRecv(int friendId, int fileNum)$/;"	f	class:Core
cancelFileSend	./../src/core.cpp	/^void Core::cancelFileSend(int friendId, int fileNum)$/;"	f	class:Core
candidate_hits	./../libs/filter_audio/other/delay_estimator.h	/^  int candidate_hits;$/;"	m	struct:__anon25
capacitorFast	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t capacitorFast;$/;"	m	struct:__anon4
capacitorSlow	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t capacitorSlow;$/;"	m	struct:__anon4
category	./../src/platform/statusnotifier/statusnotifier.c	/^    StatusNotifierCategory category;$/;"	m	struct:_StatusNotifierPrivate	file:
cbAutorun	./../ui_generalsettings.h	/^    QCheckBox *cbAutorun;$/;"	m	class:Ui_GeneralSettings
cbCompactLayout	./../ui_generalsettings.h	/^    QCheckBox *cbCompactLayout;$/;"	m	class:Ui_GeneralSettings
cbEnableIPv6	./../ui_generalsettings.h	/^    QCheckBox *cbEnableIPv6;$/;"	m	class:Ui_GeneralSettings
cbEnableUDP	./../ui_generalsettings.h	/^    QCheckBox *cbEnableUDP;$/;"	m	class:Ui_GeneralSettings
cbEncryptHistory	./../ui_privacysettings.h	/^    QCheckBox *cbEncryptHistory;$/;"	m	class:Ui_PrivacySettings
cbEncryptTox	./../ui_privacysettings.h	/^    QCheckBox *cbEncryptTox;$/;"	m	class:Ui_PrivacySettings
cbFauxOfflineMessaging	./../ui_generalsettings.h	/^    QCheckBox *cbFauxOfflineMessaging;$/;"	m	class:Ui_GeneralSettings
cbKeepHistory	./../ui_privacysettings.h	/^    QCheckBox *cbKeepHistory;$/;"	m	class:Ui_PrivacySettings
cbMakeToxPortable	./../ui_advancedsettings.h	/^    QCheckBox *cbMakeToxPortable;$/;"	m	class:Ui_AdvancedSettings
cbTypingNotification	./../ui_privacysettings.h	/^    QCheckBox *cbTypingNotification;$/;"	m	class:Ui_PrivacySettings
centralLayout	./../src/widget/widget.h	/^    QSplitter *centralLayout;$/;"	m	class:Widget
centralwidget	./../ui_mainwindow.h	/^    QWidget *centralwidget;$/;"	m	class:Ui_MainWindow
cft1st	./../libs/filter_audio/other/fft4g.c	/^static void cft1st(int n, float *a, float *w)$/;"	f	file:
cft1st_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t cft1st_128;$/;"	v
cft1st_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void cft1st_128_C(float* a) {$/;"	f	file:
cft1st_128_SSE2	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^static void cft1st_128_SSE2(float* a) {$/;"	f	file:
cftbsub	./../libs/filter_audio/other/fft4g.c	/^static void cftbsub(int n, float *a, float *w)$/;"	f	file:
cftbsub_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t cftbsub_128;$/;"	v
cftbsub_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void cftbsub_128_C(float* a) {$/;"	f	file:
cftfsub	./../libs/filter_audio/other/fft4g.c	/^static void cftfsub(int n, float *a, float *w)$/;"	f	file:
cftfsub_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t cftfsub_128;$/;"	v
cftfsub_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void cftfsub_128_C(float* a) {$/;"	f	file:
cftmdl	./../libs/filter_audio/other/fft4g.c	/^static void cftmdl(int n, int l, float *a, float *w)$/;"	f	file:
cftmdl_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t cftmdl_128;$/;"	v
cftmdl_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void cftmdl_128_C(float* a) {$/;"	f	file:
cftmdl_128_SSE2	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^static void cftmdl_128_SSE2(float* a) {$/;"	f	file:
cftmdl_wk1r	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END cftmdl_wk1r[4] = {$/;"	v
changeEvent	./../src/widget/widget.cpp	/^void Widget::changeEvent(QEvent *event)$/;"	f	class:Widget
changeGroupTitle	./../src/core.cpp	/^void Core::changeGroupTitle(int groupId, const QString& title)$/;"	f	class:Core
changeLogsPwButton	./../ui_privacysettings.h	/^    QPushButton *changeLogsPwButton;$/;"	m	class:Ui_PrivacySettings
changeProfile	./../moc_widget.cpp	/^void Widget::changeProfile(const QString & _t1)$/;"	f	class:Widget
changeToSlowMode	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             changeToSlowMode;   \/\/ Change to slow mode after some time at target$/;"	m	struct:__anon1
changeToxPwButton	./../ui_privacysettings.h	/^    QPushButton *changeToxPwButton;$/;"	m	class:Ui_PrivacySettings
chat	./../src/historykeeper.h	/^        QString chat;$/;"	m	struct:HistoryKeeper::HistMessage
chatAreaCleared	./../moc_genericchatform.cpp	/^void GenericChatForm::chatAreaCleared()$/;"	f	class:GenericChatForm
chatForm	./../src/friend.h	/^    ChatForm* chatForm;$/;"	m	struct:Friend
chatForm	./../src/group.h	/^    GroupChatForm* chatForm;$/;"	m	class:Group
chatGroupBox	./../ui_generalsettings.h	/^    QGroupBox *chatGroupBox;$/;"	m	class:Ui_GeneralSettings
chatSpacer	./../ui_generalsettings.h	/^    QSpacerItem *chatSpacer;$/;"	m	class:Ui_GeneralSettings
chatWidget	./../src/widget/form/genericchatform.h	/^    ChatLog *chatWidget;$/;"	m	class:GenericChatForm
chatroomWidgetClicked	./../moc_genericchatroomwidget.cpp	/^void GenericChatroomWidget::chatroomWidgetClicked(GenericChatroomWidget * _t1)$/;"	f	class:GenericChatroomWidget
chats	./../src/historykeeper.h	/^    QMap<QString, QPair<int, ChatType>> chats;$/;"	m	class:HistoryKeeper
check	./../src/misc/db/encrypteddb.cpp	/^bool EncryptedDb::check(const QString &fname)$/;"	f	class:EncryptedDb
checkBufSizeCtr	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short checkBufSizeCtr;$/;"	m	struct:__anon23
checkBuffSize	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int checkBuffSize;$/;"	m	struct:__anon23
checkCmd	./../src/misc/db/encrypteddb.cpp	/^bool EncryptedDb::checkCmd(const QString &cmd)$/;"	f	class:EncryptedDb
checkConnection	./../src/core.cpp	/^bool Core::checkConnection()$/;"	f	class:Core
checkEncryptedHistory	./../src/coreencryption.cpp	/^void Core::checkEncryptedHistory()$/;"	f	class:Core
checkLastOnline	./../src/core.cpp	/^void Core::checkLastOnline(int friendId) {$/;"	f	class:Core
checkPassword	./../src/historykeeper.cpp	/^bool HistoryKeeper::checkPassword(int encrypted)$/;"	f	class:HistoryKeeper
checkSum	./../src/corestructs.h	/^    QString checkSum;$/;"	m	struct:ToxID
checkURI	./../src/autoupdate.cpp	/^const QString AutoUpdater::checkURI = AutoUpdater::updateServer+"\/qtox\/"+AutoUpdater::platform+"\/version";$/;"	m	class:AutoUpdater	file:
checkURI	./../src/autoupdate.h	/^    static const QString checkURI; \/\/\/< URI of the file containing the latest version string$/;"	m	class:AutoUpdater
checkUpdates	./../src/misc/settings.h	/^    bool checkUpdates;$/;"	m	class:Settings
checkUpdates	./../ui_generalsettings.h	/^    QCheckBox *checkUpdates;$/;"	m	class:Ui_GeneralSettings
checkUpdatesAsyncInteractive	./../src/autoupdate.cpp	/^void AutoUpdater::checkUpdatesAsyncInteractive()$/;"	f	class:AutoUpdater
checkUpdatesAsyncInteractiveWorker	./../src/autoupdate.cpp	/^void AutoUpdater::checkUpdatesAsyncInteractiveWorker()$/;"	f	class:AutoUpdater
checkVisibility	./../src/chatlog/chatlog.cpp	/^void ChatLog::checkVisibility()$/;"	f	class:ChatLog
chunkPosition	./../src/misc/db/encrypteddb.h	/^    qint64 chunkPosition;$/;"	m	class:EncryptedDb
clamp	./../src/chatlog/chatlog.cpp	/^T clamp(T x, T min, T max)$/;"	f
cleanupCall	./../src/coreav.cpp	/^void Core::cleanupCall(int callId)$/;"	f	class:Core
clear	./../src/chatlog/chatlog.cpp	/^void ChatLog::clear()$/;"	f	class:ChatLog
clear	./../src/corestructs.cpp	/^void ToxID::clear()$/;"	f	class:ToxID
clear	./../src/friendlist.cpp	/^void FriendList::clear()$/;"	f	class:FriendList
clear	./../src/grouplist.cpp	/^void GroupList::clear()$/;"	f	class:GroupList
clearAllReceipts	./../src/widget/widget.cpp	/^void Widget::clearAllReceipts()$/;"	f	class:Widget
clearChatArea	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::clearChatArea()$/;"	f	class:GenericChatForm
clearChatArea	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::clearChatArea(bool notinform)$/;"	f	class:GenericChatForm
clearContactsList	./../src/widget/widget.cpp	/^void Widget::clearContactsList()$/;"	f	class:Widget
clearPassword	./../src/coreencryption.cpp	/^void Core::clearPassword(PasswordType passtype)$/;"	f	class:Core
clearSelection	./../src/chatlog/chatlog.cpp	/^void ChatLog::clearSelection()$/;"	f	class:ChatLog
clickPos	./../src/chatlog/chatlog.h	/^    QPointF clickPos;$/;"	m	class:ChatLog
clickable	./../src/widget/maskablepixmapwidget.h	/^    bool clickable, manualColor = false;$/;"	m	class:MaskablePixmapWidget
clicked	./../moc_croppinglabel.cpp	/^void CroppingLabel::clicked()$/;"	f	class:CroppingLabel
clicked	./../moc_identityform.cpp	/^void ClickableTE::clicked()$/;"	f	class:ClickableTE
clicked	./../moc_maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::clicked()$/;"	f	class:MaskablePixmapWidget
clock	./../src/video/cameraworker.h	/^    QTimer* clock;$/;"	m	class:CameraWorker
closeEvent	./../src/widget/widget.cpp	/^void Widget::closeEvent(QCloseEvent *event)$/;"	f	class:Widget
closeFilter	./../src/audiofilterer.cpp	/^void AudioFilterer::closeFilter()$/;"	f	class:AudioFilterer
closeInput	./../src/audio.cpp	/^void Audio::closeInput()$/;"	f	class:Audio
closeOutput	./../src/audio.cpp	/^void Audio::closeOutput()$/;"	f	class:Audio
closeToTray	./../src/misc/settings.h	/^    bool closeToTray;$/;"	m	class:Settings
closeToTray	./../ui_generalsettings.h	/^    QCheckBox *closeToTray;$/;"	m	class:Ui_GeneralSettings
cnScaleHband	./../libs/filter_audio/aec/aec_core.c	/^static const float cnScaleHband =$/;"	v	file:
cn_scale_Hband	./../libs/filter_audio/aec/aec_core_internal.h	/^  float cn_scale_Hband;  \/\/ scale for comfort noise in H band$/;"	m	struct:AecCore
cntThresUpdate	./../libs/filter_audio/ns/nsx_core.h	/^  int                     cntThresUpdate;$/;"	m	struct:NsxInst_t_
codecSettings	./../src/coreav.h	/^    ToxAvCSettings codecSettings;$/;"	m	struct:ToxCall
codecSettings	./../src/coreav.h	/^    ToxAvCSettings codecSettings;$/;"	m	struct:ToxGroupCall
col	./../src/chatlog/chatlinecontent.h	/^    int col = -1;$/;"	m	class:ChatLineContent
color	./../src/chatlog/content/text.h	/^    QColor color;$/;"	m	class:Text
columnSpacing	./../src/chatlog/chatline.h	/^    qreal columnSpacing = 15.0;$/;"	m	class:ChatLine
compact	./../src/widget/genericchatroomwidget.h	/^    bool compact;$/;"	m	class:GenericChatroomWidget
compactLayout	./../src/misc/settings.h	/^    bool compactLayout;$/;"	m	class:Settings
compactLayoutChanged	./../moc_settings.cpp	/^void Settings::compactLayoutChanged()$/;"	f	class:Settings
compactToggled	./../moc_settingswidget.cpp	/^void SettingsWidget::compactToggled(bool _t1)$/;"	f	class:SettingsWidget
compare_delay	./../libs/filter_audio/other/delay_estimator.h	/^  int compare_delay;$/;"	m	struct:__anon25
complete	./../src/widget/form/tabcompleter.cpp	/^void TabCompleter::complete()$/;"	f	class:TabCompleter
completionMap	./../src/widget/form/tabcompleter.h	/^    QMap<SortableString, QString> completionMap;$/;"	m	class:TabCompleter
complex_t	./../libs/filter_audio/aec/aec_core.h	/^typedef float complex_t[2];$/;"	t
compressionGaindB	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             compressionGaindB;  \/\/ Fixed gain level in dB$/;"	m	struct:__anon1
compressionGaindB	./../libs/filter_audio/agc/include/gain_control.h	/^    int16_t compressionGaindB; \/\/ default 9 dB$/;"	m	struct:__anon7
confirmExecutableOpen	./../src/widget/widget.cpp	/^void Widget::confirmExecutableOpen(const QFileInfo file)$/;"	f	class:Widget
conn	./../tools/update-server/deployUpdateS3.py	/^conn = boto.connect_s3()$/;"	v
connected	./../moc_core.cpp	/^void Core::connected()$/;"	f	class:Core
connectionGroup	./../ui_generalsettings.h	/^    QGroupBox *connectionGroup;$/;"	m	class:Ui_GeneralSettings
contactListWidget	./../src/widget/androidgui.h	/^    FriendListWidget* contactListWidget;$/;"	m	class:AndroidGUI
contactListWidget	./../src/widget/widget.h	/^    FriendListWidget *contactListWidget;$/;"	m	class:Widget
content	./../src/chatlog/chatline.h	/^    std::vector<ChatLineContent*> content;$/;"	m	class:ChatLine
contents	./../src/widget/form/tabcompleter.h	/^        QString contents;$/;"	m	struct:TabCompleter::SortableString
contextMenuEvent	./../src/widget/friendwidget.cpp	/^void FriendWidget::contextMenuEvent(QContextMenuEvent * event)$/;"	f	class:FriendWidget
contextMenuEvent	./../src/widget/groupwidget.cpp	/^void GroupWidget::contextMenuEvent(QContextMenuEvent * event)$/;"	f	class:GroupWidget
context_menu	./../src/platform/statusnotifier/statusnotifier.h	/^    gboolean        (*context_menu)         (StatusNotifier         *sn,$/;"	m	struct:_StatusNotifierClass
contrastLabel	./../ui_avsettings.h	/^    QLabel *contrastLabel;$/;"	m	class:Ui_AVSettings
convertToChatType	./../src/historykeeper.cpp	/^HistoryKeeper::ChatType HistoryKeeper::convertToChatType(int ct)$/;"	f	class:HistoryKeeper
copyAction	./../src/chatlog/chatlog.h	/^    QAction* copyAction = nullptr;$/;"	m	class:ChatLog
copyFriendIdToClipboard	./../moc_friendwidget.cpp	/^void FriendWidget::copyFriendIdToClipboard(int _t1)$/;"	f	class:FriendWidget
copyFriendIdToClipboard	./../src/widget/widget.cpp	/^void Widget::copyFriendIdToClipboard(int friendId)$/;"	f	class:Widget
copyIdClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::copyIdClicked()$/;"	f	class:IdentityForm
copySelectedText	./../src/chatlog/chatlog.cpp	/^void ChatLog::copySelectedText(bool toSelectionBuffer) const$/;"	f	class:ChatLog
core	./../src/nexus.h	/^    Core* core;$/;"	m	class:Nexus
core	./../src/widget/form/settings/identityform.h	/^    Core* core;$/;"	m	class:IdentityForm
coreProtocolLayout	./../ui_generalsettings.h	/^    QHBoxLayout *coreProtocolLayout;$/;"	m	class:Ui_GeneralSettings
coreThread	./../src/core.h	/^    static QThread *coreThread;$/;"	m	class:Core
coreThread	./../src/nexus.h	/^    QThread* coreThread;$/;"	m	class:Nexus
count	./../src/misc/flowlayout.cpp	/^int FlowLayout::count() const$/;"	f	class:FlowLayout
countLen	./../libs/filter_audio/aec/aec_core.c	/^static const int countLen = 50;$/;"	v	file:
counter	./../libs/filter_audio/aec/aec_core.h	/^  int counter;$/;"	m	struct:Stats
counter	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short counter;$/;"	m	struct:__anon23
counter	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t counter;$/;"	m	struct:__anon3
counter	./../libs/filter_audio/ns/ns_core.h	/^  int counter[SIMULT];$/;"	m	struct:NSinst_t_
createAddress	./../src/toxme.cpp	/^bool Toxme::createAddress(ToxID id, QString address,$/;"	f	class:Toxme
createBusyNotification	./../src/chatlog/chatmessage.cpp	/^ChatMessage::Ptr ChatMessage::createBusyNotification()$/;"	f	class:ChatMessage
createChatInfoMessage	./../src/chatlog/chatmessage.cpp	/^ChatMessage::Ptr ChatMessage::createChatInfoMessage(const QString &rawMessage, SystemMessageType type, const QDateTime &date)$/;"	f	class:ChatMessage
createChatMessage	./../src/chatlog/chatmessage.cpp	/^ChatMessage::Ptr ChatMessage::createChatMessage(const QString &sender, const QString &rawMessage, MessageType type, bool isMe, const QDateTime &date)$/;"	f	class:ChatMessage
createFileTransferMessage	./../src/chatlog/chatmessage.cpp	/^ChatMessage::Ptr ChatMessage::createFileTransferMessage(const QString& sender, ToxFile file, bool isMe, const QDateTime& date)$/;"	f	class:ChatMessage
createGroup	./../src/core.cpp	/^void Core::createGroup(uint8_t type)$/;"	f	class:Core
createGroup	./../src/widget/widget.cpp	/^Group *Widget::createGroup(int groupId)$/;"	f	class:Widget
createTypingNotification	./../src/chatlog/chatmessage.cpp	/^ChatMessage::Ptr ChatMessage::createTypingNotification()$/;"	f	class:ChatMessage
createVpxImage	./../src/video/videoframe.cpp	/^vpx_image_t VideoFrame::createVpxImage() const$/;"	f	class:VideoFrame
ctGroup	./../src/historykeeper.h	/^    enum ChatType {ctSingle = 0, ctGroup};$/;"	e	enum:HistoryKeeper::ChatType
ctSingle	./../src/historykeeper.h	/^    enum ChatType {ctSingle = 0, ctGroup};$/;"	e	enum:HistoryKeeper::ChatType
curAvgMagnEnergy	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                curAvgMagnEnergy;$/;"	m	struct:NsxInst_t_
curRow	./../src/widget/form/genericchatform.h	/^    int curRow;$/;"	m	class:GenericChatForm
currFrame	./../src/video/camera.h	/^    VideoFrame currFrame;$/;"	m	class:Camera
currentCommandLine	./../src/platform/autorun_win.cpp	/^    inline std::wstring currentCommandLine()$/;"	f	namespace:Platform
currentCommandLine	./../src/platform/autorun_xdg.cpp	/^    inline QString currentCommandLine()$/;"	f	namespace:Platform
currentProfile	./../src/misc/settings.h	/^    QString currentProfile;$/;"	m	class:Settings
currentProfileId	./../src/misc/settings.h	/^    uint32_t currentProfileId;$/;"	m	class:Settings
currentRegistryKeyName	./../src/platform/autorun_win.cpp	/^    inline std::wstring currentRegistryKeyName()$/;"	f	namespace:Platform
cursorFromPos	./../src/chatlog/content/text.cpp	/^int Text::cursorFromPos(QPointF scenePos) const$/;"	f	class:Text
customEmojiFont	./../src/misc/settings.h	/^    bool customEmojiFont;$/;"	m	class:Settings
custom_user	./../osx/updater/updater.go	/^var custom_user string$/;"	v
dBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  float dBuf[PART_LEN2];  \/\/ nearend$/;"	m	struct:AecCore
dBufH	./../libs/filter_audio/aec/aec_core_internal.h	/^  float dBufH[PART_LEN2];  \/\/ nearend$/;"	m	struct:AecCore
dInitMinPow	./../libs/filter_audio/aec/aec_core_internal.h	/^  float dInitMinPow[PART_LEN1];$/;"	m	struct:AecCore
dMinPow	./../libs/filter_audio/aec/aec_core_internal.h	/^  float dMinPow[PART_LEN1];$/;"	m	struct:AecCore
dPow	./../libs/filter_audio/aec/aec_core_internal.h	/^  float dPow[PART_LEN1];$/;"	m	struct:AecCore
data	./../libs/filter_audio/other/ring_buffer.c	/^  char* data;$/;"	m	struct:RingBuffer	file:
data	./../moc_addfriendform.cpp	/^    QByteArrayData data[8];$/;"	m	struct:qt_meta_stringdata_AddFriendForm_t	file:
data	./../moc_adjustingscrollarea.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_AdjustingScrollArea_t	file:
data	./../moc_advancedform.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_AdvancedForm_t	file:
data	./../moc_audio.cpp	/^    QByteArrayData data[11];$/;"	m	struct:qt_meta_stringdata_Audio_t	file:
data	./../moc_avform.cpp	/^    QByteArrayData data[31];$/;"	m	struct:qt_meta_stringdata_AVForm_t	file:
data	./../moc_callconfirmwidget.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_CallConfirmWidget_t	file:
data	./../moc_camera.cpp	/^    QByteArrayData data[12];$/;"	m	struct:qt_meta_stringdata_Camera_t	file:
data	./../moc_cameraworker.cpp	/^    QByteArrayData data[20];$/;"	m	struct:qt_meta_stringdata_CameraWorker_t	file:
data	./../moc_chatform.cpp	/^    QByteArrayData data[54];$/;"	m	struct:qt_meta_stringdata_ChatForm_t	file:
data	./../moc_chatlog.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_ChatLog_t	file:
data	./../moc_chattextedit.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_ChatTextEdit_t	file:
data	./../moc_core.cpp	/^    QByteArrayData data[173];$/;"	m	struct:qt_meta_stringdata_Core_t	file:
data	./../moc_croppinglabel.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_CroppingLabel_t	file:
data	./../moc_customtextdocument.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_CustomTextDocument_t	file:
data	./../moc_emoticonswidget.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_EmoticonsWidget_t	file:
data	./../moc_filesform.cpp	/^    QByteArrayData data[8];$/;"	m	struct:qt_meta_stringdata_FilesForm_t	file:
data	./../moc_filetransferwidget.cpp	/^    QByteArrayData data[11];$/;"	m	struct:qt_meta_stringdata_FileTransferWidget_t	file:
data	./../moc_friendlistwidget.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_FriendListWidget_t	file:
data	./../moc_friendrequestdialog.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_FriendRequestDialog_t	file:
data	./../moc_friendwidget.cpp	/^    QByteArrayData data[14];$/;"	m	struct:qt_meta_stringdata_FriendWidget_t	file:
data	./../moc_generalform.cpp	/^    QByteArrayData data[34];$/;"	m	struct:qt_meta_stringdata_GeneralForm_t	file:
data	./../moc_genericchatform.cpp	/^    QByteArrayData data[17];$/;"	m	struct:qt_meta_stringdata_GenericChatForm_t	file:
data	./../moc_genericchatroomwidget.cpp	/^    QByteArrayData data[7];$/;"	m	struct:qt_meta_stringdata_GenericChatroomWidget_t	file:
data	./../moc_genericsettings.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_GenericForm_t	file:
data	./../moc_group.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_Group_t	file:
data	./../moc_groupchatform.cpp	/^    QByteArrayData data[9];$/;"	m	struct:qt_meta_stringdata_GroupChatForm_t	file:
data	./../moc_groupwidget.cpp	/^    QByteArrayData data[7];$/;"	m	struct:qt_meta_stringdata_GroupWidget_t	file:
data	./../moc_gui.cpp	/^    QByteArrayData data[32];$/;"	m	struct:qt_meta_stringdata_GUI_t	file:
data	./../moc_identityform.cpp	/^    QByteArrayData data[17];$/;"	m	struct:qt_meta_stringdata_IdentityForm_t	file:
data	./../moc_identityform.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_ClickableTE_t	file:
data	./../moc_ipc.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_IPC_t	file:
data	./../moc_loadhistorydialog.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_LoadHistoryDialog_t	file:
data	./../moc_maskablepixmapwidget.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_MaskablePixmapWidget_t	file:
data	./../moc_netcamview.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_NetCamView_t	file:
data	./../moc_nexus.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_Nexus_t	file:
data	./../moc_notificationicon.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_NotificationIcon_t	file:
data	./../moc_offlinemsgengine.cpp	/^    QByteArrayData data[4];$/;"	m	struct:qt_meta_stringdata_OfflineMsgEngine_t	file:
data	./../moc_privacyform.cpp	/^    QByteArrayData data[11];$/;"	m	struct:qt_meta_stringdata_PrivacyForm_t	file:
data	./../moc_setpassworddialog.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_SetPasswordDialog_t	file:
data	./../moc_settings.cpp	/^    QByteArrayData data[8];$/;"	m	struct:qt_meta_stringdata_Settings_t	file:
data	./../moc_settingswidget.cpp	/^    QByteArrayData data[7];$/;"	m	struct:qt_meta_stringdata_SettingsWidget_t	file:
data	./../moc_smileypack.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_SmileyPack_t	file:
data	./../moc_spinner.cpp	/^    QByteArrayData data[3];$/;"	m	struct:qt_meta_stringdata_Spinner_t	file:
data	./../moc_systemtrayicon.cpp	/^    QByteArrayData data[4];$/;"	m	struct:qt_meta_stringdata_SystemTrayIcon_t	file:
data	./../moc_tabcompleter.cpp	/^    QByteArrayData data[4];$/;"	m	struct:qt_meta_stringdata_TabCompleter_t	file:
data	./../moc_toxdns.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_ToxDNS_t	file:
data	./../moc_toxuri.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_ToxURIDialog_t	file:
data	./../moc_videosource.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_VideoSource_t	file:
data	./../moc_videosurface.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_VideoSurface_t	file:
data	./../moc_widget.cpp	/^    QByteArrayData data[95];$/;"	m	struct:qt_meta_stringdata_Widget_t	file:
data	./../src/autoupdate.h	/^        QByteArray data;$/;"	m	struct:AutoUpdater::UpdateFile
data	./../src/ipc.h	/^        char data[128];$/;"	m	struct:IPC::IPCEvent
data	./../src/misc/cdata.cpp	/^uint8_t* CData::data()$/;"	f	class:CData
data	./../src/misc/cstring.cpp	/^uint8_t* CString::data()$/;"	f	class:CString
data	./../updater/update.h	/^    QByteArray data;$/;"	m	struct:UpdateFile
dataBuf	./../libs/filter_audio/ns/ns_core.h	/^  float dataBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NSinst_t_
dataBufHB	./../libs/filter_audio/ns/ns_core.h	/^  float dataBufHB[ANAL_BLOCKL_MAX];  \/\/ Buffering data for HB.$/;"	m	struct:NSinst_t_
dataBufHBFX	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 dataBufHBFX[ANAL_BLOCKL_MAX];  \/\/ Q0$/;"	m	struct:NsxInst_t_
dataToFloat	./../src/misc/serialize.cpp	/^float dataToFloat(QByteArray data)$/;"	f
dataToFloat	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^float dataToFloat(QByteArray data)$/;"	f
dataToFloat	./../updater/serialize.cpp	/^float dataToFloat(QByteArray data)$/;"	f
dataToRangedSingle	./../src/misc/serialize.cpp	/^float dataToRangedSingle(float min, float max, int numberOfBits, QByteArray data)$/;"	f
dataToRangedSingle	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^float dataToRangedSingle(float min, float max, int numberOfBits, QByteArray data)$/;"	f
dataToRangedSingle	./../updater/serialize.cpp	/^float dataToRangedSingle(float min, float max, int numberOfBits, QByteArray data)$/;"	f
dataToString	./../src/misc/serialize.cpp	/^QString dataToString(QByteArray data)$/;"	f
dataToString	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QString dataToString(QByteArray data)$/;"	f
dataToString	./../updater/serialize.cpp	/^QString dataToString(QByteArray data)$/;"	f
dataToUint16	./../src/misc/serialize.cpp	/^uint16_t dataToUint16(QByteArray data)$/;"	f
dataToUint16	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^uint16_t dataToUint16(QByteArray data)$/;"	f
dataToUint16	./../updater/serialize.cpp	/^uint16_t dataToUint16(QByteArray data)$/;"	f
dataToUint32	./../src/misc/serialize.cpp	/^uint32_t dataToUint32(QByteArray data)$/;"	f
dataToUint32	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^uint32_t dataToUint32(QByteArray data)$/;"	f
dataToUint32	./../updater/serialize.cpp	/^uint32_t dataToUint32(QByteArray data)$/;"	f
dataToUint64	./../src/misc/serialize.cpp	/^uint64_t dataToUint64(QByteArray data)$/;"	f
dataToUint64	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^uint64_t dataToUint64(QByteArray data)$/;"	f
dataToUint64	./../updater/serialize.cpp	/^uint64_t dataToUint64(QByteArray data)$/;"	f
dataToUint8	./../src/misc/serialize.cpp	/^uint8_t dataToUint8(QByteArray data)$/;"	f
dataToUint8	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^uint8_t dataToUint8(QByteArray data)$/;"	f
dataToUint8	./../updater/serialize.cpp	/^uint8_t dataToUint8(QByteArray data)$/;"	f
db	./../src/historykeeper.h	/^    GenericDdInterface *db;$/;"	m	class:HistoryKeeper
db	./../src/misc/db/plaindb.h	/^    QSqlDatabase *db;$/;"	m	class:Db::PlainDb
dbLabel	./../ui_advancedsettings.h	/^    QLabel *dbLabel;$/;"	m	class:Ui_AdvancedSettings
dbSyncType	./../src/misc/settings.h	/^    Db::syncType dbSyncType;$/;"	m	class:Settings
dbus_conn	./../src/platform/statusnotifier/statusnotifier.c	/^    GDBusConnection *dbus_conn;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_err	./../src/platform/statusnotifier/statusnotifier.c	/^    GError *dbus_err;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_failed	./../src/platform/statusnotifier/statusnotifier.c	/^dbus_failed (StatusNotifier *sn, GError *error, gboolean fatal)$/;"	f	file:
dbus_free	./../src/platform/statusnotifier/statusnotifier.c	/^dbus_free (StatusNotifier *sn)$/;"	f	file:
dbus_notify	./../src/platform/statusnotifier/statusnotifier.c	/^dbus_notify (StatusNotifier *sn, guint prop)$/;"	f	file:
dbus_owner_id	./../src/platform/statusnotifier/statusnotifier.c	/^    guint dbus_owner_id;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_proxy	./../src/platform/statusnotifier/statusnotifier.c	/^    GDBusProxy *dbus_proxy;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_reg_id	./../src/platform/statusnotifier/statusnotifier.c	/^    guint dbus_reg_id;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_reg_item	./../src/platform/statusnotifier/statusnotifier.c	/^dbus_reg_item (StatusNotifier *sn)$/;"	f	file:
dbus_sid	./../src/platform/statusnotifier/statusnotifier.c	/^    guint dbus_sid;$/;"	m	struct:_StatusNotifierPrivate	file:
dbus_watch_id	./../src/platform/statusnotifier/statusnotifier.c	/^    guint dbus_watch_id;$/;"	m	struct:_StatusNotifierPrivate	file:
deadifyTox	./../src/core.cpp	/^void Core::deadifyTox()$/;"	f	class:Core
debug_dump_count	./../libs/filter_audio/aec/aec_core_internal.h	/^  int debug_dump_count;$/;"	m	struct:AecCore
decryptData	./../src/coreencryption.cpp	/^QByteArray Core::decryptData(const QByteArray& data, PasswordType passtype)$/;"	f	class:Core
defFont	./../src/chatlog/content/text.h	/^    QFont defFont;$/;"	m	class:Text
defaultConfig	./../libs/filter_audio/agc/analog_agc.h	/^    WebRtcAgc_config_t  defaultConfig;$/;"	m	struct:__anon1
delayCtr	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int delayCtr;$/;"	m	struct:__anon23
delayEstCtr	./../libs/filter_audio/aec/aec_core_internal.h	/^  int delayEstCtr;$/;"	m	struct:AecCore
delayFile	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  FILE* delayFile;$/;"	m	struct:__anon23
delayIdx	./../libs/filter_audio/aec/aec_core_internal.h	/^  int delayIdx;$/;"	m	struct:AecCore
delay_estimator	./../libs/filter_audio/aec/aec_core_internal.h	/^  void* delay_estimator;$/;"	m	struct:AecCore
delay_estimator_farend	./../libs/filter_audio/aec/aec_core_internal.h	/^  void* delay_estimator_farend;$/;"	m	struct:AecCore
delay_histogram	./../libs/filter_audio/aec/aec_core_internal.h	/^  int delay_histogram[kHistorySizeBlocks];$/;"	m	struct:AecCore
delay_logging	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int delay_logging;    \/\/ default kAecFalse$/;"	m	struct:__anon20
delay_logging_enabled	./../libs/filter_audio/aec/aec_core_internal.h	/^  int delay_logging_enabled;$/;"	m	struct:AecCore
deleteAddress	./../src/toxme.cpp	/^bool Toxme::deleteAddress(ToxID id)$/;"	f	class:Toxme
deleteBackups	./../updater/widget.cpp	/^void Widget::deleteBackups()$/;"	f	class:Widget
deleteButton	./../ui_identitysettings.h	/^    QPushButton *deleteButton;$/;"	m	class:Ui_IdentitySettings
deleteUpdate	./../updater/widget.cpp	/^void Widget::deleteUpdate()$/;"	f	class:Widget
deliverOfflineMsgs	./../src/offlinemsgengine.cpp	/^void OfflineMsgEngine::deliverOfflineMsgs()$/;"	f	class:OfflineMsgEngine
denoiseBound	./../libs/filter_audio/ns/ns_core.h	/^  float denoiseBound;$/;"	m	struct:NSinst_t_
denoiseBound	./../libs/filter_audio/ns/nsx_core.h	/^  uint16_t                denoiseBound; \/* Q14 *\/$/;"	m	struct:NsxInst_t_
density	./../libs/filter_audio/ns/ns_core.h	/^  float density[SIMULT * HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
dest	./../src/ipc.h	/^        uint32_t dest;$/;"	m	struct:IPC::IPCEvent
destroyInstance	./../src/nexus.cpp	/^void Nexus::destroyInstance()$/;"	f	class:Nexus
detectAnchors	./../src/chatlog/chatmessage.cpp	/^QString ChatMessage::detectAnchors(const QString &str)$/;"	f	class:ChatMessage
detectProfile	./../src/misc/settings.cpp	/^QString Settings::detectProfile()$/;"	f	class:Settings
detectQuotes	./../src/chatlog/chatmessage.cpp	/^QString ChatMessage::detectQuotes(const QString& str)$/;"	f	class:ChatMessage
deviceSampleRateHz	./../libs/filter_audio/aec/aec_resampler.c	/^  int deviceSampleRateHz;$/;"	m	struct:__anon9	file:
dflt	./../src/main.cpp	/^static QtMessageHandler dflt;$/;"	v	file:
dhtServerId	./../src/core.h	/^    int dhtServerId;$/;"	m	class:Core
dhtServerId	./../src/misc/settings.h	/^    int dhtServerId;$/;"	m	class:Settings
dhtServerList	./../src/core.h	/^    QList<DhtServer> dhtServerList;$/;"	m	class:Core
dhtServerList	./../src/misc/settings.h	/^    QList<DhtServer> dhtServerList;$/;"	m	class:Settings
dhtServerListChanged	./../moc_settings.cpp	/^void Settings::dhtServerListChanged()$/;"	f	class:Settings
dict	./../src/misc/style.cpp	/^static QMap<QString, QString> dict;$/;"	v	file:
die	./../android/gradlew	/^die ( ) {$/;"	f
digitalAgc	./../libs/filter_audio/agc/analog_agc.h	/^    DigitalAgc_t        digitalAgc;$/;"	m	struct:__anon1
direction	./../src/corestructs.h	/^    FileDirection direction;$/;"	v
dirty	./../src/chatlog/content/text.h	/^    bool dirty = false;$/;"	m	class:Text
disableCallButtonsTimer	./../src/widget/form/chatform.h	/^    QTimer *disableCallButtonsTimer;$/;"	m	class:ChatForm
disableGroupCallMic	./../src/coreav.cpp	/^void Core::disableGroupCallMic(int groupId)$/;"	f	class:Core
disableGroupCallVol	./../src/coreav.cpp	/^void Core::disableGroupCallVol(int groupId)$/;"	f	class:Core
disableSwitching	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::disableSwitching()$/;"	f	class:IdentityForm
dischargeReceipt	./../src/offlinemsgengine.cpp	/^void OfflineMsgEngine::dischargeReceipt(int receipt)$/;"	f	class:OfflineMsgEngine
disconnected	./../moc_core.cpp	/^void Core::disconnected()$/;"	f	class:Core
divergeState	./../libs/filter_audio/aec/aec_core_internal.h	/^  short divergeState;$/;"	m	struct:AecCore
doLayout	./../src/misc/flowlayout.cpp	/^int FlowLayout::doLayout(const QRect &rect, bool testOnly) const$/;"	f	class:FlowLayout
doWork	./../src/video/cameraworker.cpp	/^void CameraWorker::doWork()$/;"	f	class:CameraWorker
doc	./../src/chatlog/content/text.h	/^    QTextDocument* doc = nullptr;$/;"	m	class:Text
documents	./../src/chatlog/documentcache.h	/^    QStack<QTextDocument*> documents;$/;"	m	class:DocumentCache
dontShowDhtDialog	./../src/misc/settings.h	/^    bool dontShowDhtDialog;$/;"	m	class:Settings
dotWidth	./../src/chatlog/content/notificationicon.h	/^    qreal dotWidth = 0.2;$/;"	m	class:NotificationIcon
doubleToData	./../src/misc/serialize.cpp	/^QByteArray doubleToData(double num)$/;"	f
doubleToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray doubleToData(double num)$/;"	f
doubleToData	./../updater/serialize.cpp	/^QByteArray doubleToData(double num)$/;"	f
downState	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t downState[8];$/;"	m	struct:__anon3
downloadUpdate	./../src/autoupdate.cpp	/^bool AutoUpdater::downloadUpdate()$/;"	f	class:AutoUpdater
downs_2_state	./../libs/filter_audio/filter_audio.c	/^    int32_t downs_2_state[8];$/;"	m	struct:__anon42	file:
downsample_audio	./../libs/filter_audio/filter_audio.c	/^static void downsample_audio(Filter_Audio *f_a, int16_t *out, const int16_t *in)$/;"	f	file:
downsample_audio_echo_in	./../libs/filter_audio/filter_audio.c	/^static void downsample_audio_echo_in(Filter_Audio *f_a, int16_t *out, const int16_t *in)$/;"	f	file:
dragEnterEvent	./../src/widget/form/chatform.cpp	/^void ChatForm::dragEnterEvent(QDragEnterEvent *ev)$/;"	f	class:ChatForm
dragEnterEvent	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::dragEnterEvent(QDragEnterEvent *ev)$/;"	f	class:GroupChatForm
dragEnterEvent	./../src/widget/groupwidget.cpp	/^void GroupWidget::dragEnterEvent(QDragEnterEvent *ev)$/;"	f	class:GroupWidget
dragPosition	./../src/widget/widget.h	/^    QPoint dragPosition;$/;"	m	class:Widget
dragStartPos	./../src/widget/friendwidget.h	/^    QPoint dragStartPos;$/;"	m	struct:FriendWidget
drawButtonAreaNeeded	./../src/chatlog/content/filetransferwidget.cpp	/^bool FileTransferWidget::drawButtonAreaNeeded() const$/;"	f	class:FileTransferWidget
dropEvent	./../src/widget/form/chatform.cpp	/^void ChatForm::dropEvent(QDropEvent *ev)$/;"	f	class:ChatForm
dropEvent	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::dropEvent(QDropEvent *ev)$/;"	f	class:GroupChatForm
dropEvent	./../src/widget/groupwidget.cpp	/^void GroupWidget::dropEvent(QDropEvent *ev)$/;"	f	class:GroupWidget
eBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  float eBuf[PART_LEN2];  \/\/ error$/;"	m	struct:AecCore
earliestMessage	./../src/widget/form/genericchatform.h	/^    QDateTime earliestMessage;$/;"	m	class:GenericChatForm
echoState	./../libs/filter_audio/aec/aec_core_internal.h	/^  short stNearState, echoState;$/;"	m	struct:AecCore
echo_cancellation	./../libs/filter_audio/filter_audio.c	/^    void *gain_control, *echo_cancellation;$/;"	m	struct:__anon42	file:
echo_enabled	./../libs/filter_audio/filter_audio.c	/^    int echo_enabled;$/;"	m	struct:__anon42	file:
editable	./../src/widget/croppinglabel.h	/^    bool editable;$/;"	m	class:CroppingLabel
element_count	./../libs/filter_audio/other/ring_buffer.c	/^  size_t element_count;$/;"	m	struct:RingBuffer	file:
element_size	./../libs/filter_audio/other/ring_buffer.c	/^  size_t element_size;$/;"	m	struct:RingBuffer	file:
elide	./../src/chatlog/content/text.h	/^    bool elide = false;$/;"	m	class:Text
elideMode	./../src/widget/croppinglabel.h	/^    Qt::TextElideMode elideMode;$/;"	m	class:CroppingLabel
elidedText	./../src/chatlog/content/text.h	/^    QString elidedText;$/;"	m	class:Text
emojiFontChanged	./../moc_settings.cpp	/^void Settings::emojiFontChanged()$/;"	f	class:Settings
emojiFontFamily	./../src/misc/settings.h	/^    QString emojiFontFamily;$/;"	m	class:Settings
emojiFontPointSize	./../src/misc/settings.h	/^    int     emojiFontPointSize;$/;"	m	class:Settings
emoteButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
emoticonSize	./../ui_generalsettings.h	/^    QSpinBox *emoticonSize;$/;"	m	class:Ui_GeneralSettings
emoticonSizeLabel	./../ui_generalsettings.h	/^    QLabel *emoticonSizeLabel;$/;"	m	class:Ui_GeneralSettings
emoticons	./../src/misc/smileypack.h	/^    QList<QStringList> emoticons; \/\/ {{ ":)", ":-)" }, {":(", ...}, ... }$/;"	m	class:SmileyPack
emptyGroupCreated	./../moc_core.cpp	/^void Core::emptyGroupCreated(int _t1)$/;"	f	class:Core
enableCallButtons	./../src/widget/form/chatform.cpp	/^void ChatForm::enableCallButtons()$/;"	f	class:ChatForm
enableDisableFilters	./../src/audiofilterer.cpp	/^bool AudioFilterer::enableDisableFilters(int echo, int noise, int gain)$/;"	f	class:AudioFilterer
enableGroupCallMic	./../src/coreav.cpp	/^void Core::enableGroupCallMic(int groupId)$/;"	f	class:Core
enableGroupCallVol	./../src/coreav.cpp	/^void Core::enableGroupCallVol(int groupId)$/;"	f	class:Core
enableIPv6	./../src/misc/settings.h	/^    bool enableIPv6;$/;"	m	class:Settings
enableLogging	./../src/misc/settings.h	/^    bool enableLogging;$/;"	m	class:Settings
enableSmoothAnimation	./../src/misc/settings.h	/^    bool enableSmoothAnimation;$/;"	m	class:Settings
enableSwitching	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::enableSwitching()$/;"	f	class:IdentityForm
enable_disable_filters	./../libs/filter_audio/filter_audio.c	/^int enable_disable_filters(Filter_Audio *f_a, int echo, int noise, int gain)$/;"	f
enabled	./../src/widget/form/tabcompleter.h	/^    bool enabled;$/;"	m	class:TabCompleter
encrFile	./../src/misc/db/encrypteddb.h	/^    QFile encrFile;$/;"	m	class:EncryptedDb
encryptData	./../src/coreencryption.cpp	/^QByteArray Core::encryptData(const QByteArray& data, PasswordType passtype)$/;"	f	class:Core
encryptLogs	./../src/misc/settings.h	/^    bool encryptLogs;$/;"	m	class:Settings
encryptLogsHLayout	./../ui_privacysettings.h	/^    QHBoxLayout *encryptLogsHLayout;$/;"	m	class:Ui_PrivacySettings
encryptStatement	./../ui_privacysettings.h	/^    QLabel *encryptStatement;$/;"	m	class:Ui_PrivacySettings
encryptTox	./../src/misc/settings.h	/^    bool encryptTox;$/;"	m	class:Settings
encryptToxHLayout	./../ui_privacysettings.h	/^    QHBoxLayout *encryptToxHLayout;$/;"	m	class:Ui_PrivacySettings
encryptedChunkSize	./../src/misc/db/encrypteddb.cpp	/^qint64 EncryptedDb::encryptedChunkSize = 4096;$/;"	m	class:EncryptedDb	file:
encryptedChunkSize	./../src/misc/db/encrypteddb.h	/^    static qint64 encryptedChunkSize;$/;"	m	class:EncryptedDb
encryptionGroup	./../ui_privacysettings.h	/^    QGroupBox *encryptionGroup;$/;"	m	class:Ui_PrivacySettings
end	./../android/gradlew.bat	/^:end$/;"	l
energyIn	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 energyIn;$/;"	m	struct:NsxInst_t_
enterPressed	./../moc_chattextedit.cpp	/^void ChatTextEdit::enterPressed()$/;"	f	class:ChatTextEdit
env	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             env[2][10];         \/\/ Envelope values of subframes$/;"	m	struct:__anon1
envSum	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             envSum;             \/\/ Filtered scaled envelope in subframes$/;"	m	struct:__anon1
erl	./../libs/filter_audio/aec/aec_core_internal.h	/^  Stats erl;$/;"	m	struct:AecCore
erl	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  AecLevel erl;$/;"	m	struct:__anon22
erle	./../libs/filter_audio/aec/aec_core_internal.h	/^  Stats erle;$/;"	m	struct:AecCore
erle	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  AecLevel erle;$/;"	m	struct:__anon22
etaLabel	./../ui_filetransferwidget.h	/^    QLabel *etaLabel;$/;"	m	class:Ui_FileTransferWidget
event	./../src/widget/widget.cpp	/^bool Widget::event(QEvent * e)$/;"	f	class:Widget
eventFilter	./../src/widget/croppinglabel.cpp	/^bool CroppingLabel::eventFilter(QObject *obj, QEvent *e)$/;"	f	class:CroppingLabel
eventFlag	./../src/widget/widget.h	/^    bool eventFlag;$/;"	m	class:Widget
eventHandlers	./../src/ipc.h	/^    QMap<QString, IPCEventHandler> eventHandlers;$/;"	m	class:IPC
eventIcon	./../src/widget/widget.cpp	/^      eventIcon(false)$/;"	f
eventIcon	./../src/widget/widget.h	/^    bool eventIcon;$/;"	m	class:Widget
events	./../src/ipc.h	/^        IPCEvent events[IPC::EVENT_QUEUE_SIZE];$/;"	m	struct:IPC::IPCMemory
exec	./../src/misc/db/encrypteddb.cpp	/^QSqlQuery EncryptedDb::exec(const QString &query)$/;"	f	class:EncryptedDb
exec	./../src/misc/db/plaindb.cpp	/^QSqlQuery PlainDb::exec(const QString &query)$/;"	f	class:PlainDb
execute	./../android/gradlew.bat	/^:execute$/;"	l
expandingDirections	./../src/misc/flowlayout.cpp	/^Qt::Orientations FlowLayout::expandingDirections() const$/;"	f	class:FlowLayout
exportButton	./../ui_identitysettings.h	/^    QPushButton *exportButton;$/;"	m	class:Ui_IdentitySettings
exportMessages	./../src/historykeeper.cpp	/^QList<HistoryKeeper::HistMessage> HistoryKeeper::exportMessages()$/;"	f	class:HistoryKeeper
exportMessagesDeleteFile	./../src/historykeeper.cpp	/^QList<HistoryKeeper::HistMessage> HistoryKeeper::exportMessagesDeleteFile(int encrypted)$/;"	f	class:HistoryKeeper
extended_filter_enabled	./../libs/filter_audio/aec/aec_core_internal.h	/^  int extended_filter_enabled;$/;"	m	struct:AecCore
extractError	./../src/toxme.cpp	/^int Toxme::extractError(QString json)$/;"	f	class:Toxme
extractIconToFile	./../src/widget/systemtrayicon.cpp	/^QString SystemTrayIcon::extractIconToFile(QIcon icon, QString name)$/;"	f	class:SystemTrayIcon
extractSanitizedText	./../src/chatlog/content/text.cpp	/^QString Text::extractSanitizedText(int from, int to) const$/;"	f	class:Text
f	./../src/offlinemsgengine.h	/^    Friend* f;$/;"	m	class:OfflineMsgEngine
f	./../src/widget/form/chatform.h	/^    Friend* f;$/;"	m	class:ChatForm
factor1ModelPars	./../libs/filter_audio/ns/ns_core.h	/^  float factor1ModelPars;  \/\/ For LRT and spectral difference.$/;"	m	struct:NSParaExtract_t_
factor2ModelPars	./../libs/filter_audio/ns/ns_core.h	/^  float factor2ModelPars;  \/\/ For spectral_flatness: used when noise is flatter$/;"	m	struct:NSParaExtract_t_
factor2Table	./../libs/filter_audio/ns/nsx_core.h	/^  const int16_t*          factor2Table;$/;"	m	struct:NsxInst_t_
fail	./../android/gradlew.bat	/^:fail$/;"	l
failedToAddFriend	./../moc_core.cpp	/^void Core::failedToAddFriend(const QString & _t1, const QString & _t2)$/;"	f	class:Core
failedToRemoveFriend	./../moc_core.cpp	/^void Core::failedToRemoveFriend(int _t1)$/;"	f	class:Core
failedToSetStatus	./../moc_core.cpp	/^void Core::failedToSetStatus(Status _t1)$/;"	f	class:Core
failedToSetStatusMessage	./../moc_core.cpp	/^void Core::failedToSetStatusMessage(const QString & _t1)$/;"	f	class:Core
failedToSetTyping	./../moc_core.cpp	/^void Core::failedToSetTyping(bool _t1)$/;"	f	class:Core
failedToSetUsername	./../moc_core.cpp	/^void Core::failedToSetUsername(const QString & _t1)$/;"	f	class:Core
failedToStart	./../moc_core.cpp	/^void Core::failedToStart()$/;"	f	class:Core
false	./../src/widget/widget.cpp	/^      eventFlag(false),$/;"	v
farBufReadPos	./../libs/filter_audio/aec/aec_core_internal.h	/^  int farBufWritePos, farBufReadPos;$/;"	m	struct:AecCore
farBufWritePos	./../libs/filter_audio/aec/aec_core_internal.h	/^  int farBufWritePos, farBufReadPos;$/;"	m	struct:AecCore
farFile	./../libs/filter_audio/aec/aec_core_internal.h	/^  rtc_WavWriter* farFile;$/;"	m	struct:AecCore
far_bit_counts	./../libs/filter_audio/other/delay_estimator.h	/^  int* far_bit_counts;$/;"	m	struct:__anon24
far_buf	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* far_buf;$/;"	m	struct:AecCore
far_buf_windowed	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* far_buf_windowed;$/;"	m	struct:AecCore
far_pre_buf	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  RingBuffer* far_pre_buf;  \/\/ Time domain far-end pre-buffer.$/;"	m	struct:__anon23
far_spectrum_initialized	./../libs/filter_audio/other/delay_estimator_internal.h	/^  int far_spectrum_initialized;$/;"	m	struct:__anon39
far_time_buf	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* far_time_buf;$/;"	m	struct:AecCore
farend	./../libs/filter_audio/other/delay_estimator.h	/^  BinaryDelayEstimatorFarend* farend;$/;"	m	struct:__anon25
farend_started	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int farend_started;$/;"	m	struct:__anon23
farlevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  PowerLevel farlevel;$/;"	m	struct:AecCore
fatalError	./../updater/widget.cpp	/^void Widget::fatalError(QString message)$/;"	f	class:Widget
fauxOfflineMessaging	./../src/misc/settings.h	/^    bool fauxOfflineMessaging;$/;"	m	class:Settings
fcount	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t fcount;$/;"	m	struct:__anon1
featureData	./../libs/filter_audio/ns/ns_core.h	/^  float featureData[7];$/;"	m	struct:NSinst_t_
featureExtractionParams	./../libs/filter_audio/ns/ns_core.h	/^  NSParaExtract_t featureExtractionParams;$/;"	m	struct:NSinst_t_
featureLogLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 featureLogLrt;$/;"	m	struct:NsxInst_t_
featureSpecDiff	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                featureSpecDiff;$/;"	m	struct:NsxInst_t_
featureSpecFlat	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                featureSpecFlat;$/;"	m	struct:NsxInst_t_
fetchEvent	./../src/ipc.cpp	/^IPC::IPCEvent *IPC::fetchEvent()$/;"	f	class:IPC
fetchLastTextRecord	./../src/toxdns.cpp	/^QByteArray ToxDNS::fetchLastTextRecord(const QString& record, bool silent)$/;"	f	class:ToxDNS
file	./../src/corestructs.h	/^    QFile* file;$/;"	v
file	./../tools/publish.py	/^	file = open(sys.argv[1], 'r')$/;"	v
fileButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
fileDownloadFinished	./../moc_core.cpp	/^void Core::fileDownloadFinished(const QString & _t1)$/;"	f	class:Core
fileInfo	./../src/chatlog/content/filetransferwidget.h	/^    ToxFile fileInfo;$/;"	m	class:FileTransferWidget
fileName	./../src/corestructs.h	/^    QByteArray fileName;$/;"	v
fileName	./../src/misc/db/encrypteddb.h	/^    QString fileName;$/;"	m	class:EncryptedDb
fileNum	./../src/corestructs.h	/^    int fileNum;$/;"	v
filePath	./../src/corestructs.h	/^    QString filePath;$/;"	v
fileReceiveRequested	./../moc_core.cpp	/^void Core::fileReceiveRequested(ToxFile _t1)$/;"	f	class:Core
fileRecvQueue	./../src/core.cpp	/^QList<ToxFile> Core::fileRecvQueue;$/;"	m	class:Core	file:
fileRecvQueue	./../src/core.h	/^    static QList<ToxFile> fileSendQueue, fileRecvQueue;$/;"	m	class:Core
fileSendFailed	./../moc_core.cpp	/^void Core::fileSendFailed(int _t1, const QString & _t2)$/;"	f	class:Core
fileSendMutex	./../src/core.h	/^    QMutex fileSendMutex, messageSendMutex;$/;"	m	class:Core
fileSendQueue	./../src/core.cpp	/^QList<ToxFile> Core::fileSendQueue;$/;"	m	class:Core	file:
fileSendQueue	./../src/core.h	/^    static QList<ToxFile> fileSendQueue, fileRecvQueue;$/;"	m	class:Core
fileSendStarted	./../moc_core.cpp	/^void Core::fileSendStarted(ToxFile _t1)$/;"	f	class:Core
fileSizeLabel	./../ui_filetransferwidget.h	/^    QLabel *fileSizeLabel;$/;"	m	class:Ui_FileTransferWidget
fileTimer	./../src/core.h	/^    QTimer *toxTimer, *fileTimer; \/\/, *saveTimer;$/;"	m	class:Core
fileTransferAccepted	./../moc_core.cpp	/^void Core::fileTransferAccepted(ToxFile _t1)$/;"	f	class:Core
fileTransferBrokenUnbroken	./../moc_core.cpp	/^void Core::fileTransferBrokenUnbroken(ToxFile _t1, bool _t2)$/;"	f	class:Core
fileTransferCancelled	./../moc_core.cpp	/^void Core::fileTransferCancelled(ToxFile _t1)$/;"	f	class:Core
fileTransferFinished	./../moc_core.cpp	/^void Core::fileTransferFinished(ToxFile _t1)$/;"	f	class:Core
fileTransferInfo	./../moc_core.cpp	/^void Core::fileTransferInfo(ToxFile _t1)$/;"	f	class:Core
fileTransferPaused	./../moc_core.cpp	/^void Core::fileTransferPaused(ToxFile _t1)$/;"	f	class:Core
fileTransferRemotePausedUnpaused	./../moc_core.cpp	/^void Core::fileTransferRemotePausedUnpaused(ToxFile _t1, bool _t2)$/;"	f	class:Core
fileUploadFinished	./../moc_core.cpp	/^void Core::fileUploadFinished(const QString & _t1)$/;"	f	class:Core
filenameLabel	./../ui_filetransferwidget.h	/^    CroppingLabel *filenameLabel;$/;"	m	class:Ui_FileTransferWidget
filenameTable	./../src/misc/smileypack.h	/^    QHash<QString, QString> filenameTable; \/\/ matches an emoticon to its corresponding smiley ie. ":)" -> "happy.png"$/;"	m	class:SmileyPack
filenames	./../tools/update-server/deployUpdateFTP_32.py	/^filenames = next(os.walk(localpath+prefix+'\/files\/'))[2]$/;"	v
filenames	./../tools/update-server/deployUpdateFTP_64.py	/^filenames = next(os.walk(localpath+prefix+'\/files\/'))[2]$/;"	v
filenames	./../tools/update-server/deployUpdateS3.py	/^filenames = next(os.walk(localpath+prefix+'\/files\/'))[2]$/;"	v
filesForm	./../src/widget/widget.h	/^    FilesForm *filesForm;$/;"	m	class:Widget
filesURI	./../src/autoupdate.cpp	/^const QString AutoUpdater::filesURI = AutoUpdater::updateServer+"\/qtox\/"+AutoUpdater::platform+"\/files\/";$/;"	m	class:AutoUpdater	file:
filesURI	./../src/autoupdate.h	/^    static const QString filesURI; \/\/\/< URI of the actual files of the latest version$/;"	m	class:AutoUpdater
filesize	./../src/corestructs.h	/^    qint64 filesize;$/;"	v
filtDelay	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short filtDelay;  \/\/ Filtered delay estimate.$/;"	m	struct:__anon23
filter	./../src/audiofilterer.h	/^    struct Filter_Audio* filter{nullptr};$/;"	s	class:AudioFilterer
filterAudio	./../src/audiofilterer.cpp	/^bool AudioFilterer::filterAudio(int16_t* data, int framesize)$/;"	f	class:AudioFilterer
filterAudio	./../src/misc/settings.h	/^    bool filterAudio;$/;"	m	class:Settings
filterAudio	./../ui_avsettings.h	/^    QCheckBox *filterAudio;$/;"	m	class:Ui_AVSettings
filterState	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             filterState[8];     \/\/ For downsampling wb to nb$/;"	m	struct:__anon1
filter_audio	./../libs/filter_audio/filter_audio.c	/^int filter_audio(Filter_Audio *f_a, int16_t *data, unsigned int samples)$/;"	f
filterer	./../src/core.h	/^    static AudioFilterer * filterer[TOXAV_MAX_CALLS];$/;"	m	class:Core
final	./../src/chatlog/chatlinecontent.h	/^    virtual int type() const final;$/;"	m	class:ChatLineContent
final	./../src/widget/androidgui.h	/^    virtual void keyPressEvent(QKeyEvent* event) final;$/;"	m	class:AndroidGUI
findFriend	./../src/friendlist.cpp	/^Friend* FriendList::findFriend(const ToxID& userId)$/;"	f	class:FriendList
findFriend	./../src/friendlist.cpp	/^Friend* FriendList::findFriend(int friendId)$/;"	f	class:FriendList
findGroup	./../src/grouplist.cpp	/^Group* GroupList::findGroup(int groupId)$/;"	f	class:GroupList
findJavaFromJavaHome	./../android/gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findLineByPosY	./../src/chatlog/chatlog.cpp	/^ChatLine::Ptr ChatLog::findLineByPosY(qreal yPos) const$/;"	f	class:ChatLog
firstCall	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             firstCall;          \/\/ First call to the process-function$/;"	m	struct:__anon1
firstColumnHandlePos	./../src/misc/settings.h	/^    int firstColumnHandlePos;$/;"	m	class:Settings
firstVal	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short firstVal;$/;"	m	struct:__anon23
flagHbandCn	./../libs/filter_audio/aec/aec_core.c	/^static const int flagHbandCn = 1;  \/\/ flag for adding comfort noise in H band$/;"	v	file:
flag_Hband_cn	./../libs/filter_audio/aec/aec_core_internal.h	/^  int flag_Hband_cn;     \/\/ for comfort noise$/;"	m	struct:AecCore
flags	./../src/ipc.h	/^        uint32_t flags;$/;"	m	struct:IPC::IPCEvent
flist	./../tools/update-server/deployUpdateS3.py	/^flist = Key(bucket)$/;"	v
flistURI	./../src/autoupdate.cpp	/^const QString AutoUpdater::flistURI = AutoUpdater::updateServer+"\/qtox\/"+AutoUpdater::platform+"\/flist";$/;"	m	class:AutoUpdater	file:
flistURI	./../src/autoupdate.h	/^    static const QString flistURI; \/\/\/< URI of the file containing info on each file (hash, signature, size, name, ..)$/;"	m	class:AutoUpdater
floatToData	./../src/misc/serialize.cpp	/^QByteArray floatToData(float num)$/;"	f
floatToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray floatToData(float num)$/;"	f
floatToData	./../updater/serialize.cpp	/^QByteArray floatToData(float num)$/;"	f
float_	./../libs/filter_audio/other/delay_estimator_internal.h	/^  float float_;$/;"	m	union:__anon38
focusInEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::focusInEvent(QFocusEvent* ev)$/;"	f	class:ChatLog
focusInput	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::focusInput()$/;"	f	class:GenericChatForm
focusOutEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::focusOutEvent(QFocusEvent* ev)$/;"	f	class:ChatLog
forceRelayout	./../src/chatlog/chatlog.cpp	/^void ChatLog::forceRelayout()$/;"	f	class:ChatLog
forceShow	./../src/widget/widget.cpp	/^void Widget::forceShow()$/;"	f	class:Widget
forceTCP	./../src/misc/settings.h	/^    bool forceTCP;$/;"	m	class:Settings
formIcon	./../src/widget/form/settings/genericsettings.h	/^    QPixmap formIcon;$/;"	m	class:GenericForm
formLayout	./../ui_avsettings.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_AVSettings
formLayout	./../ui_generalsettings.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_GeneralSettings
formLayout_2	./../ui_avsettings.h	/^    QFormLayout *formLayout_2;$/;"	m	class:Ui_AVSettings
formName	./../src/widget/form/settings/genericsettings.h	/^    QString formName;$/;"	m	class:GenericForm
format	./../src/chatlog/chatline.h	/^    std::vector<ColumnFormat> format;$/;"	m	class:ChatLine
format	./../src/video/videoframe.h	/^    ColorFormat format;$/;"	m	struct:VideoFrame
fpt	./../libs/filter_audio/agc/analog_agc.h	/^    FILE* fpt;$/;"	m	struct:__anon1
frame	./../src/video/cameraworker.h	/^    cv::Mat3b frame;$/;"	m	class:CameraWorker
frame	./../src/widget/videosurface.h	/^    VideoFrame frame;$/;"	m	class:VideoSurface
frameAvailable	./../moc_videosource.cpp	/^void VideoSource::frameAvailable(const VideoFrame & _t1)$/;"	f	class:VideoSource
frameCounter	./../libs/filter_audio/agc/digital_agc.h	/^    int frameCounter;$/;"	m	struct:__anon4
frameData	./../src/video/videoframe.h	/^    QByteArray frameData;$/;"	m	struct:VideoFrame
frame_3	./../ui_filetransferwidget.h	/^    QFrame *frame_3;$/;"	m	class:Ui_FileTransferWidget
framelevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  float framelevel;$/;"	m	struct:PowerLevel
frcounter	./../libs/filter_audio/aec/aec_core_internal.h	/^  int frcounter;$/;"	m	struct:PowerLevel
freeResources	./../src/chatlog/content/text.cpp	/^void Text::freeResources()$/;"	f	class:Text
free_icon	./../src/platform/statusnotifier/statusnotifier.c	/^free_icon (StatusNotifier *sn, StatusNotifierIcon icon)$/;"	f	file:
freqAvgIc	./../libs/filter_audio/aec/aec_core.c	/^static const int freqAvgIc = PART_LEN \/ 2;$/;"	v	file:
freq_avg_ic	./../libs/filter_audio/aec/aec_core_internal.h	/^  int freq_avg_ic;       \/\/ initial bin for averaging nlp gain$/;"	m	struct:AecCore
friendAdded	./../moc_core.cpp	/^void Core::friendAdded(int _t1, const QString & _t2)$/;"	f	class:Core
friendAvatarChanged	./../moc_core.cpp	/^void Core::friendAvatarChanged(int _t1, const QPixmap & _t2)$/;"	f	class:Core
friendAvatarRemoved	./../moc_core.cpp	/^void Core::friendAvatarRemoved(int _t1)$/;"	f	class:Core
friendId	./../src/coreav.h	/^    int friendId;$/;"	m	struct:ToxCall
friendId	./../src/corestructs.h	/^    int friendId;$/;"	v
friendId	./../src/friend.h	/^    int friendId;$/;"	m	struct:Friend
friendId	./../src/widget/friendwidget.h	/^    int friendId;$/;"	m	struct:FriendWidget
friendLastSeenChanged	./../moc_core.cpp	/^void Core::friendLastSeenChanged(int _t1, const QDateTime & _t2)$/;"	f	class:Core
friendList	./../src/friendlist.cpp	/^QHash<int, Friend*> FriendList::friendList;$/;"	m	class:FriendList	file:
friendList	./../src/friendlist.h	/^    static QHash<int, Friend*> friendList;$/;"	m	class:FriendList
friendList	./../ui_mainwindow.h	/^    AdjustingScrollArea *friendList;$/;"	m	class:Ui_MainWindow
friendLst	./../src/misc/settings.h	/^    QHash<QString, friendProp> friendLst;$/;"	m	class:Settings
friendMessageReceived	./../moc_core.cpp	/^void Core::friendMessageReceived(int _t1, const QString & _t2, bool _t3)$/;"	f	class:Core
friendProp	./../src/misc/settings.h	/^    struct friendProp$/;"	s	class:Settings
friendRemoved	./../moc_core.cpp	/^void Core::friendRemoved(int _t1)$/;"	f	class:Core
friendRequestAccepted	./../moc_widget.cpp	/^void Widget::friendRequestAccepted(const QString & _t1)$/;"	f	class:Widget
friendRequestReceived	./../moc_core.cpp	/^void Core::friendRequestReceived(const QString & _t1, const QString & _t2)$/;"	f	class:Core
friendRequested	./../moc_addfriendform.cpp	/^void AddFriendForm::friendRequested(const QString & _t1, const QString & _t2)$/;"	f	class:AddFriendForm
friendRequested	./../moc_widget.cpp	/^void Widget::friendRequested(const QString & _t1, const QString & _t2)$/;"	f	class:Widget
friendStatus	./../src/friend.h	/^    Status friendStatus;$/;"	m	struct:Friend
friendStatusChanged	./../moc_core.cpp	/^void Core::friendStatusChanged(int _t1, Status _t2)$/;"	f	class:Core
friendStatusMessageChanged	./../moc_core.cpp	/^void Core::friendStatusMessageChanged(int _t1, const QString & _t2)$/;"	f	class:Core
friendTypingChanged	./../moc_core.cpp	/^void Core::friendTypingChanged(int _t1, bool _t2)$/;"	f	class:Core
friendUsernameChanged	./../moc_core.cpp	/^void Core::friendUsernameChanged(int _t1, const QString & _t2)$/;"	f	class:Core
friendWidgetClicked	./../moc_friendwidget.cpp	/^void FriendWidget::friendWidgetClicked(FriendWidget * _t1)$/;"	f	class:FriendWidget
fromDate	./../ui_loadhistorydialog.h	/^    QCalendarWidget *fromDate;$/;"	m	class:Ui_LoadHistoryDialog
fromLabel	./../ui_loadhistorydialog.h	/^    QLabel *fromLabel;$/;"	m	class:Ui_LoadHistoryDialog
fromString	./../src/corestructs.cpp	/^ToxID ToxID::fromString(QString id)$/;"	f	class:ToxID
fromString	./../src/misc/cdata.cpp	/^uint16_t CData::fromString(const QString& data, uint8_t* cData)$/;"	f	class:CData
fromString	./../src/misc/cstring.cpp	/^uint16_t CString::fromString(const QString& string, uint8_t* cString)$/;"	f	class:CString
frsum	./../libs/filter_audio/aec/aec_core_internal.h	/^  float frsum;$/;"	m	struct:PowerLevel
fs	./../libs/filter_audio/agc/analog_agc.h	/^    uint32_t            fs;                 \/\/ Sampling frequency$/;"	m	struct:__anon1
fs	./../libs/filter_audio/filter_audio.c	/^    uint32_t fs;$/;"	m	struct:__anon42	file:
fs	./../libs/filter_audio/ns/ns_core.h	/^  uint32_t fs;$/;"	m	struct:NSinst_t_
fs	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                fs;$/;"	m	struct:NsxInst_t_
fs_type	./../osx/updater/updater.go	/^func fs_type(path string) int {$/;"	f
ftransWidgets	./../src/widget/form/chatform.h	/^    QHash<uint, FileTransferInstance*> ftransWidgets;$/;"	m	class:ChatForm
fullText	./../src/widget/croppinglabel.cpp	/^QString CroppingLabel::fullText()$/;"	f	class:CroppingLabel
g	./../tools/publish.py	/^g = login(user, password)$/;"	v
g_cclosure_user_marshal_BOOLEAN__INT_INT	./../src/platform/statusnotifier/closures.c	/^g_cclosure_user_marshal_BOOLEAN__INT_INT (GClosure     *closure,$/;"	f
g_marshal_value_peek_boolean	./../src/platform/statusnotifier/closures.c	28;"	d	file:
g_marshal_value_peek_boolean	./../src/platform/statusnotifier/closures.c	52;"	d	file:
g_marshal_value_peek_boxed	./../src/platform/statusnotifier/closures.c	43;"	d	file:
g_marshal_value_peek_boxed	./../src/platform/statusnotifier/closures.c	67;"	d	file:
g_marshal_value_peek_char	./../src/platform/statusnotifier/closures.c	29;"	d	file:
g_marshal_value_peek_char	./../src/platform/statusnotifier/closures.c	53;"	d	file:
g_marshal_value_peek_double	./../src/platform/statusnotifier/closures.c	40;"	d	file:
g_marshal_value_peek_double	./../src/platform/statusnotifier/closures.c	64;"	d	file:
g_marshal_value_peek_enum	./../src/platform/statusnotifier/closures.c	37;"	d	file:
g_marshal_value_peek_enum	./../src/platform/statusnotifier/closures.c	61;"	d	file:
g_marshal_value_peek_flags	./../src/platform/statusnotifier/closures.c	38;"	d	file:
g_marshal_value_peek_flags	./../src/platform/statusnotifier/closures.c	62;"	d	file:
g_marshal_value_peek_float	./../src/platform/statusnotifier/closures.c	39;"	d	file:
g_marshal_value_peek_float	./../src/platform/statusnotifier/closures.c	63;"	d	file:
g_marshal_value_peek_int	./../src/platform/statusnotifier/closures.c	31;"	d	file:
g_marshal_value_peek_int	./../src/platform/statusnotifier/closures.c	55;"	d	file:
g_marshal_value_peek_int64	./../src/platform/statusnotifier/closures.c	35;"	d	file:
g_marshal_value_peek_int64	./../src/platform/statusnotifier/closures.c	59;"	d	file:
g_marshal_value_peek_long	./../src/platform/statusnotifier/closures.c	33;"	d	file:
g_marshal_value_peek_long	./../src/platform/statusnotifier/closures.c	57;"	d	file:
g_marshal_value_peek_object	./../src/platform/statusnotifier/closures.c	45;"	d	file:
g_marshal_value_peek_object	./../src/platform/statusnotifier/closures.c	69;"	d	file:
g_marshal_value_peek_param	./../src/platform/statusnotifier/closures.c	42;"	d	file:
g_marshal_value_peek_param	./../src/platform/statusnotifier/closures.c	66;"	d	file:
g_marshal_value_peek_pointer	./../src/platform/statusnotifier/closures.c	44;"	d	file:
g_marshal_value_peek_pointer	./../src/platform/statusnotifier/closures.c	68;"	d	file:
g_marshal_value_peek_string	./../src/platform/statusnotifier/closures.c	41;"	d	file:
g_marshal_value_peek_string	./../src/platform/statusnotifier/closures.c	65;"	d	file:
g_marshal_value_peek_uchar	./../src/platform/statusnotifier/closures.c	30;"	d	file:
g_marshal_value_peek_uchar	./../src/platform/statusnotifier/closures.c	54;"	d	file:
g_marshal_value_peek_uint	./../src/platform/statusnotifier/closures.c	32;"	d	file:
g_marshal_value_peek_uint	./../src/platform/statusnotifier/closures.c	56;"	d	file:
g_marshal_value_peek_uint64	./../src/platform/statusnotifier/closures.c	36;"	d	file:
g_marshal_value_peek_uint64	./../src/platform/statusnotifier/closures.c	60;"	d	file:
g_marshal_value_peek_ulong	./../src/platform/statusnotifier/closures.c	34;"	d	file:
g_marshal_value_peek_ulong	./../src/platform/statusnotifier/closures.c	58;"	d	file:
g_marshal_value_peek_variant	./../src/platform/statusnotifier/closures.c	46;"	d	file:
g_marshal_value_peek_variant	./../src/platform/statusnotifier/closures.c	70;"	d	file:
gain	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t gain;$/;"	m	struct:__anon4
gainMap	./../libs/filter_audio/ns/nsx_core.h	/^  int                     gainMap;$/;"	m	struct:NsxInst_t_
gainTable	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t gainTable[32];$/;"	m	struct:__anon4
gainTableIdx	./../libs/filter_audio/agc/analog_agc.h	/^    uint16_t            gainTableIdx;       \/\/ Current position in virtual gain table$/;"	m	struct:__anon1
gain_control	./../libs/filter_audio/filter_audio.c	/^    void *gain_control, *echo_cancellation;$/;"	m	struct:__anon42	file:
gain_enabled	./../libs/filter_audio/filter_audio.c	/^    int gain_enabled;$/;"	m	struct:__anon42	file:
gainmap	./../libs/filter_audio/ns/ns_core.h	/^  int gainmap;$/;"	m	struct:NSinst_t_
gatePrevious	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t gatePrevious;$/;"	m	struct:__anon4
genUpdateDiff	./../src/autoupdate.cpp	/^QList<AutoUpdater::UpdateFileMeta> AutoUpdater::genUpdateDiff(QList<UpdateFileMeta> updateFlist)$/;"	f	class:AutoUpdater
genUpdateDiff	./../updater/update.cpp	/^QList<UpdateFileMeta> genUpdateDiff(QList<UpdateFileMeta> updateFlist)$/;"	f
generalGroup	./../ui_generalsettings.h	/^    QGroupBox *generalGroup;$/;"	m	class:Ui_GeneralSettings
generalLayout	./../ui_generalsettings.h	/^    QHBoxLayout *generalLayout;$/;"	m	class:Ui_GeneralSettings
generalSpacer	./../ui_generalsettings.h	/^    QSpacerItem *generalSpacer;$/;"	m	class:Ui_GeneralSettings
generateAddChatEntryCmd	./../src/historykeeper.cpp	/^QList<QString> HistoryKeeper::generateAddChatEntryCmd(const QString& chat, const QString& message, const QString& sender, const QDateTime &dt, bool isSent)$/;"	f	class:HistoryKeeper
generateRandomNospam	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::generateRandomNospam()$/;"	f	class:PrivacyForm
get	./../src/chatlog/pixmapcache.cpp	/^QPixmap PixmapCache::get(const QString &filename, QSize size)$/;"	f	class:PixmapCache
getAliasID	./../src/historykeeper.cpp	/^int HistoryKeeper::getAliasID(const QString &id_str)$/;"	f	class:HistoryKeeper
getAllFriends	./../src/friendlist.cpp	/^QList<Friend*> FriendList::getAllFriends()$/;"	f	class:FriendList
getAllGroups	./../src/grouplist.cpp	/^QList<Group *> GroupList::getAllGroups()$/;"	f	class:GroupList
getAndroidGUI	./../src/nexus.cpp	/^AndroidGUI* Nexus::getAndroidGUI()$/;"	f	class:Nexus
getAsIcon	./../src/misc/smileypack.cpp	/^QIcon SmileyPack::getAsIcon(const QString &key)$/;"	f	class:SmileyPack
getAsRichText	./../src/misc/smileypack.cpp	/^QString SmileyPack::getAsRichText(const QString &key)$/;"	f	class:SmileyPack
getAscent	./../src/chatlog/chatlinecontent.cpp	/^qreal ChatLineContent::getAscent() const$/;"	f	class:ChatLineContent
getAscent	./../src/chatlog/chatlinecontentproxy.cpp	/^qreal ChatLineContentProxy::getAscent() const$/;"	f	class:ChatLineContentProxy
getAscent	./../src/chatlog/content/image.cpp	/^qreal Image::getAscent() const$/;"	f	class:Image
getAscent	./../src/chatlog/content/notificationicon.cpp	/^qreal NotificationIcon::getAscent() const$/;"	f	class:NotificationIcon
getAscent	./../src/chatlog/content/spinner.cpp	/^qreal Spinner::getAscent() const$/;"	f	class:Spinner
getAscent	./../src/chatlog/content/text.cpp	/^qreal Text::getAscent() const$/;"	f	class:Text
getAudioInDevices	./../src/widget/form/settings/avform.cpp	/^void AVForm::getAudioInDevices()$/;"	f	class:AVForm
getAudioOutDevices	./../src/widget/form/settings/avform.cpp	/^void AVForm::getAudioOutDevices()$/;"	f	class:AVForm
getAutoAcceptDir	./../src/misc/settings.cpp	/^QString Settings::getAutoAcceptDir(const ToxID& id) const$/;"	f	class:Settings
getAutoAwayTime	./../src/misc/settings.cpp	/^int Settings::getAutoAwayTime() const$/;"	f	class:Settings
getAutoSaveEnabled	./../src/misc/settings.cpp	/^bool Settings::getAutoSaveEnabled() const$/;"	f	class:Settings
getAutorun	./../src/misc/settings.cpp	/^bool Settings::getAutorun() const$/;"	f	class:Settings
getAutorun	./../src/platform/autorun_osx.cpp	/^bool Platform::getAutorun()$/;"	f	class:Platform
getAutorun	./../src/platform/autorun_win.cpp	/^bool Platform::getAutorun()$/;"	f	class:Platform
getAutorun	./../src/platform/autorun_xdg.cpp	/^bool Platform::getAutorun()$/;"	f	class:Platform
getAutostartFilePath	./../src/platform/autorun_xdg.cpp	/^    QString getAutostartFilePath()$/;"	f	namespace:Platform
getAutostartInTray	./../src/misc/settings.cpp	/^bool Settings::getAutostartInTray() const$/;"	f	class:Settings
getAvatarHash	./../src/misc/settings.cpp	/^QByteArray Settings::getAvatarHash(const QString& ownerId)$/;"	f	class:Settings
getCachedSmiley	./../src/misc/smileypack.cpp	/^QIcon SmileyPack::getCachedSmiley(const QString &key)$/;"	f	class:SmileyPack
getCamVideoRes	./../src/misc/settings.cpp	/^QSize Settings::getCamVideoRes() const$/;"	f	class:Settings
getChatForm	./../src/friend.cpp	/^ChatForm *Friend::getChatForm()$/;"	f	class:Friend
getChatForm	./../src/group.cpp	/^GroupChatForm *Group::getChatForm()$/;"	f	class:Group
getChatHistory	./../src/historykeeper.cpp	/^QList<HistoryKeeper::HistMessage> HistoryKeeper::getChatHistory(HistoryKeeper::ChatType ct, const QString &chat,$/;"	f	class:HistoryKeeper
getChatID	./../src/historykeeper.cpp	/^QPair<int, HistoryKeeper::ChatType> HistoryKeeper::getChatID(const QString &id_str, ChatType ct)$/;"	f	class:HistoryKeeper
getChatLog	./../src/widget/form/genericchatform.cpp	/^ChatLog *GenericChatForm::getChatLog() const$/;"	f	class:GenericChatForm
getCheckUpdates	./../src/misc/settings.cpp	/^bool Settings::getCheckUpdates() const$/;"	f	class:Settings
getCloseToTray	./../src/misc/settings.cpp	/^bool Settings::getCloseToTray() const$/;"	f	class:Settings
getColor	./../src/misc/style.cpp	/^QColor Style::getColor(Style::ColorPalette entry)$/;"	f	class:Style
getColumn	./../src/chatlog/chatlinecontent.cpp	/^int ChatLineContent::getColumn() const$/;"	f	class:ChatLineContent
getColumnCount	./../src/chatlog/chatline.cpp	/^int ChatLine::getColumnCount()$/;"	f	class:ChatLine
getCompactLayout	./../src/misc/settings.cpp	/^bool Settings::getCompactLayout() const$/;"	f	class:Settings
getContent	./../src/chatlog/chatline.cpp	/^ChatLineContent *ChatLine::getContent(QPointF scenePos) const$/;"	f	class:ChatLine
getContent	./../src/chatlog/chatline.cpp	/^ChatLineContent *ChatLine::getContent(int col) const$/;"	f	class:ChatLine
getContentFromPos	./../src/chatlog/chatlog.cpp	/^ChatLineContent* ChatLog::getContentFromPos(QPointF scenePos) const$/;"	f	class:ChatLog
getCore	./../src/nexus.cpp	/^Core* Nexus::getCore()$/;"	f	class:Nexus
getCurrentProfile	./../src/misc/settings.cpp	/^QString Settings::getCurrentProfile() const$/;"	f	class:Settings
getCurrentProfileId	./../src/misc/settings.cpp	/^uint32_t Settings::getCurrentProfileId() const$/;"	f	class:Settings
getCurrentResolution	./../src/video/camera.cpp	/^QSize Camera::getCurrentResolution()$/;"	f	class:Camera
getDbSyncType	./../src/misc/settings.cpp	/^Db::syncType Settings::getDbSyncType() const$/;"	f	class:Settings
getDesktopGUI	./../src/nexus.cpp	/^Widget* Nexus::getDesktopGUI()$/;"	f	class:Nexus
getDhtServerList	./../src/misc/settings.cpp	/^const QList<Settings::DhtServer>& Settings::getDhtServerList() const$/;"	f	class:Settings
getDisplayedName	./../src/friend.cpp	/^QString Friend::getDisplayedName() const$/;"	f	class:Friend
getEchoesToFilter	./../src/audio.cpp	/^void Audio::getEchoesToFilter(AudioFilterer* filterer, int framesize)$/;"	f	class:Audio
getEmojiFontFamily	./../src/misc/settings.cpp	/^QString Settings::getEmojiFontFamily() const$/;"	f	class:Settings
getEmojiFontPointSize	./../src/misc/settings.cpp	/^int Settings::getEmojiFontPointSize() const$/;"	f	class:Settings
getEmoticons	./../src/misc/smileypack.cpp	/^QList<QStringList> SmileyPack::getEmoticons() const$/;"	f	class:SmileyPack
getEnableIPv6	./../src/misc/settings.cpp	/^bool Settings::getEnableIPv6() const$/;"	f	class:Settings
getEnableLogging	./../src/misc/settings.cpp	/^bool Settings::getEnableLogging() const$/;"	f	class:Settings
getEncryptLogs	./../src/misc/settings.cpp	/^bool Settings::getEncryptLogs() const$/;"	f	class:Settings
getEncryptTox	./../src/misc/settings.cpp	/^bool Settings::getEncryptTox() const$/;"	f	class:Settings
getEventFlag	./../src/friend.cpp	/^int Friend::getEventFlag() const$/;"	f	class:Friend
getEventFlag	./../src/group.cpp	/^int Group::getEventFlag() const$/;"	f	class:Group
getFauxOfflineMessaging	./../src/misc/settings.cpp	/^bool Settings::getFauxOfflineMessaging() const$/;"	f	class:Settings
getFilterAudio	./../src/misc/settings.cpp	/^bool Settings::getFilterAudio() const$/;"	f	class:Settings
getFirstColumnHandlePos	./../src/misc/settings.cpp	/^int Settings::getFirstColumnHandlePos() const$/;"	f	class:Settings
getFont	./../src/misc/style.cpp	/^QFont Style::getFont(Style::Font font)$/;"	f	class:Style
getForceTCP	./../src/misc/settings.cpp	/^bool Settings::getForceTCP() const$/;"	f	class:Settings
getFormIcon	./../src/widget/form/settings/genericsettings.h	/^    QPixmap getFormIcon() {return formIcon;}$/;"	f	class:GenericForm
getFormName	./../src/widget/form/settings/genericsettings.h	/^    QString getFormName() {return formName;}$/;"	f	class:GenericForm
getFriendAddress	./../src/core.cpp	/^QString Core::getFriendAddress(int friendNumber) const$/;"	f	class:Core
getFriendAdress	./../src/misc/settings.cpp	/^QString Settings::getFriendAdress(const QString &publicKey) const$/;"	f	class:Settings
getFriendAlias	./../src/misc/settings.cpp	/^QString Settings::getFriendAlias(const ToxID &id) const$/;"	f	class:Settings
getFriendID	./../src/friend.cpp	/^int Friend::getFriendID() const$/;"	f	class:Friend
getFriendLayout	./../src/widget/friendlistwidget.cpp	/^QVBoxLayout* FriendListWidget::getFriendLayout(Status s)$/;"	f	class:FriendListWidget
getFriendUsername	./../src/core.cpp	/^QString Core::getFriendUsername(int friendnumber) const$/;"	f	class:Core
getFriendWidget	./../src/friend.cpp	/^FriendWidget *Friend::getFriendWidget()$/;"	f	class:Friend
getFromDate	./../src/widget/form/loadhistorydialog.cpp	/^QDateTime LoadHistoryDialog::getFromDate()$/;"	f	class:LoadHistoryDialog
getGlobalAutoAcceptDir	./../src/misc/settings.cpp	/^QString Settings::getGlobalAutoAcceptDir() const$/;"	f	class:Settings
getGroupAlwaysNotify	./../src/misc/settings.cpp	/^bool Settings::getGroupAlwaysNotify() const$/;"	f	class:Settings
getGroupId	./../src/group.cpp	/^int Group::getGroupId() const$/;"	f	class:Group
getGroupLayout	./../src/widget/friendlistwidget.cpp	/^QVBoxLayout* FriendListWidget::getGroupLayout()$/;"	f	class:FriendListWidget
getGroupNumberPeers	./../src/core.cpp	/^int Core::getGroupNumberPeers(int groupId) const$/;"	f	class:Core
getGroupPeerName	./../src/core.cpp	/^QString Core::getGroupPeerName(int groupId, int peerId) const$/;"	f	class:Core
getGroupPeerNames	./../src/core.cpp	/^QList<QString> Core::getGroupPeerNames(int groupId) const$/;"	f	class:Core
getGroupPeerToxID	./../src/core.cpp	/^ToxID Core::getGroupPeerToxID(int groupId, int peerId) const$/;"	f	class:Core
getGroupWidget	./../src/group.cpp	/^GroupWidget *Group::getGroupWidget()$/;"	f	class:Group
getHistoryPath	./../src/historykeeper.cpp	/^QString HistoryKeeper::getHistoryPath(QString currentProfile, int encrypted)$/;"	f	class:HistoryKeeper
getHumanReadableSize	./../src/chatlog/content/filetransferwidget.cpp	/^QString FileTransferWidget::getHumanReadableSize(qint64 size)$/;"	f	class:FileTransferWidget
getIDString	./../src/core.cpp	/^QString Core::getIDString() const$/;"	f	class:Core
getIdleTime	./../src/platform/timer_osx.cpp	/^uint32_t Platform::getIdleTime()$/;"	f	class:Platform
getIdleTime	./../src/platform/timer_win.cpp	/^uint32_t Platform::getIdleTime()$/;"	f	class:Platform
getIdleTime	./../src/platform/timer_x11.cpp	/^uint32_t Platform::getIdleTime()$/;"	f	class:Platform
getInDev	./../src/misc/settings.cpp	/^QString Settings::getInDev() const$/;"	f	class:Settings
getInstance	./../src/audio.cpp	/^Audio& Audio::getInstance()$/;"	f	class:Audio
getInstance	./../src/chatlog/documentcache.cpp	/^DocumentCache &DocumentCache::getInstance()$/;"	f	class:DocumentCache
getInstance	./../src/chatlog/pixmapcache.cpp	/^PixmapCache &PixmapCache::getInstance()$/;"	f	class:PixmapCache
getInstance	./../src/core.cpp	/^Core* Core::getInstance()$/;"	f	class:Core
getInstance	./../src/historykeeper.cpp	/^HistoryKeeper *HistoryKeeper::getInstance()$/;"	f	class:HistoryKeeper
getInstance	./../src/ipc.cpp	/^IPC& IPC::getInstance()$/;"	f	class:IPC
getInstance	./../src/misc/settings.cpp	/^Settings& Settings::getInstance()$/;"	f	class:Settings
getInstance	./../src/misc/smileypack.cpp	/^SmileyPack& SmileyPack::getInstance()$/;"	f	class:SmileyPack
getInstance	./../src/nexus.cpp	/^Nexus& Nexus::getInstance()$/;"	f	class:Nexus
getInstance	./../src/video/camera.cpp	/^Camera* Camera::getInstance()$/;"	f	class:Camera
getInstance	./../src/widget/gui.cpp	/^GUI& GUI::getInstance()$/;"	f	class:GUI
getInstance	./../src/widget/widget.cpp	/^Widget* Widget::getInstance()$/;"	f	class:Widget
getKeypair	./../src/core.cpp	/^QPair<QByteArray, QByteArray> Core::getKeypair() const$/;"	f	class:Core
getLastFrame	./../src/video/camera.cpp	/^VideoFrame Camera::getLastFrame()$/;"	f	class:Camera
getLightTrayIcon	./../src/misc/settings.cpp	/^bool Settings::getLightTrayIcon() const$/;"	f	class:Settings
getLines	./../src/chatlog/chatlog.cpp	/^QVector<ChatLine::Ptr> ChatLog::getLines()$/;"	f	class:ChatLog
getLocalFlist	./../src/autoupdate.cpp	/^QByteArray AutoUpdater::getLocalFlist()$/;"	f	class:AutoUpdater
getLocalFlist	./../updater/update.cpp	/^QByteArray getLocalFlist()$/;"	f
getMainWidget	./../src/widget/gui.cpp	/^QWidget* GUI::getMainWidget()$/;"	f	class:GUI
getMakeToxPortable	./../src/misc/settings.cpp	/^bool Settings::getMakeToxPortable() const$/;"	f	class:Settings
getMentionedFlag	./../src/group.cpp	/^int Group::getMentionedFlag() const$/;"	f	class:Group
getMessage	./../src/widget/form/addfriendform.cpp	/^QString AddFriendForm::getMessage() const$/;"	f	class:AddFriendForm
getMinimizeToTray	./../src/misc/settings.cpp	/^bool Settings::getMinimizeToTray() const$/;"	f	class:Settings
getName	./../src/widget/genericchatroomwidget.cpp	/^QString GenericChatroomWidget::getName() const$/;"	f	class:GenericChatroomWidget
getOfflineMsgEngine	./../src/widget/form/chatform.cpp	/^OfflineMsgEngine *ChatForm::getOfflineMsgEngine()$/;"	f	class:ChatForm
getOutDev	./../src/misc/settings.cpp	/^QString Settings::getOutDev() const$/;"	f	class:Settings
getPassword	./../src/widget/form/setpassworddialog.cpp	/^QString SetPasswordDialog::getPassword()$/;"	f	class:SetPasswordDialog
getPeerList	./../src/group.cpp	/^QStringList Group::getPeerList() const$/;"	f	class:Group
getPeerName	./../src/core.cpp	/^QString Core::getPeerName(const ToxID& id) const$/;"	f	class:Core
getPeersCount	./../src/group.cpp	/^int Group::getPeersCount() const$/;"	f	class:Group
getPixmap	./../src/widget/maskablepixmapwidget.cpp	/^QPixmap MaskablePixmapWidget::getPixmap() const$/;"	f	class:MaskablePixmapWidget
getProp	./../src/video/camera.cpp	/^double Camera::getProp(Camera::Prop prop)$/;"	f	class:Camera
getProp	./../src/video/cameraworker.cpp	/^double CameraWorker::getProp(int prop)$/;"	f	class:CameraWorker
getProxyAddr	./../src/misc/settings.cpp	/^QString Settings::getProxyAddr() const$/;"	f	class:Settings
getProxyPort	./../src/misc/settings.cpp	/^int Settings::getProxyPort() const$/;"	f	class:Settings
getProxyType	./../src/misc/settings.cpp	/^ProxyType Settings::getProxyType() const$/;"	f	class:Settings
getRequestMessage	./../src/widget/toxuri.cpp	/^QString ToxURIDialog::getRequestMessage()$/;"	f	class:ToxURIDialog
getRow	./../src/chatlog/chatline.cpp	/^int ChatLine::getRow() const$/;"	f	class:ChatLine
getRow	./../src/chatlog/chatlinecontent.cpp	/^int ChatLineContent::getRow() const$/;"	f	class:ChatLineContent
getSaltFromFile	./../src/coreencryption.cpp	/^QByteArray Core::getSaltFromFile(QString filename)$/;"	f	class:Core
getSavedAvatar	./../src/misc/settings.cpp	/^QPixmap Settings::getSavedAvatar(const QString &ownerId)$/;"	f	class:Settings
getSecondColumnHandlePosFromRight	./../src/misc/settings.cpp	/^int Settings::getSecondColumnHandlePosFromRight() const$/;"	f	class:Settings
getSelectedText	./../src/chatlog/chatlinecontent.cpp	/^QString ChatLineContent::getSelectedText() const$/;"	f	class:ChatLineContent
getSelectedText	./../src/chatlog/chatlog.cpp	/^QString ChatLog::getSelectedText() const$/;"	f	class:ChatLog
getSelectedText	./../src/chatlog/content/text.cpp	/^QString Text::getSelectedText() const$/;"	f	class:Text
getSelectionEnd	./../src/chatlog/content/text.cpp	/^int Text::getSelectionEnd() const$/;"	f	class:Text
getSelectionStart	./../src/chatlog/content/text.cpp	/^int Text::getSelectionStart() const$/;"	f	class:Text
getSelfId	./../src/core.cpp	/^ToxID Core::getSelfId() const$/;"	f	class:Core
getSettingsDirPath	./../src/misc/settings.cpp	/^QString Settings::getSettingsDirPath()$/;"	f	class:Settings
getSettingsDirPath	./../updater/settingsDir.cpp	/^QString getSettingsDirPath()$/;"	f
getShowInFront	./../src/misc/settings.cpp	/^bool Settings::getShowInFront() const$/;"	f	class:Settings
getShowSystemTray	./../src/misc/settings.cpp	/^bool Settings::getShowSystemTray() const$/;"	f	class:Settings
getShowWindow	./../src/misc/settings.cpp	/^bool Settings::getShowWindow() const$/;"	f	class:Settings
getSmileyPack	./../src/misc/settings.cpp	/^QString Settings::getSmileyPack() const$/;"	f	class:Settings
getSplitterState	./../src/misc/settings.cpp	/^QByteArray Settings::getSplitterState() const$/;"	f	class:Settings
getStatus	./../src/friend.cpp	/^Status Friend::getStatus() const$/;"	f	class:Friend
getStatusChangeNotificationEnabled	./../src/misc/settings.cpp	/^bool Settings::getStatusChangeNotificationEnabled() const$/;"	f	class:Settings
getStatusMessage	./../src/core.cpp	/^QString Core::getStatusMessage() const$/;"	f	class:Core
getStatusMsg	./../src/widget/genericchatroomwidget.cpp	/^QString GenericChatroomWidget::getStatusMsg() const$/;"	f	class:GenericChatroomWidget
getStyle	./../src/misc/settings.cpp	/^QString Settings::getStyle() const$/;"	f	class:Settings
getStylesheet	./../src/misc/style.cpp	/^QString Style::getStylesheet(const QString &filename)$/;"	f	class:Style
getSupportedImageFilter	./../src/nexus.cpp	/^QString Nexus::getSupportedImageFilter()$/;"	f	class:Nexus
getText	./../src/chatlog/chatlinecontent.cpp	/^QString ChatLineContent::getText() const$/;"	f	class:ChatLineContent
getText	./../src/chatlog/content/text.cpp	/^QString Text::getText() const$/;"	f	class:Text
getThemeColor	./../src/misc/settings.cpp	/^int Settings::getThemeColor() const$/;"	f	class:Settings
getTime	./../src/chatlog/content/timestamp.cpp	/^QDateTime Timestamp::getTime()$/;"	f	class:Timestamp
getTimestampFormat	./../src/misc/settings.cpp	/^const QString &Settings::getTimestampFormat() const$/;"	f	class:Settings
getToxID	./../src/friend.cpp	/^const ToxID &Friend::getToxID() const$/;"	f	class:Friend
getTranslation	./../src/misc/settings.cpp	/^QString Settings::getTranslation() const$/;"	f	class:Settings
getTypingNotification	./../src/chatlog/chatlog.cpp	/^ChatLine::Ptr ChatLog::getTypingNotification() const$/;"	f	class:ChatLog
getUpdateFile	./../src/autoupdate.cpp	/^AutoUpdater::UpdateFile AutoUpdater::getUpdateFile(UpdateFileMeta fileMeta)$/;"	f	class:AutoUpdater
getUpdateFlist	./../src/autoupdate.cpp	/^QByteArray AutoUpdater::getUpdateFlist()$/;"	f	class:AutoUpdater
getUpdateVersion	./../src/autoupdate.cpp	/^AutoUpdater::VersionInfo AutoUpdater::getUpdateVersion()$/;"	f	class:AutoUpdater
getUseEmoticons	./../src/misc/settings.cpp	/^bool Settings::getUseEmoticons() const$/;"	f	class:Settings
getUseNativeStyle	./../src/misc/settings.cpp	/^bool Settings::getUseNativeStyle() const$/;"	f	class:Settings
getUsername	./../src/core.cpp	/^QString Core::getUsername() const$/;"	f	class:Core
getUsername	./../src/widget/widget.cpp	/^QString Widget::getUsername()$/;"	f	class:Widget
getVUint32Size	./../src/misc/serialize.cpp	/^unsigned getVUint32Size(QByteArray data)$/;"	f
getVUint32Size	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^unsigned getVUint32Size(QByteArray data)$/;"	f
getVUint32Size	./../updater/serialize.cpp	/^unsigned getVUint32Size(QByteArray data)$/;"	f
getVideoSourceFromCall	./../src/coreav.cpp	/^VideoSource *Core::getVideoSourceFromCall(int callNumber)$/;"	f	class:Core
getVisibleRect	./../src/chatlog/chatlog.cpp	/^QRect ChatLog::getVisibleRect() const$/;"	f	class:ChatLog
getWidget	./../src/chatlog/chatlinecontentproxy.cpp	/^QWidget *ChatLineContentProxy::getWidget() const$/;"	f	class:ChatLineContentProxy
getWidgetData	./../src/misc/settings.cpp	/^QByteArray Settings::getWidgetData(const QString& uniqueName) const$/;"	f	class:Settings
getWindowGeometry	./../src/misc/settings.cpp	/^QByteArray Settings::getWindowGeometry() const$/;"	f	class:Settings
getWindowState	./../src/misc/settings.cpp	/^QByteArray Settings::getWindowState() const$/;"	f	class:Settings
get_builder_for_icon_pixmap	./../src/platform/statusnotifier/statusnotifier.c	/^get_builder_for_icon_pixmap (StatusNotifier *sn, StatusNotifierIcon icon)$/;"	f	file:
get_prop	./../src/platform/statusnotifier/statusnotifier.c	/^get_prop (GDBusConnection        *conn,$/;"	f	file:
global	./../src/ipc.cpp	/^IPC::IPCMemory *IPC::global()$/;"	f	class:IPC
global	./../src/ipc.h	/^        bool global;$/;"	m	struct:IPC::IPCEvent
globalAutoAcceptDir	./../src/misc/settings.h	/^    QString globalAutoAcceptDir;$/;"	m	class:Settings
globalId	./../src/ipc.h	/^        uint64_t globalId;$/;"	m	struct:IPC::IPCMemory
globalId	./../src/ipc.h	/^    uint64_t globalId;$/;"	m	class:IPC
globalMemory	./../src/ipc.h	/^    QSharedMemory globalMemory;$/;"	m	class:IPC
globalMutex	./../src/offlinemsgengine.cpp	/^QMutex OfflineMsgEngine::globalMutex;$/;"	m	class:OfflineMsgEngine	file:
globalMutex	./../src/offlinemsgengine.h	/^    static QMutex globalMutex;$/;"	m	class:OfflineMsgEngine
grad	./../src/chatlog/content/notificationicon.h	/^    QLinearGradient grad;$/;"	m	class:NotificationIcon
gridLayout	./../ui_avsettings.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_AVSettings
gridLayout	./../ui_filetransferwidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_FileTransferWidget
gridLayout	./../ui_generalsettings.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_GeneralSettings
gridLayout_2	./../ui_filetransferwidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_FileTransferWidget
gridLayout_2	./../ui_generalsettings.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_GeneralSettings
gridLayout_2	./../ui_mainwindow.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_MainWindow
gridLayout_3	./../ui_filetransferwidget.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_FileTransferWidget
group	./../src/widget/form/groupchatform.h	/^    Group* group;$/;"	m	class:GroupChatForm
group	./../src/widget/form/tabcompleter.h	/^    Group* group;$/;"	m	class:TabCompleter
groupAlwaysNotify	./../src/misc/settings.h	/^    bool groupAlwaysNotify;$/;"	m	class:Settings
groupAlwaysNotify	./../ui_generalsettings.h	/^    QCheckBox *groupAlwaysNotify;$/;"	m	class:Ui_GeneralSettings
groupButton	./../ui_mainwindow.h	/^    QPushButton *groupButton;$/;"	m	class:Ui_MainWindow
groupCalls	./../src/core.cpp	/^QHash<int, ToxGroupCall> Core::groupCalls;$/;"	m	class:Core	file:
groupCalls	./../src/core.h	/^    static QHash<int, ToxGroupCall> groupCalls; \/\/ Maps group IDs to ToxGroupCalls$/;"	m	class:Core
groupId	./../src/coreav.h	/^    int groupId;$/;"	m	struct:ToxGroupCall
groupId	./../src/group.h	/^    int groupId;$/;"	m	class:Group
groupId	./../src/widget/groupwidget.h	/^    int groupId;$/;"	m	class:GroupWidget
groupInviteFriend	./../src/core.cpp	/^void Core::groupInviteFriend(int friendId, int groupId)$/;"	f	class:Core
groupInviteReceived	./../moc_core.cpp	/^void Core::groupInviteReceived(int _t1, uint8_t _t2, QByteArray _t3)$/;"	f	class:Core
groupLayout	./../src/widget/friendlistwidget.h	/^    QVBoxLayout *groupLayout;$/;"	m	class:FriendListWidget
groupList	./../src/grouplist.cpp	/^QHash<int, Group*> GroupList::groupList;$/;"	m	class:GroupList	file:
groupList	./../src/grouplist.h	/^    static QHash<int, Group*> groupList;$/;"	m	class:GroupList
groupMessageReceived	./../moc_core.cpp	/^void Core::groupMessageReceived(int _t1, int _t2, const QString & _t3, bool _t4)$/;"	f	class:Core
groupNamelistChanged	./../moc_core.cpp	/^void Core::groupNamelistChanged(int _t1, int _t2, uint8_t _t3)$/;"	f	class:Core
groupSentResult	./../moc_core.cpp	/^void Core::groupSentResult(int _t1, const QString & _t2, int _t3)$/;"	f	class:Core
groupTitleChanged	./../moc_core.cpp	/^void Core::groupTitleChanged(int _t1, const QString & _t2, const QString & _t3)$/;"	f	class:Core
groupTitleChanged	./../moc_groupchatform.cpp	/^void GroupChatForm::groupTitleChanged(int _t1, const QString & _t2)$/;"	f	class:GroupChatForm
groupWidgetClicked	./../moc_groupwidget.cpp	/^void GroupWidget::groupWidgetClicked(GroupWidget * _t1)$/;"	f	class:GroupWidget
gtkIcon	./../src/widget/systemtrayicon.h	/^    GtkStatusIcon* gtkIcon;$/;"	m	class:SystemTrayIcon
gtkMenu	./../src/widget/systemtrayicon.h	/^    GtkWidget* gtkMenu;$/;"	m	class:SystemTrayIcon
hAlign	./../src/chatlog/chatline.h	/^    Align hAlign = Left;$/;"	m	struct:ColumnFormat
hNlFbLocalMin	./../libs/filter_audio/aec/aec_core_internal.h	/^  float hNlFbMin, hNlFbLocalMin;$/;"	m	struct:AecCore
hNlFbMin	./../libs/filter_audio/aec/aec_core_internal.h	/^  float hNlFbMin, hNlFbLocalMin;$/;"	m	struct:AecCore
hNlMinCtr	./../libs/filter_audio/aec/aec_core_internal.h	/^  int hNlNewMin, hNlMinCtr;$/;"	m	struct:AecCore
hNlNewMin	./../libs/filter_audio/aec/aec_core_internal.h	/^  int hNlNewMin, hNlMinCtr;$/;"	m	struct:AecCore
hNlXdAvgMin	./../libs/filter_audio/aec/aec_core_internal.h	/^  float hNlXdAvgMin;$/;"	m	struct:AecCore
hNs	./../libs/filter_audio/aec/aec_core_internal.h	/^  float hNs[PART_LEN1];$/;"	m	struct:AecCore
handleButton	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::handleButton(QPushButton *btn)$/;"	f	class:FileTransferWidget
handleToxSave	./../src/widget/toxsave.cpp	/^bool handleToxSave(const QString& path)$/;"	f
handleToxURI	./../src/widget/toxuri.cpp	/^bool handleToxURI(const QString &toxURI)$/;"	f
hangupCall	./../moc_chatform.cpp	/^void ChatForm::hangupCall(int _t1)$/;"	f	class:ChatForm
hangupCall	./../src/coreav.cpp	/^void Core::hangupCall(int callId)$/;"	f	class:Core
hasCheck	./../src/widget/form/settings/identityform.h	/^    bool hasCheck = false;$/;"	m	class:IdentityForm
hasFriendWithAddress	./../src/core.cpp	/^bool Core::hasFriendWithAddress(const QString &addr) const$/;"	f	class:Core
hasFriendWithPublicKey	./../src/core.cpp	/^bool Core::hasFriendWithPublicKey(const QString &pubkey) const$/;"	f	class:Core
hasHeightForWidth	./../src/misc/flowlayout.cpp	/^bool FlowLayout::hasHeightForWidth() const$/;"	f	class:FlowLayout
hasNewEvents	./../src/friend.h	/^    int hasNewEvents;$/;"	m	struct:Friend
hasNewMessages	./../src/group.h	/^    int hasNewMessages, userWasMentioned;$/;"	m	class:Group
hasSelection	./../src/chatlog/content/text.cpp	/^bool Text::hasSelection() const$/;"	f	class:Text
hasSubscribed	./../src/widget/videosurface.h	/^    bool hasSubscribed;$/;"	m	class:VideoSurface
hasTextToBeCopied	./../src/chatlog/chatlog.cpp	/^bool ChatLog::hasTextToBeCopied() const$/;"	f	class:ChatLog
has_pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^        gboolean has_pixbuf;$/;"	m	struct:_StatusNotifierPrivate::__anon45	file:
head	./../src/widget/form/addfriendform.h	/^    QWidget *head, *main;$/;"	m	class:AddFriendForm
head	./../src/widget/form/filesform.h	/^    QWidget* head;$/;"	m	class:FilesForm
head	./../src/widget/form/settingswidget.h	/^    QWidget *head, *body;$/;"	m	class:SettingsWidget
head	./../ui_android.h	/^    QWidget *head;$/;"	m	class:Ui_Android
headLabel	./../src/widget/form/addfriendform.h	/^    QLabel headLabel, toxIdLabel, messageLabel;$/;"	m	class:AddFriendForm
headLabel	./../src/widget/form/filesform.h	/^    QLabel headLabel;$/;"	m	class:FilesForm
headLayout	./../src/widget/form/addfriendform.h	/^    QVBoxLayout layout, headLayout;$/;"	m	class:AddFriendForm
headLayout	./../src/widget/form/filesform.h	/^    QVBoxLayout headLayout;$/;"	m	class:FilesForm
headMenuIcon	./../ui_android.h	/^    QLabel *headMenuIcon;$/;"	m	class:Ui_Android
headRightIcon	./../ui_android.h	/^    QLabel *headRightIcon;$/;"	m	class:Ui_Android
headTextLayout	./../src/widget/form/genericchatform.h	/^    QVBoxLayout *headTextLayout;$/;"	m	class:GenericChatForm
headTitle	./../ui_android.h	/^    QLabel *headTitle;$/;"	m	class:Ui_Android
headWidget	./../src/widget/form/genericchatform.h	/^    QWidget *headWidget;$/;"	m	class:GenericChatForm
heightForWidth	./../src/misc/flowlayout.cpp	/^int FlowLayout::heightForWidth(int width) const$/;"	f	class:FlowLayout
hicounter	./../libs/filter_audio/aec/aec_core.h	/^  int hicounter;$/;"	m	struct:Stats
hide	./../src/widget/netcamview.cpp	/^void NetCamView::hide()$/;"	f	class:NetCamView
hide	./../src/widget/systemtrayicon.cpp	/^void SystemTrayIcon::hide()$/;"	f	class:SystemTrayIcon
hideDate	./../src/chatlog/chatmessage.cpp	/^void ChatMessage::hideDate()$/;"	f	class:ChatMessage
hideEvent	./../src/widget/form/chatform.cpp	/^void ChatForm::hideEvent(QHideEvent*)$/;"	f	class:ChatForm
hideEvent	./../src/widget/form/settings/avform.cpp	/^void AVForm::hideEvent(QHideEvent *)$/;"	f	class:AVForm
hideMainForms	./../src/widget/widget.cpp	/^void Widget::hideMainForms()$/;"	f	class:Widget
hideSender	./../src/chatlog/chatmessage.cpp	/^void ChatMessage::hideSender()$/;"	f	class:ChatMessage
hideTextEdit	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::hideTextEdit(bool acceptText)$/;"	f	class:CroppingLabel
hideWidgets	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::hideWidgets()$/;"	f	class:FileTransferWidget
highSkewCtr	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int highSkewCtr;$/;"	m	struct:__anon23
highpass_filter	./../libs/filter_audio/other/high_pass_filter.c	/^int highpass_filter(FilterState* hpf, int16_t* data, int length)$/;"	f
himean	./../libs/filter_audio/aec/aec_core.h	/^  float himean;$/;"	m	struct:Stats
histLrt	./../libs/filter_audio/ns/ns_core.h	/^  int histLrt[HIST_PAR_EST];$/;"	m	struct:NSinst_t_
histLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 histLrt[HIST_PAR_EST];$/;"	m	struct:NsxInst_t_
histSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  int histSpecDiff[HIST_PAR_EST];$/;"	m	struct:NSinst_t_
histSpecDiff	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 histSpecDiff[HIST_PAR_EST];$/;"	m	struct:NsxInst_t_
histSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  int histSpecFlat[HIST_PAR_EST];$/;"	m	struct:NSinst_t_
histSpecFlat	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 histSpecFlat[HIST_PAR_EST];$/;"	m	struct:NsxInst_t_
histogram	./../libs/filter_audio/other/delay_estimator.h	/^  float* histogram;$/;"	m	struct:__anon25
historyBaselineDate	./../src/widget/form/genericchatform.h	/^    QDateTime historyBaselineDate = QDateTime::currentDateTime(); \/\/ used by HistoryKeeper to load messages from t to historyBaselineDate (excluded)$/;"	m	class:GenericChatForm
historyGroup	./../ui_advancedsettings.h	/^    QGroupBox *historyGroup;$/;"	m	class:Ui_AdvancedSettings
historyInstance	./../src/historykeeper.cpp	/^static HistoryKeeper *historyInstance = nullptr;$/;"	v	file:
historyLoaded	./../src/widget/friendwidget.h	/^    bool historyLoaded;$/;"	m	struct:FriendWidget
history_size	./../libs/filter_audio/other/delay_estimator.h	/^  int history_size;$/;"	m	struct:__anon24
history_size	./../libs/filter_audio/other/delay_estimator.h	/^  int history_size;$/;"	m	struct:__anon25
hisum	./../libs/filter_audio/aec/aec_core.h	/^  float hisum;$/;"	m	struct:Stats
hk	./../src/historykeeper.h	/^    HistoryKeeper(HistoryKeeper &hk) = delete;$/;"	m	class:HistoryKeeper
horizontalLayout	./../ui_advancedsettings.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_AdvancedSettings
horizontalLayout	./../ui_android.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_Android
horizontalLayout	./../ui_filetransferwidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_FileTransferWidget
horizontalLayout	./../ui_generalsettings.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_GeneralSettings
horizontalLayout	./../ui_privacysettings.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_PrivacySettings
horizontalLayout_2	./../ui_filetransferwidget.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_FileTransferWidget
horizontalLayout_2	./../ui_generalsettings.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_GeneralSettings
horizontalLayout_2	./../ui_mainwindow.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_MainWindow
horizontalSpacer	./../ui_android.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_Android
horizontalSpacer_3	./../ui_mainwindow.h	/^    QSpacerItem *horizontalSpacer_3;$/;"	m	class:Ui_MainWindow
horizontalSpacer_4	./../ui_mainwindow.h	/^    QSpacerItem *horizontalSpacer_4;$/;"	m	class:Ui_MainWindow
horizontalSpacing	./../src/misc/flowlayout.cpp	/^int FlowLayout::horizontalSpacing() const$/;"	f	class:FlowLayout
hoverMoveEvent	./../src/chatlog/content/text.cpp	/^void Text::hoverMoveEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:Text
hpf	./../libs/filter_audio/filter_audio.c	/^    FilterState hpf;$/;"	m	struct:__anon42	file:
hueLabel	./../ui_avsettings.h	/^    QLabel *hueLabel;$/;"	m	class:Ui_AVSettings
icon	./../src/platform/statusnotifier/statusnotifier.c	/^    } icon[_NB_STATUS_NOTIFIER_ICONS];$/;"	m	struct:_StatusNotifierPrivate	typeref:struct:_StatusNotifierPrivate::__anon45	file:
icon	./../src/widget/widget.h	/^    SystemTrayIcon *icon;$/;"	m	class:Widget
iconCache	./../src/misc/smileypack.h	/^    QHash<QString, QIcon> iconCache; \/\/ representation of a smiley ie. "happy.png" -> data$/;"	m	class:SmileyPack
icon_name	./../src/platform/statusnotifier/statusnotifier.c	/^            gchar *icon_name;$/;"	m	union:_StatusNotifierPrivate::__anon45::__anon46	file:
id	./../src/autoupdate.h	/^        QString id; \/\/\/< Unique id of the file$/;"	m	struct:AutoUpdater::UpdateFileMeta
id	./../src/historykeeper.h	/^        qint64 id;$/;"	m	struct:HistoryKeeper::HistMessage
id	./../src/platform/statusnotifier/statusnotifier.c	/^    gchar *id;$/;"	m	struct:_StatusNotifierPrivate	file:
id	./../updater/update.h	/^    QString id; \/\/\/< Unique id of the file$/;"	m	struct:UpdateFileMeta
idSet	./../moc_core.cpp	/^void Core::idSet(const QString & _t1)$/;"	f	class:Core
idealSize	./../src/chatlog/content/text.cpp	/^QSizeF Text::idealSize()$/;"	f	class:Text
imag	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 imag[ANAL_BLOCKL_MAX];$/;"	m	struct:NsxInst_t_
imgLabel	./../src/widget/form/settingswidget.h	/^    QLabel *nameLabel, *imgLabel;$/;"	m	class:SettingsWidget
importButton	./../ui_identitysettings.h	/^    QPushButton *importButton;$/;"	m	class:Ui_IdentitySettings
importMessages	./../src/historykeeper.cpp	/^void HistoryKeeper::importMessages(const QList<HistoryKeeper::HistMessage> &lst)$/;"	f	class:HistoryKeeper
inActive	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             inActive;           \/\/ Inactive time in milliseconds$/;"	m	struct:__anon1
inCall	./../src/widget/form/groupchatform.h	/^    bool inCall;$/;"	m	class:GroupChatForm
inDev	./../src/misc/settings.h	/^    QString inDev;$/;"	m	class:Settings
inDevCombobox	./../ui_avsettings.h	/^    QComboBox *inDevCombobox;$/;"	m	class:Ui_AVSettings
inDevLabel	./../ui_avsettings.h	/^    QLabel *inDevLabel;$/;"	m	class:Ui_AVSettings
inQueue	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             inQueue;            \/\/ 10 ms batch indicator$/;"	m	struct:__anon1
inSamples	./../libs/filter_audio/aec/aec_core_internal.h	/^  int inSamples, outSamples;$/;"	m	struct:AecCore
index_7	./../libs/filter_audio/other/complex_bit_reverse.c	/^static const int16_t index_7[112] = {$/;"	v	file:
index_8	./../libs/filter_audio/other/complex_bit_reverse.c	/^static const int16_t index_8[240] = {$/;"	v	file:
init	./../android/gradlew.bat	/^:init$/;"	l
init	./../src/widget/widget.cpp	/^void Widget::init()$/;"	f	class:Widget
initCheck	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int initCheck = 42;$/;"	v	file:
initFlag	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short initFlag;  \/\/ indicates if AEC has been initialized$/;"	m	struct:__anon23
initFlag	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             initFlag;$/;"	m	struct:__anon1
initFlag	./../libs/filter_audio/ns/ns_core.h	/^  int initFlag;$/;"	m	struct:NSinst_t_
initFlag	./../libs/filter_audio/ns/nsx_core.h	/^  int                     initFlag;$/;"	m	struct:NsxInst_t_
initMagnEst	./../libs/filter_audio/ns/ns_core.h	/^  float initMagnEst[HALF_ANAL_BLOCKL];  \/\/ Initial magnitude spectrum estimate.$/;"	m	struct:NSinst_t_
initMagnEst	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                initMagnEst[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
init_highpass_filter	./../libs/filter_audio/other/high_pass_filter.c	/^void init_highpass_filter(FilterState *hpf, uint32_t fs)$/;"	f
initializeGL	./../src/widget/videosurface.cpp	/^void VideoSurface::initializeGL()$/;"	f	class:VideoSurface
insertChatMessage	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::insertChatMessage(ChatMessage::Ptr msg)$/;"	f	class:GenericChatForm
insertChatlineAtBottom	./../src/chatlog/chatlog.cpp	/^void ChatLog::insertChatlineAtBottom(ChatLine::Ptr l)$/;"	f	class:ChatLog
insertChatlineOnTop	./../src/chatlog/chatlog.cpp	/^void ChatLog::insertChatlineOnTop(ChatLine::Ptr l)$/;"	f	class:ChatLog
insertChatlineOnTop	./../src/chatlog/chatlog.cpp	/^void ChatLog::insertChatlineOnTop(const QList<ChatLine::Ptr>& newLines)$/;"	f	class:ChatLog
insertEmoticon	./../moc_emoticonswidget.cpp	/^void EmoticonsWidget::insertEmoticon(QString _t1)$/;"	f	class:EmoticonsWidget
install	./../osx/updater/updater.go	/^func install(path string, pathlen int) int {$/;"	f
installLocalUpdate	./../src/autoupdate.cpp	/^void AutoUpdater::installLocalUpdate()$/;"	f	class:AutoUpdater
installpath	./../src/autoupdate.h	/^        QString installpath; \/\/\/< Local path including the file name. May be relative to qtox-updater or absolute$/;"	m	struct:AutoUpdater::UpdateFileMeta
installpath	./../updater/update.h	/^    QString installpath; \/\/\/< Local path including the file name. May be relative to qtox-updater or absolute$/;"	m	struct:UpdateFileMeta
instance	./../src/audio.h	/^    static Audio* instance;$/;"	m	class:Audio
instance	./../src/widget/widget.h	/^    static Widget *instance;$/;"	m	class:Widget
instance_index	./../libs/filter_audio/aec/aec_core_internal.h	/^  int instance_index;$/;"	m	struct:AecCore
instant	./../libs/filter_audio/aec/aec_core.h	/^  float instant;$/;"	m	struct:Stats
instant	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int instant;$/;"	m	struct:__anon21
int32_	./../libs/filter_audio/other/delay_estimator_internal.h	/^  int32_t int32_;$/;"	m	union:__anon38
invalidate	./../src/video/videoframe.h	/^    void invalidate()$/;"	f	struct:VideoFrame
ip	./../libs/filter_audio/ns/ns_core.h	/^  int ip[IP_LENGTH];$/;"	m	struct:NSinst_t_
isAction	./../src/chatlog/chatmessage.cpp	/^bool ChatMessage::isAction() const$/;"	f	class:ChatMessage
isActive	./../src/widget/genericchatroomwidget.cpp	/^bool GenericChatroomWidget::isActive()$/;"	f	class:GenericChatroomWidget
isAnimationEnabled	./../src/misc/settings.cpp	/^bool Settings::isAnimationEnabled() const$/;"	f	class:Settings
isAvGroupchat	./../src/group.cpp	/^bool Group::isAvGroupchat() const$/;"	f	class:Group
isCompact	./../src/widget/genericchatroomwidget.cpp	/^bool GenericChatroomWidget::isCompact() const$/;"	f	class:GenericChatroomWidget
isCurrentOwner	./../src/ipc.cpp	/^bool IPC::isCurrentOwner()$/;"	f	class:IPC
isCurstomEmojiFont	./../src/misc/settings.cpp	/^bool Settings::isCurstomEmojiFont() const$/;"	f	class:Settings
isDefaultAvatar	./../src/widget/friendwidget.h	/^    bool isDefaultAvatar;$/;"	m	struct:FriendWidget
isDownloadingUpdate	./../src/autoupdate.h	/^    static std::atomic_bool isDownloadingUpdate; \/\/\/< We'll pretend there's no new update available if we're already updating$/;"	m	class:AutoUpdater
isEmpty	./../src/chatlog/chatlog.cpp	/^bool ChatLog::isEmpty() const$/;"	f	class:ChatLog
isEmpty	./../src/widget/form/genericchatform.cpp	/^bool GenericChatForm::isEmpty()$/;"	f	class:GenericChatForm
isEventAccepted	./../src/ipc.cpp	/^bool IPC::isEventAccepted(time_t time)$/;"	f	class:IPC
isEventProcessed	./../src/ipc.cpp	/^bool IPC::isEventProcessed(time_t time)$/;"	f	class:IPC
isFileExist	./../src/historykeeper.cpp	/^bool HistoryKeeper::isFileExist()$/;"	f	class:HistoryKeeper
isFilePathWritable	./../src/chatlog/content/filetransferwidget.cpp	/^bool FileTransferWidget::isFilePathWritable(const QString &filepath) const$/;"	f	class:FileTransferWidget
isFriendWidgetCurActiveWidget	./../src/widget/widget.cpp	/^bool Widget::isFriendWidgetCurActiveWidget(Friend* f)$/;"	f	class:Widget
isGroupCallMicEnabled	./../src/coreav.cpp	/^bool Core::isGroupCallMicEnabled(int groupId)$/;"	f	class:Core
isGroupCallVolEnabled	./../src/coreav.cpp	/^bool Core::isGroupCallVolEnabled(int groupId)$/;"	f	class:Core
isInputReady	./../src/audio.cpp	/^bool Audio::isInputReady()$/;"	f	class:Audio
isLocalUpdateReady	./../src/autoupdate.cpp	/^bool AutoUpdater::isLocalUpdateReady()$/;"	f	class:AutoUpdater
isMine	./../src/corestructs.cpp	/^bool ToxID::isMine() const$/;"	f	class:ToxID
isMinimizeOnCloseEnabled	./../src/misc/settings.cpp	/^bool Settings::isMinimizeOnCloseEnabled() const$/;"	f	class:Settings
isOutputClosed	./../src/audio.cpp	/^bool Audio::isOutputClosed()$/;"	f	class:Audio
isOverSelection	./../src/chatlog/chatlinecontent.cpp	/^bool ChatLineContent::isOverSelection(QPointF) const$/;"	f	class:ChatLineContent
isOverSelection	./../src/chatlog/chatlog.cpp	/^bool ChatLog::isOverSelection(QPointF scenePos) const$/;"	f	class:ChatLog
isOverSelection	./../src/chatlog/content/text.cpp	/^bool Text::isOverSelection(QPointF scenePos) const$/;"	f	class:Text
isPasswordSet	./../src/coreencryption.cpp	/^bool Core::isPasswordSet(PasswordType passtype)$/;"	f	class:Core
isReady	./../src/core.cpp	/^bool Core::isReady()$/;"	f	class:Core
isSent	./../src/historykeeper.h	/^        bool isSent;$/;"	m	struct:HistoryKeeper::HistMessage
isToxId	./../src/corestructs.cpp	/^bool ToxID::isToxId(const QString& value)$/;"	f	class:ToxID
isToxPortableEnabled	./../updater/settingsDir.cpp	/^bool isToxPortableEnabled()$/;"	f
isTyping	./../src/widget/form/chatform.h	/^    bool isTyping;$/;"	m	class:ChatForm
isTypingNotificationEnabled	./../src/misc/settings.cpp	/^bool Settings::isTypingNotificationEnabled() const$/;"	f	class:Settings
isUpdateAvailable	./../src/autoupdate.cpp	/^bool AutoUpdater::isUpdateAvailable()$/;"	f	class:AutoUpdater
isValid	./../src/misc/smileypack.cpp	/^bool SmileyPack::isValid(const QString &filename)$/;"	f	class:SmileyPack
isValid	./../src/video/videoframe.h	/^    bool isValid() const$/;"	f	struct:VideoFrame
isVisible	./../src/chatlog/chatline.h	/^    bool isVisible = false;$/;"	m	class:ChatLine
itemAt	./../src/misc/flowlayout.cpp	/^QLayoutItem *FlowLayout::itemAt(int index) const$/;"	f	class:FlowLayout
itemInputDialog	./../src/widget/gui.cpp	/^QString GUI::itemInputDialog(QWidget * parent, const QString & title,$/;"	f	class:GUI
itemList	./../src/misc/flowlayout.h	/^    QList<QLayoutItem *> itemList;$/;"	m	class:FlowLayout
item_xml	./../src/platform/statusnotifier/interfaces.h	/^static const gchar item_xml[] =$/;"	v
joinGroupCall	./../src/coreav.cpp	/^void Core::joinGroupCall(int groupId)$/;"	f	class:Core
joinGroupchat	./../src/core.cpp	/^int Core::joinGroupchat(int32_t friendnumber, uint8_t type, const uint8_t* friend_group_public_key,uint16_t length) const$/;"	f	class:Core
k	./../tools/update-server/deployUpdateS3.py	/^	k = Key(bucket)$/;"	v
kAecFalse	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  kAecFalse = 0,$/;"	e	enum:__anon19
kAecNlpAggressive	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  kAecNlpAggressive$/;"	e	enum:__anon18
kAecNlpConservative	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  kAecNlpConservative = 0,$/;"	e	enum:__anon18
kAecNlpModerate	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  kAecNlpModerate,$/;"	e	enum:__anon18
kAecTrue	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  kAecTrue$/;"	e	enum:__anon19
kAgcFalse	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcFalse = 0,$/;"	e	enum:__anon6
kAgcModeAdaptiveAnalog	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcModeAdaptiveAnalog,$/;"	e	enum:__anon5
kAgcModeAdaptiveDigital	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcModeAdaptiveDigital,$/;"	e	enum:__anon5
kAgcModeFixedDigital	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcModeFixedDigital$/;"	e	enum:__anon5
kAgcModeUnchanged	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcModeUnchanged,$/;"	e	enum:__anon5
kAgcTrue	./../libs/filter_audio/agc/include/gain_control.h	/^    kAgcTrue$/;"	e	enum:__anon6
kAlphaLongTerm	./../libs/filter_audio/agc/analog_agc.h	/^static const int16_t kAlphaLongTerm = 10; \/\/ 1 >> 10 = 0.000977$/;"	v
kAlphaShortTerm	./../libs/filter_audio/agc/analog_agc.h	/^static const int16_t kAlphaShortTerm = 6; \/\/ 1 >> 6 = 0.0156$/;"	v
kAvgDecayTime	./../libs/filter_audio/agc/digital_agc.c	/^static const int16_t kAvgDecayTime = 250; \/\/ frames; < 3000$/;"	v	file:
kBandFirst	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^enum { kBandFirst = 12 };$/;"	e	enum:__anon26	file:
kBandLast	./../libs/filter_audio/other/delay_estimator_wrapper.c	/^enum { kBandLast = 43 };$/;"	e	enum:__anon27	file:
kBlocks160w256	./../libs/filter_audio/ns/windows_private.h	/^static const float kBlocks160w256[256] = {$/;"	v
kBlocks160w256x	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kBlocks160w256x[256] = {$/;"	v	file:
kBlocks240w512	./../libs/filter_audio/ns/windows_private.h	/^static const float kBlocks240w512[512] = {$/;"	v
kBlocks320w512	./../libs/filter_audio/ns/windows_private.h	/^static const float kBlocks320w512[512] = {$/;"	v
kBlocks480w1024	./../libs/filter_audio/ns/windows_private.h	/^static const float kBlocks480w1024[1024] = {$/;"	v
kBlocks80w128	./../libs/filter_audio/ns/windows_private.h	/^static const float kBlocks80w128[128] = {$/;"	v
kBlocks80w128x	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kBlocks80w128x[128] = {$/;"	v	file:
kBufSizePartitions	./../libs/filter_audio/aec/aec_core.c	/^static const size_t kBufSizePartitions = 250;  \/\/ 1 second of audio in 16 kHz.$/;"	v	file:
kCoefficients32To24	./../libs/filter_audio/other/resample_fractional.c	/^static const int16_t kCoefficients32To24[3][8] = {$/;"	v	file:
kCoefficients44To32	./../libs/filter_audio/other/resample_fractional.c	/^static const int16_t kCoefficients44To32[4][9] = {$/;"	v	file:
kCoefficients48To32	./../libs/filter_audio/other/resample_fractional.c	/^static const int16_t kCoefficients48To32[2][8] = {$/;"	v	file:
kDelayDiffOffsetSamples	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kDelayDiffOffsetSamples = -160;$/;"	v	file:
kDelayDiffOffsetSamples	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kDelayDiffOffsetSamples = 0;$/;"	v	file:
kDeterminantEstMatrix	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kDeterminantEstMatrix[66] = {$/;"	v	file:
kEstimateLengthFrames	./../libs/filter_audio/aec/aec_resampler.c	/^  kEstimateLengthFrames = 400$/;"	e	enum:__anon8	file:
kExtendedErrorThreshold	./../libs/filter_audio/aec/aec_core_internal.h	/^static const float kExtendedErrorThreshold = 1.0e-6f;$/;"	v
kExtendedMinOverDrive	./../libs/filter_audio/aec/aec_core.c	/^static const float kExtendedMinOverDrive[3] = {3.0f, 6.0f, 15.0f};$/;"	v	file:
kExtendedMu	./../libs/filter_audio/aec/aec_core_internal.h	/^static const float kExtendedMu = 0.4f;$/;"	v
kExtendedNumPartitions	./../libs/filter_audio/aec/aec_core_internal.h	/^  kExtendedNumPartitions = 32$/;"	e	enum:__anon13
kFactor1Table	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kFactor1Table[257] = {$/;"	v	file:
kFactor2Aggressiveness1	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness1[257] = {$/;"	v	file:
kFactor2Aggressiveness2	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness2[257] = {$/;"	v	file:
kFactor2Aggressiveness3	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness3[257] = {$/;"	v	file:
kFilterCoefficients	./../libs/filter_audio/other/high_pass_filter.c	/^const int16_t kFilterCoefficients[5] =$/;"	v
kFilterCoefficients8kHz	./../libs/filter_audio/other/high_pass_filter.c	/^const int16_t kFilterCoefficients8kHz[5] =$/;"	v
kFixedDelayMs	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kFixedDelayMs = 20;$/;"	v	file:
kFixedDelayMs	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kFixedDelayMs = 50;$/;"	v	file:
kFractionSlope	./../libs/filter_audio/other/delay_estimator.c	/^static const float kFractionSlope = 0.05f;$/;"	v	file:
kGainTableAnalog	./../libs/filter_audio/agc/analog_agc.c	/^static const uint16_t kGainTableAnalog[GAIN_TBL_LEN] = {4096, 4251, 4412, 4579, 4752,$/;"	v	file:
kGainTableVirtualMic	./../libs/filter_audio/agc/analog_agc.c	/^static const uint16_t kGainTableVirtualMic[128] = {1052, 1081, 1110, 1141, 1172, 1204,$/;"	v	file:
kGenFuncTable	./../libs/filter_audio/agc/digital_agc.c	/^static const uint16_t kGenFuncTable[kGenFuncTableSize] = {$/;"	v	file:
kGenFuncTableSize	./../libs/filter_audio/agc/digital_agc.c	/^enum { kGenFuncTableSize = 128 };$/;"	e	enum:__anon2	file:
kHanning64w128	./../libs/filter_audio/ns/windows_private.h	/^static const float kHanning64w128[128] = {$/;"	v
kHistogramMax	./../libs/filter_audio/other/delay_estimator.c	/^static const float kHistogramMax = 3000.f;$/;"	v	file:
kHistorySizeBlocks	./../libs/filter_audio/aec/aec_core_internal.h	/^  kHistorySizeBlocks = kMaxDelayBlocks + kLookaheadBlocks$/;"	e	enum:__anon16
kIndicatorTable	./../libs/filter_audio/ns/nsx_core_c.c	/^static const int16_t kIndicatorTable[17] = {$/;"	v	file:
kInitCheck	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kInitCheck = 42;$/;"	v	file:
kLastHistogramMax	./../libs/filter_audio/other/delay_estimator.c	/^static const float kLastHistogramMax = 250.f;$/;"	v	file:
kLogIndex	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kLogIndex[129] = {$/;"	v	file:
kLookaheadBlocks	./../libs/filter_audio/aec/aec_core_internal.h	/^  kLookaheadBlocks = 15$/;"	e	enum:__anon15
kMaxBandFrameLength	./../libs/filter_audio/other/splitting_filter.c	/^    kMaxBandFrameLength = 240  \/\/ 10 ms at 48 kHz.$/;"	e	enum:__anon41	file:
kMaxBitCountsQ9	./../libs/filter_audio/other/delay_estimator.h	/^static const int32_t kMaxBitCountsQ9 = (32 << 9);  \/\/ 32 matching bits in Q9.$/;"	v
kMaxBufSizeStart	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kMaxBufSizeStart = 62;  \/\/ In partitions$/;"	v	file:
kMaxDelayBlocks	./../libs/filter_audio/aec/aec_core_internal.h	/^  kMaxDelayBlocks = 60$/;"	e	enum:__anon14
kMaxFFTOrder	./../libs/filter_audio/other/real_fft.h	/^enum {kMaxFFTOrder = 10};$/;"	e	enum:__anon28
kMaxHitsWhenPossiblyCausal	./../libs/filter_audio/other/delay_estimator.c	/^static const int kMaxHitsWhenPossiblyCausal = 1000;$/;"	v	file:
kMaxHitsWhenPossiblyNonCausal	./../libs/filter_audio/other/delay_estimator.c	/^static const int kMaxHitsWhenPossiblyNonCausal = 10;$/;"	v	file:
kMaxSeedUsed	./../libs/filter_audio/other/randomization_functions.c	/^static const uint32_t kMaxSeedUsed = 0x80000000;$/;"	v	file:
kMaxTrustedDelayMs	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kMaxTrustedDelayMs = 500;$/;"	v	file:
kMinFractionWhenPossiblyCausal	./../libs/filter_audio/other/delay_estimator.c	/^static const float kMinFractionWhenPossiblyCausal = 0.5f;$/;"	v	file:
kMinFractionWhenPossiblyNonCausal	./../libs/filter_audio/other/delay_estimator.c	/^static const float kMinFractionWhenPossiblyNonCausal = 0.25f;$/;"	v	file:
kMinHistogramThreshold	./../libs/filter_audio/other/delay_estimator.c	/^static const float kMinHistogramThreshold = 1.5f;$/;"	v	file:
kMinRequiredHits	./../libs/filter_audio/other/delay_estimator.c	/^static const int kMinRequiredHits = 10;$/;"	v	file:
kMinTrustedDelayMs	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int kMinTrustedDelayMs = 20;$/;"	v	file:
kMsecSpeechInner	./../libs/filter_audio/agc/analog_agc.h	/^static const int16_t kMsecSpeechInner = 520;$/;"	v
kMsecSpeechOuter	./../libs/filter_audio/agc/analog_agc.h	/^static const int16_t kMsecSpeechOuter = 340;$/;"	v
kMuteGuardTimeMs	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kMuteGuardTimeMs = 8000;$/;"	v	file:
kNormalMinOverDrive	./../libs/filter_audio/aec/aec_core.c	/^static const float kNormalMinOverDrive[3] = {1.0f, 2.0f, 5.0f};$/;"	v	file:
kNormalNumPartitions	./../libs/filter_audio/aec/aec_core_internal.h	/^static const int kNormalNumPartitions = 12;$/;"	v
kNormalVadThreshold	./../libs/filter_audio/agc/analog_agc.h	/^static const int16_t kNormalVadThreshold = 400;$/;"	v
kOffset1	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kOffset1[8] = {25395, 23911, 22206, 20737, 19612, 18805, 17951,$/;"	v	file:
kOffset2	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kOffset2[8] = {18432, 18379, 18290, 18177, 18052, 17920, 17670,$/;"	v	file:
kOffsetLevel	./../libs/filter_audio/aec/aec_core.h	/^  kOffsetLevel = -100$/;"	e	enum:__anon12
kPrefBandSize	./../libs/filter_audio/aec/aec_core.c	/^  kPrefBandSize = 24$/;"	e	enum:__anon17	file:
kProbabilityLowerLimit	./../libs/filter_audio/other/delay_estimator.c	/^static const int32_t kProbabilityLowerLimit = 8704;  \/\/ 17 in Q9.$/;"	v	file:
kProbabilityMinSpread	./../libs/filter_audio/other/delay_estimator.c	/^static const int32_t kProbabilityMinSpread = 2816;  \/\/ 5.5 in Q9.$/;"	v	file:
kProbabilityOffset	./../libs/filter_audio/other/delay_estimator.c	/^static const int32_t kProbabilityOffset = 1024;  \/\/ 2 in Q9.$/;"	v	file:
kQ14Scaling	./../libs/filter_audio/other/delay_estimator.c	/^static const float kQ14Scaling = 1.f \/ (1 << 14);  \/\/ Scaling by 2^14 to get Q0.$/;"	v	file:
kRandNTable	./../libs/filter_audio/other/randomization_functions.c	/^static const int16_t kRandNTable[] = {$/;"	v	file:
kResampleAllpass	./../libs/filter_audio/other/resample_by_2_internal.c	/^static const int16_t kResampleAllpass[2][3] = {$/;"	v	file:
kResampleAllpass1	./../libs/filter_audio/other/resample_by_2.c	/^static const uint16_t kResampleAllpass1[3] = {3284, 24441, 49528};$/;"	v	file:
kResampleAllpass1	./../libs/filter_audio/other/resample_by_2.c	/^static const uint32_t kResampleAllpass1[3] = {3284, 24441, 49528 << 15};$/;"	v	file:
kResampleAllpass2	./../libs/filter_audio/other/resample_by_2.c	/^static const uint16_t kResampleAllpass2[3] = {12199, 37471, 60255};$/;"	v	file:
kResampleAllpass2	./../libs/filter_audio/other/resample_by_2.c	/^static const uint32_t kResampleAllpass2[3] =$/;"	v	file:
kResamplerBufferSize	./../libs/filter_audio/aec/aec_resampler.h	/^  kResamplerBufferSize = FRAME_LEN * 4$/;"	e	enum:__anon11
kResamplingDelay	./../libs/filter_audio/aec/aec_resampler.h	/^  kResamplingDelay = 1$/;"	e	enum:__anon10
kShiftsAtZero	./../libs/filter_audio/other/delay_estimator.c	/^static const int kShiftsAtZero = 13;  \/\/ Right shifts at zero binary spectrum.$/;"	v	file:
kShiftsLinearSlope	./../libs/filter_audio/other/delay_estimator.c	/^static const int kShiftsLinearSlope = 3;$/;"	v	file:
kSinTable1024	./../libs/filter_audio/other/complex_fft_tables.h	/^static const int16_t kSinTable1024[] = {$/;"	v
kSlope1	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kSlope1[8] = {21793, 12517, 7189, 4129, 2372, 1362, 472, 78};$/;"	v	file:
kSlope2	./../libs/filter_audio/agc/analog_agc.c	/^static const int16_t kSlope2[8] = {2063, 1731, 1452, 1218, 1021, 857, 597, 337};$/;"	v	file:
kStartBand	./../libs/filter_audio/ns/nsx_core.c	/^static const int kStartBand = 5;$/;"	v	file:
kSumLogIndex	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kSumLogIndex[66] = {$/;"	v	file:
kSumSquareLogIndex	./../libs/filter_audio/ns/nsx_core.c	/^static const int16_t kSumSquareLogIndex[66] = {$/;"	v	file:
kSuppressionTableVirtualMic	./../libs/filter_audio/agc/analog_agc.c	/^static const uint16_t kSuppressionTableVirtualMic[128] = {1024, 1006, 988, 970, 952,$/;"	v	file:
kTargetLevelTable	./../libs/filter_audio/agc/analog_agc.c	/^static const int32_t kTargetLevelTable[64] = {134209536, 106606424, 84680493, 67264106,$/;"	v	file:
kTargetSupp	./../libs/filter_audio/aec/aec_core.c	/^static const float kTargetSupp[3] = {-6.9f, -11.5f, -18.4f};$/;"	v	file:
k_swap_sign	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^    k_swap_sign[4] = {-1.f, 1.f, -1.f, 1.f};$/;"	v	file:
keepInMemory	./../src/chatlog/content/text.h	/^    bool keepInMemory = false;$/;"	m	class:Text
key	./../src/autoupdate.cpp	/^unsigned char AutoUpdater::key[crypto_sign_PUBLICKEYBYTES] =$/;"	m	class:AutoUpdater	file:
key	./../src/autoupdate.cpp	/^unsigned char AutoUpdater::key[crypto_sign_PUBLICKEYBYTES];$/;"	m	class:AutoUpdater	file:
key	./../src/autoupdate.h	/^    static unsigned char key[];$/;"	m	class:AutoUpdater
key	./../updater/update.cpp	/^unsigned char key[crypto_sign_PUBLICKEYBYTES] =$/;"	v
keyPressEvent	./../src/widget/androidgui.cpp	/^void AndroidGUI::keyPressEvent(QKeyEvent* event)$/;"	f	class:AndroidGUI
keyPressEvent	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::keyPressEvent(QKeyEvent* ev)$/;"	f	class:GroupChatForm
keyPressEvent	./../src/widget/groupwidget.cpp	/^void GroupWidget::keyPressEvent(QKeyEvent* ev)$/;"	f	class:GroupWidget
keyPressEvent	./../src/widget/tool/chattextedit.cpp	/^void ChatTextEdit::keyPressEvent(QKeyEvent * event)$/;"	f	class:ChatTextEdit
keyPressed	./../moc_chattextedit.cpp	/^void ChatTextEdit::keyPressed()$/;"	f	class:ChatTextEdit
keyReleaseEvent	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::keyReleaseEvent(QKeyEvent* ev)$/;"	f	class:GroupChatForm
keyReleaseEvent	./../src/widget/groupwidget.cpp	/^void GroupWidget::keyReleaseEvent(QKeyEvent* ev)$/;"	f	class:GroupWidget
kill_filter_audio	./../libs/filter_audio/filter_audio.c	/^void kill_filter_audio(Filter_Audio *f_a)$/;"	f
knownDelay	./../libs/filter_audio/aec/aec_core_internal.h	/^  int knownDelay;$/;"	m	struct:AecCore
knownDelay	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int knownDelay;$/;"	m	struct:__anon23
label	./../ui_generalsettings.h	/^    QLabel *label;$/;"	m	class:Ui_GeneralSettings
label	./../ui_setpassworddialog.h	/^    QLabel *label;$/;"	m	class:Ui_SetPasswordDialog
label_2	./../ui_setpassworddialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_SetPasswordDialog
label_3	./../ui_setpassworddialog.h	/^    QLabel *label_3;$/;"	m	class:Ui_SetPasswordDialog
langs	./../src/widget/form/settings/generalform.cpp	/^static QStringList langs = {"Български", "Deutsch", "English", "Español", "Français", "Magyar", "Italiano", "Lietuvių", "mannol", "Nederlands", "Pirate", "Polski", "Português", "Русский", "Slovenščina", "Suomi", "Svenska", "Українська", "简体中文"};$/;"	v	file:
lastBytesSent	./../src/chatlog/content/filetransferwidget.h	/^    qint64 lastBytesSent = 0;$/;"	m	class:FileTransferWidget
lastColor	./../src/widget/genericchatroomwidget.h	/^    QColor lastColor;$/;"	m	class:GenericChatroomWidget
lastCompletionLength	./../src/widget/form/tabcompleter.h	/^    int lastCompletionLength;$/;"	m	class:TabCompleter
lastDelayDiff	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short lastDelayDiff;$/;"	m	struct:__anon23
lastError	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int lastError;$/;"	m	struct:__anon23
lastError	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             lastError;$/;"	m	struct:__anon1
lastEvent	./../src/ipc.h	/^        time_t lastEvent;$/;"	m	struct:IPC::IPCMemory
lastInMicLevel	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             lastInMicLevel;$/;"	m	struct:__anon1
lastMessage	./../src/widget/tool/chattextedit.h	/^    QString lastMessage;$/;"	m	class:ChatTextEdit
lastProcessed	./../src/ipc.h	/^        time_t lastProcessed;$/;"	m	struct:IPC::IPCMemory
lastTick	./../src/chatlog/content/filetransferwidget.h	/^    QTime lastTick;$/;"	m	class:FileTransferWidget
last_candidate_delay	./../libs/filter_audio/other/delay_estimator.h	/^  int last_candidate_delay;$/;"	m	struct:__anon25
last_delay	./../libs/filter_audio/other/delay_estimator.h	/^  int last_delay;$/;"	m	struct:__anon25
last_delay_histogram	./../libs/filter_audio/other/delay_estimator.h	/^  float last_delay_histogram;$/;"	m	struct:__anon25
last_delay_probability	./../libs/filter_audio/other/delay_estimator.h	/^  int last_delay_probability;$/;"	m	struct:__anon25
layout	./../src/chatlog/chatline.cpp	/^void ChatLine::layout(qreal w, QPointF scenePos)$/;"	f	class:ChatLine
layout	./../src/chatlog/chatlog.cpp	/^void ChatLog::layout(int start, int end, qreal width)$/;"	f	class:ChatLog
layout	./../src/widget/emoticonswidget.h	/^    QVBoxLayout layout;$/;"	m	class:EmoticonsWidget
layout	./../src/widget/form/addfriendform.h	/^    QVBoxLayout layout, headLayout;$/;"	m	class:AddFriendForm
layout	./../src/widget/genericchatroomwidget.h	/^    QHBoxLayout* layout = nullptr;$/;"	m	class:GenericChatroomWidget
layouts	./../src/widget/friendlistwidget.h	/^    QHash<int, QVBoxLayout*> layouts;$/;"	m	class:FriendListWidget
leaveGroupCall	./../src/coreav.cpp	/^void Core::leaveGroupCall(int groupId)$/;"	f	class:Core
lessThanBSRectBottom	./../src/chatlog/chatline.cpp	/^bool ChatLine::lessThanBSRectBottom(const ChatLine::Ptr lhs, const qreal rhs)$/;"	f	class:ChatLine
lessThanBSRectTop	./../src/chatlog/chatline.cpp	/^bool ChatLine::lessThanBSRectTop(const ChatLine::Ptr lhs, const qreal rhs)$/;"	f	class:ChatLine
lessThanRowIndex	./../src/chatlog/chatline.cpp	/^bool ChatLine::lessThanRowIndex(const ChatLine::Ptr lhs, const ChatLine::Ptr rhs)$/;"	f	class:ChatLine
lightTrayIcon	./../src/misc/settings.h	/^    bool lightTrayIcon;$/;"	m	class:Settings
lightTrayIcon	./../ui_generalsettings.h	/^    QCheckBox *lightTrayIcon;$/;"	m	class:Ui_GeneralSettings
limitPeakSpacingSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  float limitPeakSpacingSpecDiff;$/;"	m	struct:NSParaExtract_t_
limitPeakSpacingSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float limitPeakSpacingSpecFlat;$/;"	m	struct:NSParaExtract_t_
limitPeakWeightsSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  float limitPeakWeightsSpecDiff;$/;"	m	struct:NSParaExtract_t_
limitPeakWeightsSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float limitPeakWeightsSpecFlat;$/;"	m	struct:NSParaExtract_t_
limiterEnable	./../libs/filter_audio/agc/analog_agc.h	/^    uint8_t             limiterEnable;      \/\/ Enabling limiter (on\/off (default off))$/;"	m	struct:__anon1
limiterEnable	./../libs/filter_audio/agc/include/gain_control.h	/^    uint8_t limiterEnable;     \/\/ default kAgcTrue (on)$/;"	m	struct:__anon7
lineSpacing	./../src/chatlog/chatlog.h	/^    qreal lineSpacing = 5.0f;$/;"	m	class:ChatLog
lines	./../src/chatlog/chatlog.h	/^    QVector<ChatLine::Ptr> lines;$/;"	m	class:ChatLog
linoutlevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  PowerLevel linoutlevel;$/;"	m	struct:AecCore
listSmileyPacks	./../src/misc/smileypack.cpp	/^QList<QPair<QString, QString> > SmileyPack::listSmileyPacks(const QStringList &paths)$/;"	f	class:SmileyPack
listWidget	./../ui_android.h	/^    QListWidget *listWidget;$/;"	m	class:Ui_Android
load	./../src/misc/settings.cpp	/^void Settings::load()$/;"	f	class:Settings
load	./../src/misc/smileypack.cpp	/^bool SmileyPack::load(const QString& filename)$/;"	f	class:SmileyPack
loadButton	./../ui_identitysettings.h	/^    QPushButton *loadButton;$/;"	m	class:Ui_IdentitySettings
loadConfiguration	./../src/core.cpp	/^bool Core::loadConfiguration(QString path)$/;"	f	class:Core
loadEncryptedSave	./../src/coreencryption.cpp	/^bool Core::loadEncryptedSave(QByteArray& data)$/;"	f	class:Core
loadFriends	./../src/core.cpp	/^void Core::loadFriends()$/;"	f	class:Core
loadHistory	./../src/widget/form/chatform.cpp	/^void ChatForm::loadHistory(QDateTime since, bool processUndelivered)$/;"	f	class:ChatForm
loadOldInformation	./../src/coreencryption.cpp	/^QString Core::loadOldInformation()$/;"	f	class:Core
loadPath	./../src/core.h	/^    QString loadPath; \/\/ meaningless after start() is called$/;"	m	class:Core
loadResource	./../src/chatlog/customtextdocument.cpp	/^QVariant CustomTextDocument::loadResource(int type, const QUrl &name)$/;"	f	class:CustomTextDocument
loaded	./../src/misc/settings.h	/^    bool loaded;$/;"	m	class:Settings
locales	./../src/widget/form/settings/generalform.cpp	/^static QStringList locales = {"bg", "de", "en", "es", "fr", "hu", "it", "lt", "mannol", "nl", "pirate", "pl", "pt", "ru", "sl", "fi", "sv", "uk", "zh"};$/;"	v	file:
localpath	./../tools/update-server/deployUpdateFTP_32.py	/^localpath = sys.argv[1];$/;"	v
localpath	./../tools/update-server/deployUpdateFTP_64.py	/^localpath = sys.argv[1];$/;"	v
localpath	./../tools/update-server/deployUpdateS3.py	/^localpath = sys.argv[1];$/;"	v
logFile	./../libs/filter_audio/agc/digital_agc.h	/^    FILE* logFile;$/;"	m	struct:__anon4
logLrtTimeAvg	./../libs/filter_audio/ns/ns_core.h	/^  float logLrtTimeAvg[HALF_ANAL_BLOCKL];  \/\/ Log LRT factor with time-smoothing.$/;"	m	struct:NSinst_t_
logLrtTimeAvgW32	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 logLrtTimeAvgW32[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
logRatio	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t logRatio; \/\/ log( P(active) \/ P(inactive) ) (Q10)$/;"	m	struct:__anon3
logStorageOptsChanged	./../moc_settings.cpp	/^void Settings::logStorageOptsChanged()$/;"	f	class:Settings
lookahead	./../libs/filter_audio/other/delay_estimator.h	/^  int lookahead;$/;"	m	struct:__anon25
lookup	./../src/toxme.cpp	/^ToxID Toxme::lookup(QString address)$/;"	f	class:Toxme
lowLevelSignal	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             lowLevelSignal;$/;"	m	struct:__anon1
lowerLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             lowerLimit;         \/\/ Lower limit for mic energy$/;"	m	struct:__anon1
lowerPrimaryLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             lowerPrimaryLimit;  \/\/ = RXX_BUFFER_LEN * 534298;       -24 dBfs$/;"	m	struct:__anon1
lowerSecondaryLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             lowerSecondaryLimit;\/\/ = RXX_BUFFER_LEN * 267783;       -27 dBfs$/;"	m	struct:__anon1
lquantile	./../libs/filter_audio/ns/ns_core.h	/^  float lquantile[SIMULT * HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
m_hSpace	./../src/misc/flowlayout.h	/^    int m_hSpace;$/;"	m	class:FlowLayout
m_vSpace	./../src/misc/flowlayout.h	/^    int m_vSpace;$/;"	m	class:FlowLayout
magnAvgPause	./../libs/filter_audio/ns/ns_core.h	/^  float magnAvgPause[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
magnEnergy	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                magnEnergy;$/;"	m	struct:NsxInst_t_
magnLen	./../libs/filter_audio/ns/ns_core.h	/^  int magnLen;$/;"	m	struct:NSinst_t_
magnLen	./../libs/filter_audio/ns/nsx_core.h	/^  int                     magnLen;$/;"	m	struct:NsxInst_t_
magnPrevAnalyze	./../libs/filter_audio/ns/ns_core.h	/^  float magnPrevAnalyze[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
magnPrevProcess	./../libs/filter_audio/ns/ns_core.h	/^  float magnPrevProcess[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
main	./../osx/updater/updater.go	/^func main() {$/;"	f
main	./../osx/updater/updater.go	/^package main$/;"	p
main	./../src/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	./../src/widget/form/addfriendform.h	/^    QWidget *head, *main;$/;"	m	class:AddFriendForm
main	./../src/widget/form/filesform.h	/^    QTabWidget main;$/;"	m	class:FilesForm
main	./../tools/update-server/qtox-updater-genflist/main.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./../tools/update-server/qtox-updater-sign/main.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./../updater/main.cpp	/^int main(int argc, char *argv[])$/;"	f
mainContent	./../ui_mainwindow.h	/^    QWidget *mainContent;$/;"	m	class:Ui_MainWindow
mainEnd	./../android/gradlew.bat	/^:mainEnd$/;"	l
mainHLine	./../ui_mainwindow.h	/^    QFrame *mainHLine;$/;"	m	class:Ui_MainWindow
mainHead	./../ui_mainwindow.h	/^    QWidget *mainHead;$/;"	m	class:Ui_MainWindow
mainLayout	./../src/widget/friendlistwidget.h	/^    QGridLayout *mainLayout;$/;"	m	class:FriendListWidget
mainLayout	./../src/widget/netcamview.h	/^    QHBoxLayout* mainLayout;$/;"	m	class:NetCamView
mainPanel	./../ui_mainwindow.h	/^    QWidget *mainPanel;$/;"	m	class:Ui_MainWindow
mainRect	./../src/widget/callconfirmwidget.h	/^    QRect mainRect;$/;"	m	class:CallConfirmWidget
mainSplitter	./../ui_mainwindow.h	/^    QSplitter *mainSplitter;$/;"	m	class:Ui_MainWindow
makeJsonRequest	./../src/toxme.cpp	/^QByteArray Toxme::makeJsonRequest(QString json)$/;"	f	class:Toxme
makeProfileId	./../src/misc/settings.cpp	/^uint32_t Settings::makeProfileId(const QString& profile)$/;"	f	class:Settings
makeToxPortable	./../src/misc/settings.h	/^    static bool makeToxPortable;$/;"	m	class:Settings
make_tox	./../src/core.cpp	/^void Core::make_tox()$/;"	f	class:Core
makect	./../libs/filter_audio/other/fft4g.c	/^static void makect(int nc, int *ip, float *c)$/;"	f	file:
makewt	./../libs/filter_audio/other/fft4g.c	/^static void makewt(int nw, int *ip, float *w)$/;"	f	file:
manualColor	./../src/widget/maskablepixmapwidget.h	/^    bool clickable, manualColor = false;$/;"	m	class:MaskablePixmapWidget
margins	./../src/chatlog/chatlog.h	/^    QMargins margins = QMargins(10,10,10,10);$/;"	m	class:ChatLog
markAsSent	./../src/chatlog/chatmessage.cpp	/^void ChatMessage::markAsSent(const QDateTime &time)$/;"	f	class:ChatMessage
markAsSent	./../src/historykeeper.cpp	/^void HistoryKeeper::markAsSent(int m_id)$/;"	f	class:HistoryKeeper
mask	./../src/widget/maskablepixmapwidget.h	/^    QPixmap pixmap, mask, unscaled; \/\/ a lot of memory...$/;"	m	class:MaskablePixmapWidget
maskName	./../src/widget/maskablepixmapwidget.h	/^    QString maskName;$/;"	m	class:MaskablePixmapWidget
max	./../libs/filter_audio/aec/aec_core.h	/^  float max;$/;"	m	struct:Stats
max	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int max;$/;"	m	struct:__anon21
maxAnalog	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             maxAnalog;          \/\/ Maximum possible analog volume level$/;"	m	struct:__anon1
maxInit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             maxInit;            \/\/ Initial value of "max"$/;"	m	struct:__anon1
maxLevel	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             maxLevel;           \/\/ Max possible vol level, incl dig gain$/;"	m	struct:__anon1
maxLrt	./../libs/filter_audio/ns/ns_core.h	/^  float maxLrt;$/;"	m	struct:NSParaExtract_t_
maxLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 maxLrt;$/;"	m	struct:NsxInst_t_
maxSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  float maxSpecDiff;$/;"	m	struct:NSParaExtract_t_
maxSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float maxSpecFlat;$/;"	m	struct:NSParaExtract_t_
meanData	./../src/chatlog/content/filetransferwidget.h	/^    qreal meanData[TRANSFER_ROLLING_AVG_COUNT] = {0.0};$/;"	m	class:FileTransferWidget
meanIndex	./../src/chatlog/content/filetransferwidget.h	/^    uint8_t meanIndex = 0;$/;"	m	class:FileTransferWidget
meanLongTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t meanLongTerm; \/\/ Q10$/;"	m	struct:__anon3
meanShortTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t meanShortTerm; \/\/ Q10$/;"	m	struct:__anon3
mean_bit_counts	./../libs/filter_audio/other/delay_estimator.h	/^  int32_t* mean_bit_counts;$/;"	m	struct:__anon25
mean_far_spectrum	./../libs/filter_audio/other/delay_estimator_internal.h	/^  SpectrumType* mean_far_spectrum;$/;"	m	struct:__anon39
mean_near_spectrum	./../libs/filter_audio/other/delay_estimator_internal.h	/^  SpectrumType* mean_near_spectrum;$/;"	m	struct:__anon40
menu	./../src/widget/form/genericchatform.h	/^    QMenu menu;$/;"	m	class:GenericChatForm
menubar	./../ui_mainwindow.h	/^    QMenuBar *menubar;$/;"	m	class:Ui_MainWindow
message	./../src/historykeeper.h	/^        QString message;$/;"	m	struct:HistoryKeeper::HistMessage
message	./../src/widget/form/addfriendform.h	/^    QTextEdit message;$/;"	m	class:AddFriendForm
messageEdit	./../src/widget/toxuri.h	/^    QPlainTextEdit *messageEdit;$/;"	m	class:ToxURIDialog
messageID	./../src/historykeeper.h	/^    qint64 messageID;$/;"	m	class:HistoryKeeper
messageLabel	./../src/widget/form/addfriendform.h	/^    QLabel headLabel, toxIdLabel, messageLabel;$/;"	m	class:AddFriendForm
messageSendMutex	./../src/core.h	/^    QMutex fileSendMutex, messageSendMutex;$/;"	m	class:Core
messageSentResult	./../moc_core.cpp	/^void Core::messageSentResult(int _t1, const QString & _t2, int _t3)$/;"	f	class:Core
metaObject	./../moc_addfriendform.cpp	/^const QMetaObject *AddFriendForm::metaObject() const$/;"	f	class:AddFriendForm
metaObject	./../moc_adjustingscrollarea.cpp	/^const QMetaObject *AdjustingScrollArea::metaObject() const$/;"	f	class:AdjustingScrollArea
metaObject	./../moc_advancedform.cpp	/^const QMetaObject *AdvancedForm::metaObject() const$/;"	f	class:AdvancedForm
metaObject	./../moc_audio.cpp	/^const QMetaObject *Audio::metaObject() const$/;"	f	class:Audio
metaObject	./../moc_avform.cpp	/^const QMetaObject *AVForm::metaObject() const$/;"	f	class:AVForm
metaObject	./../moc_callconfirmwidget.cpp	/^const QMetaObject *CallConfirmWidget::metaObject() const$/;"	f	class:CallConfirmWidget
metaObject	./../moc_camera.cpp	/^const QMetaObject *Camera::metaObject() const$/;"	f	class:Camera
metaObject	./../moc_cameraworker.cpp	/^const QMetaObject *CameraWorker::metaObject() const$/;"	f	class:CameraWorker
metaObject	./../moc_chatform.cpp	/^const QMetaObject *ChatForm::metaObject() const$/;"	f	class:ChatForm
metaObject	./../moc_chatlog.cpp	/^const QMetaObject *ChatLog::metaObject() const$/;"	f	class:ChatLog
metaObject	./../moc_chattextedit.cpp	/^const QMetaObject *ChatTextEdit::metaObject() const$/;"	f	class:ChatTextEdit
metaObject	./../moc_core.cpp	/^const QMetaObject *Core::metaObject() const$/;"	f	class:Core
metaObject	./../moc_croppinglabel.cpp	/^const QMetaObject *CroppingLabel::metaObject() const$/;"	f	class:CroppingLabel
metaObject	./../moc_customtextdocument.cpp	/^const QMetaObject *CustomTextDocument::metaObject() const$/;"	f	class:CustomTextDocument
metaObject	./../moc_emoticonswidget.cpp	/^const QMetaObject *EmoticonsWidget::metaObject() const$/;"	f	class:EmoticonsWidget
metaObject	./../moc_filesform.cpp	/^const QMetaObject *FilesForm::metaObject() const$/;"	f	class:FilesForm
metaObject	./../moc_filetransferwidget.cpp	/^const QMetaObject *FileTransferWidget::metaObject() const$/;"	f	class:FileTransferWidget
metaObject	./../moc_friendlistwidget.cpp	/^const QMetaObject *FriendListWidget::metaObject() const$/;"	f	class:FriendListWidget
metaObject	./../moc_friendrequestdialog.cpp	/^const QMetaObject *FriendRequestDialog::metaObject() const$/;"	f	class:FriendRequestDialog
metaObject	./../moc_friendwidget.cpp	/^const QMetaObject *FriendWidget::metaObject() const$/;"	f	class:FriendWidget
metaObject	./../moc_generalform.cpp	/^const QMetaObject *GeneralForm::metaObject() const$/;"	f	class:GeneralForm
metaObject	./../moc_genericchatform.cpp	/^const QMetaObject *GenericChatForm::metaObject() const$/;"	f	class:GenericChatForm
metaObject	./../moc_genericchatroomwidget.cpp	/^const QMetaObject *GenericChatroomWidget::metaObject() const$/;"	f	class:GenericChatroomWidget
metaObject	./../moc_genericsettings.cpp	/^const QMetaObject *GenericForm::metaObject() const$/;"	f	class:GenericForm
metaObject	./../moc_group.cpp	/^const QMetaObject *Group::metaObject() const$/;"	f	class:Group
metaObject	./../moc_groupchatform.cpp	/^const QMetaObject *GroupChatForm::metaObject() const$/;"	f	class:GroupChatForm
metaObject	./../moc_groupwidget.cpp	/^const QMetaObject *GroupWidget::metaObject() const$/;"	f	class:GroupWidget
metaObject	./../moc_gui.cpp	/^const QMetaObject *GUI::metaObject() const$/;"	f	class:GUI
metaObject	./../moc_identityform.cpp	/^const QMetaObject *ClickableTE::metaObject() const$/;"	f	class:ClickableTE
metaObject	./../moc_identityform.cpp	/^const QMetaObject *IdentityForm::metaObject() const$/;"	f	class:IdentityForm
metaObject	./../moc_ipc.cpp	/^const QMetaObject *IPC::metaObject() const$/;"	f	class:IPC
metaObject	./../moc_loadhistorydialog.cpp	/^const QMetaObject *LoadHistoryDialog::metaObject() const$/;"	f	class:LoadHistoryDialog
metaObject	./../moc_maskablepixmapwidget.cpp	/^const QMetaObject *MaskablePixmapWidget::metaObject() const$/;"	f	class:MaskablePixmapWidget
metaObject	./../moc_netcamview.cpp	/^const QMetaObject *NetCamView::metaObject() const$/;"	f	class:NetCamView
metaObject	./../moc_nexus.cpp	/^const QMetaObject *Nexus::metaObject() const$/;"	f	class:Nexus
metaObject	./../moc_notificationicon.cpp	/^const QMetaObject *NotificationIcon::metaObject() const$/;"	f	class:NotificationIcon
metaObject	./../moc_offlinemsgengine.cpp	/^const QMetaObject *OfflineMsgEngine::metaObject() const$/;"	f	class:OfflineMsgEngine
metaObject	./../moc_privacyform.cpp	/^const QMetaObject *PrivacyForm::metaObject() const$/;"	f	class:PrivacyForm
metaObject	./../moc_setpassworddialog.cpp	/^const QMetaObject *SetPasswordDialog::metaObject() const$/;"	f	class:SetPasswordDialog
metaObject	./../moc_settings.cpp	/^const QMetaObject *Settings::metaObject() const$/;"	f	class:Settings
metaObject	./../moc_settingswidget.cpp	/^const QMetaObject *SettingsWidget::metaObject() const$/;"	f	class:SettingsWidget
metaObject	./../moc_smileypack.cpp	/^const QMetaObject *SmileyPack::metaObject() const$/;"	f	class:SmileyPack
metaObject	./../moc_spinner.cpp	/^const QMetaObject *Spinner::metaObject() const$/;"	f	class:Spinner
metaObject	./../moc_systemtrayicon.cpp	/^const QMetaObject *SystemTrayIcon::metaObject() const$/;"	f	class:SystemTrayIcon
metaObject	./../moc_tabcompleter.cpp	/^const QMetaObject *TabCompleter::metaObject() const$/;"	f	class:TabCompleter
metaObject	./../moc_toxdns.cpp	/^const QMetaObject *ToxDNS::metaObject() const$/;"	f	class:ToxDNS
metaObject	./../moc_toxuri.cpp	/^const QMetaObject *ToxURIDialog::metaObject() const$/;"	f	class:ToxURIDialog
metaObject	./../moc_videosource.cpp	/^const QMetaObject *VideoSource::metaObject() const$/;"	f	class:VideoSource
metaObject	./../moc_videosurface.cpp	/^const QMetaObject *VideoSurface::metaObject() const$/;"	f	class:VideoSurface
metaObject	./../moc_widget.cpp	/^const QMetaObject *Widget::metaObject() const$/;"	f	class:Widget
metadata	./../src/autoupdate.h	/^        UpdateFileMeta metadata;$/;"	m	struct:AutoUpdater::UpdateFile
metadata	./../updater/update.h	/^    UpdateFileMeta metadata;$/;"	m	struct:UpdateFile
method_call	./../src/platform/statusnotifier/statusnotifier.c	/^method_call (GDBusConnection        *conn,$/;"	f	file:
metricsMode	./../libs/filter_audio/aec/aec_core_internal.h	/^  int metricsMode;$/;"	m	struct:AecCore
metricsMode	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int16_t metricsMode;  \/\/ default kAecFalse$/;"	m	struct:__anon20
micButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
micGainIdx	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             micGainIdx;         \/\/ Gain index of mic level to increase slowly$/;"	m	struct:__anon1
micLvlSat	./../libs/filter_audio/agc/analog_agc.h	/^    uint8_t             micLvlSat;$/;"	m	struct:__anon1
micMuteToggle	./../moc_chatform.cpp	/^void ChatForm::micMuteToggle(int _t1)$/;"	f	class:ChatForm
micMuteToggle	./../src/coreav.cpp	/^void Core::micMuteToggle(int callId)$/;"	f	class:Core
micRef	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             micRef;             \/\/ Remember ref. mic level for virtual mic$/;"	m	struct:__anon1
micVol	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             micVol;             \/\/ Remember volume between frames$/;"	m	struct:__anon1
microphoneLabel	./../ui_avsettings.h	/^    QLabel *microphoneLabel;$/;"	m	class:Ui_AVSettings
microphoneSlider	./../ui_avsettings.h	/^    QSlider *microphoneSlider;$/;"	m	class:Ui_AVSettings
min	./../libs/filter_audio/aec/aec_core.h	/^  float min;$/;"	m	struct:Stats
min	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int min;$/;"	m	struct:__anon21
minLevel	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             minLevel;           \/\/ Minimum possible volume level$/;"	m	struct:__anon1
minLrt	./../libs/filter_audio/ns/ns_core.h	/^  float minLrt;$/;"	m	struct:NSParaExtract_t_
minLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 minLrt;$/;"	m	struct:NsxInst_t_
minNorm	./../libs/filter_audio/ns/nsx_core.h	/^  int                     minNorm;  \/\/ Smallest normalization factor.$/;"	m	struct:NsxInst_t_
minOutput	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             minOutput;          \/\/ Minimum output volume level$/;"	m	struct:__anon1
minSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  float minSpecDiff;$/;"	m	struct:NSParaExtract_t_
minSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float minSpecFlat;$/;"	m	struct:NSParaExtract_t_
minimizeOnClose	./../src/misc/settings.h	/^    bool minimizeOnClose;$/;"	m	class:Settings
minimizeToTray	./../src/misc/settings.h	/^    bool minimizeToTray;$/;"	m	class:Settings
minimizeToTray	./../ui_generalsettings.h	/^    QCheckBox *minimizeToTray;$/;"	m	class:Ui_GeneralSettings
minimumSize	./../src/misc/flowlayout.cpp	/^QSize FlowLayout::minimumSize() const$/;"	f	class:FlowLayout
minimumSizeHint	./../src/widget/croppinglabel.cpp	/^QSize CroppingLabel::minimumSizeHint() const$/;"	f	class:CroppingLabel
minimum_probability	./../libs/filter_audio/other/delay_estimator.h	/^  int32_t minimum_probability;$/;"	m	struct:__anon25
minlevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  float minlevel;$/;"	m	struct:PowerLevel
mm_pow_ps	./../libs/filter_audio/aec/aec_core_sse2.c	/^static __m128 mm_pow_ps(__m128 a, __m128 b) {$/;"	f	file:
modelUpdate	./../libs/filter_audio/ns/nsx_core.h	/^  int                     modelUpdate;$/;"	m	struct:NsxInst_t_
modelUpdatePars	./../libs/filter_audio/ns/ns_core.h	/^  int modelUpdatePars[4];  \/\/ Parameters for updating or estimating.$/;"	m	struct:NSinst_t_
mouseDoubleClickEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::mouseDoubleClickEvent(QMouseEvent *ev)$/;"	f	class:ChatLog
mouseMoveEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::mouseMoveEvent(QMouseEvent* ev)$/;"	f	class:ChatLog
mouseMoveEvent	./../src/widget/friendwidget.cpp	/^void FriendWidget::mouseMoveEvent(QMouseEvent *ev)$/;"	f	class:FriendWidget
mousePressEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::mousePressEvent(QMouseEvent* ev)$/;"	f	class:ChatLog
mousePressEvent	./../src/chatlog/content/text.cpp	/^void Text::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Text
mousePressEvent	./../src/widget/emoticonswidget.cpp	/^void EmoticonsWidget::mousePressEvent(QMouseEvent*)$/;"	f	class:EmoticonsWidget
mousePressEvent	./../src/widget/friendwidget.cpp	/^void FriendWidget::mousePressEvent(QMouseEvent *ev)$/;"	f	class:FriendWidget
mousePressEvent	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::mousePressEvent(QMouseEvent*)$/;"	f	class:MaskablePixmapWidget
mouseReleaseEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::mouseReleaseEvent(QMouseEvent* ev)$/;"	f	class:ChatLog
mouseReleaseEvent	./../src/chatlog/content/text.cpp	/^void Text::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Text
mouseReleaseEvent	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::mouseReleaseEvent(QMouseEvent *e)$/;"	f	class:CroppingLabel
mouseReleaseEvent	./../src/widget/emoticonswidget.cpp	/^void EmoticonsWidget::mouseReleaseEvent(QMouseEvent *ev)$/;"	f	class:EmoticonsWidget
mouseReleaseEvent	./../src/widget/form/settings/identityform.h	/^    void mouseReleaseEvent(QMouseEvent*) {emit clicked();}    $/;"	f	class:ClickableTE
mouseReleaseEvent	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::mouseReleaseEvent(QMouseEvent*)$/;"	f	class:GenericChatroomWidget
moveBy	./../src/chatlog/chatline.cpp	/^void ChatLine::moveBy(qreal deltaY)$/;"	f	class:ChatLine
moveWidget	./../src/widget/friendlistwidget.cpp	/^void FriendListWidget::moveWidget(QWidget *w, Status s, int hasNewEvents)$/;"	f	class:FriendListWidget
msInSndCardBuf	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short msInSndCardBuf;$/;"	m	struct:__anon23
msInSndCardBuf	./../libs/filter_audio/filter_audio.c	/^    int16_t msInSndCardBuf;$/;"	m	struct:__anon42	file:
msTooHigh	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             msTooHigh;          \/\/ Milliseconds of speech at a too high level$/;"	m	struct:__anon1
msTooLow	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             msTooLow;           \/\/ Milliseconds of speech at a too low level$/;"	m	struct:__anon1
msZero	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             msZero;             \/\/ Milliseconds of zero input$/;"	m	struct:__anon1
msecSpeechInnerChange	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             msecSpeechInnerChange;\/\/ Min ms of speech between volume changes$/;"	m	struct:__anon1
msecSpeechOuterChange	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             msecSpeechOuterChange;\/\/ Min ms of speech between volume changes$/;"	m	struct:__anon1
msg	./../src/offlinemsgengine.h	/^        ChatMessage::Ptr msg;$/;"	m	struct:OfflineMsgEngine::MsgPtr
msgEdit	./../src/widget/form/genericchatform.h	/^    ChatTextEdit *msgEdit;$/;"	m	class:GenericChatForm
msgEdit	./../src/widget/form/tabcompleter.h	/^    ChatTextEdit* msgEdit;$/;"	m	class:TabCompleter
mult	./../libs/filter_audio/aec/aec_core_internal.h	/^  int mult;  \/\/ sampling frequency multiple$/;"	m	struct:AecCore
muteGuardMs	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             muteGuardMs;        \/\/ Counter to prevent mute action$/;"	m	struct:__anon1
muteMic	./../src/coreav.h	/^    bool muteMic;$/;"	m	struct:ToxCall
muteMic	./../src/coreav.h	/^    bool muteMic;$/;"	m	struct:ToxGroupCall
muteVol	./../src/coreav.h	/^    bool muteVol;$/;"	m	struct:ToxCall
muteVol	./../src/coreav.h	/^    bool muteVol;$/;"	m	struct:ToxGroupCall
mutex	./../src/main.cpp	/^static QMutex mutex;$/;"	v	file:
mutex	./../src/offlinemsgengine.h	/^    QMutex mutex;$/;"	m	class:OfflineMsgEngine
mutex	./../src/video/camera.h	/^    QMutex mutex;$/;"	m	class:Camera
mutex	./../src/video/cameraworker.h	/^    QMutex mutex;$/;"	m	class:CameraWorker
mutex	./../src/widget/videosurface.h	/^    QMutex mutex;$/;"	m	class:VideoSurface
myMessageHandler	./../src/main.cpp	/^void myMessageHandler(QtMsgType type, const QMessageLogContext& ctxt, const QString& msg)$/;"	f
myProfile	./../ui_mainwindow.h	/^    QHBoxLayout *myProfile;$/;"	m	class:Ui_MainWindow
nPeers	./../src/group.h	/^    int nPeers;$/;"	m	class:Group
name	./../src/corestructs.h	/^    QString name;$/;"	m	struct:DhtServer
name	./../src/ipc.h	/^        char name[16];$/;"	m	struct:IPC::IPCEvent
name	./../src/misc/settings.h	/^        QString name;$/;"	m	struct:Settings::DhtServer
name	./../src/toxdns.h	/^        const char* name; \/\/\/< Hostname of the server, e.g. toxme.se$/;"	m	struct:ToxDNS::tox3_server
nameLabel	./../src/widget/form/genericchatform.h	/^    CroppingLabel *nameLabel;$/;"	m	class:GenericChatForm
nameLabel	./../src/widget/form/settingswidget.h	/^    QLabel *nameLabel, *imgLabel;$/;"	m	class:SettingsWidget
nameLabel	./../src/widget/genericchatroomwidget.h	/^    CroppingLabel* nameLabel, * statusMessageLabel;$/;"	m	class:GenericChatroomWidget
nameLabel	./../ui_mainwindow.h	/^    CroppingLabel *nameLabel;$/;"	m	class:Ui_MainWindow
nameMention	./../src/widget/androidgui.h	/^    QRegExp nameMention, sanitizedNameMention;$/;"	m	class:AndroidGUI
nameMention	./../src/widget/widget.h	/^    QRegExp nameMention, sanitizedNameMention;$/;"	m	class:Widget
name_acquired	./../src/platform/statusnotifier/statusnotifier.c	/^name_acquired (GDBusConnection *conn, const gchar *name, gpointer data)$/;"	f	file:
name_lost	./../src/platform/statusnotifier/statusnotifier.c	/^name_lost (GDBusConnection *conn, const gchar *name, gpointer data)$/;"	f	file:
namesListLayout	./../src/widget/form/groupchatform.h	/^    FlowLayout* namesListLayout;$/;"	m	class:GroupChatForm
nearFile	./../libs/filter_audio/aec/aec_core_internal.h	/^  rtc_WavWriter* nearFile;$/;"	m	struct:AecCore
nearFrBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* nearFrBuf;$/;"	m	struct:AecCore
nearFrBufH	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* nearFrBufH;$/;"	m	struct:AecCore
near_history_size	./../libs/filter_audio/other/delay_estimator.h	/^  int near_history_size;$/;"	m	struct:__anon25
near_spectrum_initialized	./../libs/filter_audio/other/delay_estimator_internal.h	/^  int near_spectrum_initialized;$/;"	m	struct:__anon40
nearlevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  PowerLevel nearlevel;$/;"	m	struct:AecCore
netcam	./../src/widget/form/chatform.h	/^    NetCamView* netcam;$/;"	m	class:ChatForm
newButton	./../ui_identitysettings.h	/^    QPushButton *newButton;$/;"	m	class:Ui_IdentitySettings
newFrameAvailable	./../moc_cameraworker.cpp	/^void CameraWorker::newFrameAvailable(const VideoFrame & _t1)$/;"	f	class:CameraWorker
newMessageAlert	./../src/widget/widget.cpp	/^void Widget::newMessageAlert(GenericChatroomWidget* chat)$/;"	f	class:Widget
new_filter_audio	./../libs/filter_audio/filter_audio.c	/^Filter_Audio *new_filter_audio(uint32_t fs)$/;"	f
nextCompletion	./../src/widget/form/tabcompleter.h	/^    QMap<SortableString, QString>::Iterator nextCompletion;$/;"	m	class:TabCompleter
nextContact	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::nextContact()$/;"	f	class:GenericChatForm
nextContact	./../src/widget/widget.cpp	/^void Widget::nextContact()$/;"	f	class:Widget
nickSuffix	./../src/widget/form/tabcompleter.cpp	/^const QString TabCompleter::nickSuffix = QString(": ");$/;"	m	class:TabCompleter	file:
nickSuffix	./../src/widget/form/tabcompleter.h	/^    const static QString nickSuffix;$/;"	m	class:TabCompleter
nlpMode	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int16_t nlpMode;      \/\/ default kAecNlpModerate$/;"	m	struct:__anon20
nlp_mode	./../libs/filter_audio/aec/aec_core_internal.h	/^  int nlp_mode;$/;"	m	struct:AecCore
nlpoutlevel	./../libs/filter_audio/aec/aec_core_internal.h	/^  PowerLevel nlpoutlevel;$/;"	m	struct:AecCore
noSpam	./../src/corestructs.h	/^    QString noSpam;$/;"	m	struct:ToxID
noise	./../libs/filter_audio/ns/ns_core.h	/^  float noise[HALF_ANAL_BLOCKL];  \/\/ Noise spectrum from current frame.$/;"	m	struct:NSinst_t_
noiseEstCounter	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 noiseEstCounter[SIMULT];$/;"	m	struct:NsxInst_t_
noiseEstCtr	./../libs/filter_audio/aec/aec_core_internal.h	/^  int noiseEstCtr;$/;"	m	struct:AecCore
noiseEstDensity	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 noiseEstDensity[SIMULT* HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
noiseEstLogQuantile	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 noiseEstLogQuantile[SIMULT* HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
noiseEstQuantile	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 noiseEstQuantile[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
noisePow	./../libs/filter_audio/aec/aec_core_internal.h	/^  float* noisePow;$/;"	m	struct:AecCore
noisePrev	./../libs/filter_audio/ns/ns_core.h	/^  float noisePrev[HALF_ANAL_BLOCKL];  \/\/ Noise spectrum from previous frame.$/;"	m	struct:NSinst_t_
noiseSupFilter	./../libs/filter_audio/ns/nsx_core.h	/^  uint16_t                noiseSupFilter[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
noise_enabled	./../libs/filter_audio/filter_audio.c	/^    int noise_enabled;$/;"	m	struct:__anon42	file:
noise_sup_x	./../libs/filter_audio/filter_audio.c	/^    NsxHandle *noise_sup_x;$/;"	m	struct:__anon42	file:
normData	./../libs/filter_audio/ns/nsx_core.h	/^  int                     normData;$/;"	m	struct:NsxInst_t_
normal_error_threshold	./../libs/filter_audio/aec/aec_core_internal.h	/^  float normal_error_threshold;  \/\/ error threshold$/;"	m	struct:AecCore
normal_mu	./../libs/filter_audio/aec/aec_core_internal.h	/^  float normal_mu;               \/\/ stepsize$/;"	m	struct:AecCore
nospamGroup	./../ui_privacysettings.h	/^    QGroupBox *nospamGroup;$/;"	m	class:Ui_PrivacySettings
nospamLineEdit	./../ui_privacysettings.h	/^    QLineEdit *nospamLineEdit;$/;"	m	class:Ui_PrivacySettings
notify	./../src/platform/statusnotifier/statusnotifier.c	158;"	d	file:
numBlocksMicLvlSat	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             numBlocksMicLvlSat;$/;"	m	struct:__anon1
num_partitions	./../libs/filter_audio/aec/aec_core_internal.h	/^  int num_partitions;$/;"	m	struct:AecCore
nusersLabel	./../src/widget/form/groupchatform.h	/^    QLabel *nusersLabel;$/;"	m	class:GroupChatForm
offlineEngine	./../src/widget/form/chatform.h	/^    OfflineMsgEngine *offlineEngine;$/;"	m	class:ChatForm
offlineMsgTimer	./../src/widget/widget.h	/^    QTimer *timer, *offlineMsgTimer;$/;"	m	class:Widget
offlineTimeout	./../src/offlinemsgengine.cpp	/^const int OfflineMsgEngine::offlineTimeout = 2000;$/;"	m	class:OfflineMsgEngine	file:
offlineTimeout	./../src/offlinemsgengine.h	/^    static const int offlineTimeout;$/;"	m	class:OfflineMsgEngine
oldversion	./../tools/update-server/deployUpdateS3.py	/^oldversion = Key(bucket)$/;"	v
omega	./../android/gradlew.bat	/^:omega$/;"	l
onAction	./../src/core.cpp	/^void Core::onAction(Tox*\/* tox*\/, int friendId, const uint8_t *cMessage, uint16_t cMessageSize, void *core)$/;"	f	class:Core
onAddClicked	./../src/widget/widget.cpp	/^void Widget::onAddClicked()$/;"	f	class:Widget
onAnswerCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onAnswerCallTriggered()$/;"	f	class:ChatForm
onAttachClicked	./../src/widget/form/chatform.cpp	/^void ChatForm::onAttachClicked()$/;"	f	class:ChatForm
onAutoAcceptFileChange	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onAutoAcceptFileChange()$/;"	f	class:GeneralForm
onAutoAwayChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onAutoAwayChanged()$/;"	f	class:GeneralForm
onAutoSaveDirChange	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onAutoSaveDirChange()$/;"	f	class:GeneralForm
onAutorunUpdated	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onAutorunUpdated()$/;"	f	class:GeneralForm
onAvCallFailed	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvCallFailed(int FriendId)$/;"	f	class:ChatForm
onAvCancel	./../src/coreav.cpp	/^void Core::onAvCancel(void* _toxav, int32_t callId, void* core)$/;"	f	class:Core
onAvCancel	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvCancel(int FriendId, int)$/;"	f	class:ChatForm
onAvEnd	./../src/coreav.cpp	/^void Core::onAvEnd(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvEnd	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvEnd(int FriendId, int)$/;"	f	class:ChatForm
onAvEnding	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvEnding(int FriendId, int)$/;"	f	class:ChatForm
onAvInvite	./../src/coreav.cpp	/^void Core::onAvInvite(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvInvite	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvInvite(int FriendId, int CallId, bool video)$/;"	f	class:ChatForm
onAvMediaChange	./../src/coreav.cpp	/^void Core::onAvMediaChange(void* toxav, int32_t callId, void* core)$/;"	f	class:Core
onAvMediaChange	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvMediaChange(int FriendId, int CallId, bool video)$/;"	f	class:ChatForm
onAvPeerTimeout	./../src/coreav.cpp	/^void Core::onAvPeerTimeout(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvPeerTimeout	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvPeerTimeout(int FriendId, int)$/;"	f	class:ChatForm
onAvReject	./../src/coreav.cpp	/^void Core::onAvReject(void* _toxav, int32_t callId, void* core)$/;"	f	class:Core
onAvRejected	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvRejected(int FriendId, int)$/;"	f	class:ChatForm
onAvRequestTimeout	./../src/coreav.cpp	/^void Core::onAvRequestTimeout(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvRequestTimeout	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvRequestTimeout(int FriendId, int)$/;"	f	class:ChatForm
onAvRinging	./../src/coreav.cpp	/^void Core::onAvRinging(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvRinging	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvRinging(int FriendId, int CallId, bool video)$/;"	f	class:ChatForm
onAvStart	./../src/coreav.cpp	/^void Core::onAvStart(void* _toxav, int32_t call_index, void* core)$/;"	f	class:Core
onAvStart	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvStart(int FriendId, int CallId, bool video)$/;"	f	class:ChatForm
onAvStarting	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvStarting(int FriendId, int CallId, bool video)$/;"	f	class:ChatForm
onAvatarChange	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvatarChange(int FriendId, const QPixmap &pic)$/;"	f	class:ChatForm
onAvatarChange	./../src/widget/friendwidget.cpp	/^void FriendWidget::onAvatarChange(int FriendId, const QPixmap& pic)$/;"	f	class:FriendWidget
onAvatarClicked	./../src/widget/widget.cpp	/^void Widget::onAvatarClicked()$/;"	f	class:Widget
onAvatarDataCallback	./../src/core.cpp	/^void Core::onAvatarDataCallback(Tox*, int32_t friendnumber, uint8_t,$/;"	f	class:Core
onAvatarInfoCallback	./../src/core.cpp	/^void Core::onAvatarInfoCallback(Tox*, int32_t friendnumber, uint8_t format,$/;"	f	class:Core
onAvatarRemoved	./../src/widget/form/chatform.cpp	/^void ChatForm::onAvatarRemoved(int FriendId)$/;"	f	class:ChatForm
onAvatarRemoved	./../src/widget/friendwidget.cpp	/^void FriendWidget::onAvatarRemoved(int FriendId)$/;"	f	class:FriendWidget
onBadProxyCore	./../src/widget/widget.cpp	/^void Widget::onBadProxyCore()$/;"	f	class:Widget
onCallClicked	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::onCallClicked()$/;"	f	class:GroupChatForm
onCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onCallTriggered()$/;"	f	class:ChatForm
onCancelCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onCancelCallTriggered()$/;"	f	class:ChatForm
onChatContextMenuRequested	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onChatContextMenuRequested(QPoint pos)$/;"	f	class:GenericChatForm
onChatroomWidgetClicked	./../src/widget/widget.cpp	/^void Widget::onChatroomWidgetClicked(GenericChatroomWidget *widget)$/;"	f	class:Widget
onCheckUpdateChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onCheckUpdateChanged()$/;"	f	class:GeneralForm
onCompactChanged	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::onCompactChanged(bool _compact)$/;"	f	class:GenericChatroomWidget
onCompactLayout	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onCompactLayout()$/;"	f	class:GeneralForm
onConnected	./../src/widget/androidgui.cpp	/^void AndroidGUI::onConnected()$/;"	f	class:AndroidGUI
onConnected	./../src/widget/widget.cpp	/^void Widget::onConnected()$/;"	f	class:Widget
onConnectionStatusChanged	./../src/core.cpp	/^void Core::onConnectionStatusChanged(Tox*\/* tox*\/, int friendId, uint8_t status, void* core)$/;"	f	class:Core
onCopyLogClicked	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onCopyLogClicked()$/;"	f	class:GenericChatForm
onDbSyncTypeUpdated	./../src/widget/form/settings/advancedform.cpp	/^void AdvancedForm::onDbSyncTypeUpdated()$/;"	f	class:AdvancedForm
onDeleteClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onDeleteClicked()$/;"	f	class:IdentityForm
onDisconnected	./../src/widget/androidgui.cpp	/^void AndroidGUI::onDisconnected()$/;"	f	class:AndroidGUI
onDisconnected	./../src/widget/widget.cpp	/^void Widget::onDisconnected()$/;"	f	class:Widget
onEmoteButtonClicked	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onEmoteButtonClicked()$/;"	f	class:GenericChatForm
onEmoteInsertRequested	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onEmoteInsertRequested(QString str)$/;"	f	class:GenericChatForm
onEmoticonSizeChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onEmoticonSizeChanged()$/;"	f	class:GeneralForm
onEmptyGroupCreated	./../src/widget/widget.cpp	/^void Widget::onEmptyGroupCreated(int groupId)$/;"	f	class:Widget
onEnableCallButtons	./../src/widget/form/chatform.cpp	/^void ChatForm::onEnableCallButtons()$/;"	f	class:ChatForm
onEnableIPv6Updated	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onEnableIPv6Updated()$/;"	f	class:GeneralForm
onEnableLoggingUpdated	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::onEnableLoggingUpdated()$/;"	f	class:PrivacyForm
onEncryptLogsUpdated	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::onEncryptLogsUpdated()$/;"	f	class:PrivacyForm
onEncryptToxUpdated	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::onEncryptToxUpdated()$/;"	f	class:PrivacyForm
onEventIconTick	./../src/widget/widget.cpp	/^void Widget::onEventIconTick()$/;"	f	class:Widget
onExportClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onExportClicked()$/;"	f	class:IdentityForm
onFailedToStartCore	./../src/widget/widget.cpp	/^void Widget::onFailedToStartCore()$/;"	f	class:Widget
onFauxOfflineMessaging	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onFauxOfflineMessaging()$/;"	f	class:GeneralForm
onFileActivated	./../src/widget/form/filesform.cpp	/^void FilesForm::onFileActivated(QListWidgetItem* item)$/;"	f	class:FilesForm
onFileControlCallback	./../src/core.cpp	/^void Core::onFileControlCallback(Tox* tox, int32_t friendnumber, uint8_t receive_send, uint8_t filenumber,$/;"	f	class:Core
onFileDataCallback	./../src/core.cpp	/^void Core::onFileDataCallback(Tox*, int32_t friendnumber, uint8_t filenumber, const uint8_t *data, uint16_t length, void *core)$/;"	f	class:Core
onFileDownloadComplete	./../src/widget/form/filesform.cpp	/^void FilesForm::onFileDownloadComplete(const QString& path)$/;"	f	class:FilesForm
onFileRecvRequest	./../src/widget/form/chatform.cpp	/^void ChatForm::onFileRecvRequest(ToxFile file)$/;"	f	class:ChatForm
onFileSendFailed	./../src/widget/form/chatform.cpp	/^void ChatForm::onFileSendFailed(int FriendId, const QString &fname)$/;"	f	class:ChatForm
onFileSendRequestCallback	./../src/core.cpp	/^void Core::onFileSendRequestCallback(Tox*, int32_t friendnumber, uint8_t filenumber, uint64_t filesize,$/;"	f	class:Core
onFileTransferAccepted	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::onFileTransferAccepted(ToxFile file)$/;"	f	class:FileTransferWidget
onFileTransferCancelled	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::onFileTransferCancelled(ToxFile file)$/;"	f	class:FileTransferWidget
onFileTransferFinished	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::onFileTransferFinished(ToxFile file)$/;"	f	class:FileTransferWidget
onFileTransferFinished	./../src/core.cpp	/^void Core::onFileTransferFinished(ToxFile file)$/;"	f	class:Core
onFileTransferInfo	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::onFileTransferInfo(ToxFile file)$/;"	f	class:FileTransferWidget
onFileTransferPaused	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::onFileTransferPaused(ToxFile file)$/;"	f	class:FileTransferWidget
onFileUploadComplete	./../src/widget/form/filesform.cpp	/^void FilesForm::onFileUploadComplete(const QString& path)$/;"	f	class:FilesForm
onFilterAudioToggled	./../src/widget/form/settings/avform.cpp	/^void AVForm::onFilterAudioToggled(bool filterAudio)$/;"	f	class:AVForm
onFriendMessage	./../src/core.cpp	/^void Core::onFriendMessage(Tox*\/* tox*\/, int friendId, const uint8_t* cMessage, uint16_t cMessageSize, void* core)$/;"	f	class:Core
onFriendMessageReceived	./../src/widget/widget.cpp	/^void Widget::onFriendMessageReceived(int friendId, const QString& message, bool isAction)$/;"	f	class:Widget
onFriendNameChange	./../src/core.cpp	/^void Core::onFriendNameChange(Tox*\/* tox*\/, int friendId, const uint8_t* cName, uint16_t cNameSize, void* core)$/;"	f	class:Core
onFriendRequest	./../src/core.cpp	/^void Core::onFriendRequest(Tox*\/* tox*\/, const uint8_t* cUserId, const uint8_t* cMessage, uint16_t cMessageSize, void* core)$/;"	f	class:Core
onFriendRequestReceived	./../src/widget/widget.cpp	/^void Widget::onFriendRequestReceived(const QString& userId, const QString& message)$/;"	f	class:Widget
onFriendStatusChanged	./../src/widget/widget.cpp	/^void Widget::onFriendStatusChanged(int friendId, Status status)$/;"	f	class:Widget
onFriendStatusMessageChanged	./../src/widget/widget.cpp	/^void Widget::onFriendStatusMessageChanged(int friendId, const QString& message)$/;"	f	class:Widget
onFriendTypingChange	./../src/core.cpp	/^void Core::onFriendTypingChange(Tox*\/* tox*\/, int friendId, uint8_t isTyping, void *core)$/;"	f	class:Core
onFriendTypingChanged	./../src/widget/widget.cpp	/^void Widget::onFriendTypingChanged(int friendId, bool isTyping)$/;"	f	class:Widget
onFriendUsernameChanged	./../src/widget/widget.cpp	/^void Widget::onFriendUsernameChanged(int friendId, const QString& username)$/;"	f	class:Widget
onGroupAction	./../src/core.cpp	/^void Core::onGroupAction(Tox*, int groupnumber, int peernumber, const uint8_t *action, uint16_t length, void* _core)$/;"	f	class:Core
onGroupClicked	./../src/widget/widget.cpp	/^void Widget::onGroupClicked()$/;"	f	class:Widget
onGroupInvite	./../src/core.cpp	/^void Core::onGroupInvite(Tox*, int friendnumber, uint8_t type, const uint8_t *data, uint16_t length,void *core)$/;"	f	class:Core
onGroupInviteReceived	./../src/widget/widget.cpp	/^void Widget::onGroupInviteReceived(int32_t friendId, uint8_t type, QByteArray invite)$/;"	f	class:Widget
onGroupMessage	./../src/core.cpp	/^void Core::onGroupMessage(Tox*, int groupnumber, int peernumber, const uint8_t * message, uint16_t length, void *_core)$/;"	f	class:Core
onGroupMessageReceived	./../src/widget/widget.cpp	/^void Widget::onGroupMessageReceived(int groupnumber, int peernumber, const QString& message, bool isAction)$/;"	f	class:Widget
onGroupNamelistChange	./../src/core.cpp	/^void Core::onGroupNamelistChange(Tox*, int groupnumber, int peernumber, uint8_t change, void *core)$/;"	f	class:Core
onGroupNamelistChanged	./../src/widget/widget.cpp	/^void Widget::onGroupNamelistChanged(int groupnumber, int peernumber, uint8_t Change)$/;"	f	class:Widget
onGroupSendResult	./../src/widget/widget.cpp	/^void Widget::onGroupSendResult(int groupId, const QString& message, int result)$/;"	f	class:Widget
onGroupTitleChange	./../src/core.cpp	/^void Core::onGroupTitleChange(Tox*, int groupnumber, int peernumber, const uint8_t* title, uint8_t len, void* _core)$/;"	f	class:Core
onGroupTitleChanged	./../src/widget/widget.cpp	/^void Widget::onGroupTitleChanged(int groupnumber, const QString& author, const QString& title)$/;"	f	class:Widget
onHangupCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onHangupCallTriggered()$/;"	f	class:ChatForm
onIconClick	./../src/widget/widget.cpp	/^void Widget::onIconClick(QSystemTrayIcon::ActivationReason reason)$/;"	f	class:Widget
onImportClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onImportClicked()$/;"	f	class:IdentityForm
onInDevChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::onInDevChanged(const QString &deviceDescriptor)$/;"	f	class:AVForm
onLoadClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onLoadClicked()$/;"	f	class:IdentityForm
onLoadHistory	./../src/widget/form/chatform.cpp	/^void ChatForm::onLoadHistory()$/;"	f	class:ChatForm
onMakeToxPortableUpdated	./../src/widget/form/settings/advancedform.cpp	/^void AdvancedForm::onMakeToxPortableUpdated()$/;"	f	class:AdvancedForm
onMessageLayout	./../ui_generalsettings.h	/^    QHBoxLayout *onMessageLayout;$/;"	m	class:Ui_GeneralSettings
onMessageSendResult	./../src/widget/widget.cpp	/^void Widget::onMessageSendResult(int friendId, const QString& message, int messageId)$/;"	f	class:Widget
onMicMuteToggle	./../src/widget/form/chatform.cpp	/^void ChatForm::onMicMuteToggle()$/;"	f	class:ChatForm
onMicMuteToggle	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::onMicMuteToggle()$/;"	f	class:GroupChatForm
onNewClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onNewClicked()$/;"	f	class:IdentityForm
onNewFrameAvailable	./../src/video/camera.cpp	/^void Camera::onNewFrameAvailable(const VideoFrame &frame)$/;"	f	class:Camera
onNewFrameAvailable	./../src/widget/videosurface.cpp	/^void VideoSurface::onNewFrameAvailable(const VideoFrame& newFrame)$/;"	f	class:VideoSurface
onNospamEdit	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::onNospamEdit()$/;"	f	class:PrivacyForm
onOutDevChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::onOutDevChanged(const QString& deviceDescriptor)$/;"	f	class:AVForm
onPageButtonClicked	./../src/widget/emoticonswidget.cpp	/^void EmoticonsWidget::onPageButtonClicked()$/;"	f	class:EmoticonsWidget
onPasswordEdit	./../src/widget/form/setpassworddialog.cpp	/^void SetPasswordDialog::onPasswordEdit()$/;"	f	class:SetPasswordDialog
onPropProbingFinished	./../src/widget/form/settings/avform.cpp	/^void AVForm::onPropProbingFinished(Camera::Prop prop, double val)$/;"	f	class:AVForm
onProxyAddrEdited	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onProxyAddrEdited()$/;"	f	class:GeneralForm
onProxyPortEdited	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onProxyPortEdited(int port)$/;"	f	class:GeneralForm
onReadReceiptCallback	./../src/core.cpp	/^void Core::onReadReceiptCallback(Tox*, int32_t friendnumber, uint32_t receipt, void *core)$/;"	f	class:Core
onReceiptRecieved	./../src/widget/widget.cpp	/^void Widget::onReceiptRecieved(int friendId, int receipt)$/;"	f	class:Widget
onReconnectClicked	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onReconnectClicked()$/;"	f	class:GeneralForm
onRejectCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onRejectCallTriggered()$/;"	f	class:ChatForm
onRenameClicked	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onRenameClicked()$/;"	f	class:IdentityForm
onResProbingFinished	./../src/widget/form/settings/avform.cpp	/^void AVForm::onResProbingFinished(QList<QSize> res)$/;"	f	class:AVForm
onSaveLogClicked	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onSaveLogClicked()$/;"	f	class:GenericChatForm
onSelectAllClicked	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::onSelectAllClicked()$/;"	f	class:GenericChatForm
onSelectionTimerTimeout	./../src/chatlog/chatlog.cpp	/^void ChatLog::onSelectionTimerTimeout()$/;"	f	class:ChatLog
onSelfAvatarLoaded	./../src/widget/androidgui.cpp	/^void AndroidGUI::onSelfAvatarLoaded(const QPixmap& pic)$/;"	f	class:AndroidGUI
onSelfAvatarLoaded	./../src/widget/widget.cpp	/^void Widget::onSelfAvatarLoaded(const QPixmap& pic)$/;"	f	class:Widget
onSendTriggered	./../src/widget/form/addfriendform.cpp	/^void AddFriendForm::onSendTriggered()$/;"	f	class:AddFriendForm
onSendTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onSendTriggered()$/;"	f	class:ChatForm
onSendTriggered	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::onSendTriggered()$/;"	f	class:GroupChatForm
onSetAutostartInTray	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetAutostartInTray()$/;"	f	class:GeneralForm
onSetCloseToTray	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetCloseToTray()$/;"	f	class:GeneralForm
onSetGroupAlwaysNotify	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetGroupAlwaysNotify()$/;"	f	class:GeneralForm
onSetLightTrayIcon	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetLightTrayIcon()$/;"	f	class:GeneralForm
onSetMinimizeToTray	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetMinimizeToTray()$/;"	f	class:GeneralForm
onSetShowInFront	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetShowInFront()$/;"	f	class:GeneralForm
onSetShowSystemTray	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetShowSystemTray()$/;"	f	class:GeneralForm
onSetShowSystemTray	./../src/widget/widget.cpp	/^void Widget::onSetShowSystemTray(bool newValue)$/;"	f	class:Widget
onSetStatusChange	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSetStatusChange()$/;"	f	class:GeneralForm
onSettingsClicked	./../src/widget/widget.cpp	/^void Widget::onSettingsClicked()$/;"	f	class:Widget
onShowWindowChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onShowWindowChanged()$/;"	f	class:GeneralForm
onSmileyBrowserIndexChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onSmileyBrowserIndexChanged(int index)$/;"	f	class:GeneralForm
onSmileyClicked	./../src/widget/emoticonswidget.cpp	/^void EmoticonsWidget::onSmileyClicked()$/;"	f	class:EmoticonsWidget
onSmileyPackChanged	./../src/misc/smileypack.cpp	/^void SmileyPack::onSmileyPackChanged()$/;"	f	class:SmileyPack
onSplitterMoved	./../src/widget/widget.cpp	/^void Widget::onSplitterMoved(int pos, int index)$/;"	f	class:Widget
onStart	./../src/video/cameraworker.cpp	/^void CameraWorker::onStart()$/;"	f	class:CameraWorker
onStatusMessageChanged	./../src/core.cpp	/^void Core::onStatusMessageChanged(Tox*\/* tox*\/, int friendId, const uint8_t* cMessage, uint16_t cMessageSize, void* core)$/;"	f	class:Core
onStatusMessageChanged	./../src/widget/androidgui.cpp	/^void AndroidGUI::onStatusMessageChanged(const QString& newStatusMessage, const QString& oldStatusMessage)$/;"	f	class:AndroidGUI
onStatusMessageChanged	./../src/widget/widget.cpp	/^void Widget::onStatusMessageChanged(const QString& newStatusMessage, const QString& oldStatusMessage)$/;"	f	class:Widget
onStatusMessageEdited	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onStatusMessageEdited()$/;"	f	class:IdentityForm
onStatusSet	./../src/widget/androidgui.cpp	/^void AndroidGUI::onStatusSet(Status status)$/;"	f	class:AndroidGUI
onStatusSet	./../src/widget/widget.cpp	/^void Widget::onStatusSet(Status status)$/;"	f	class:Widget
onStyleSelected	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onStyleSelected(QString style)$/;"	f	class:GeneralForm
onTabChanged	./../src/widget/form/settingswidget.cpp	/^void SettingsWidget::onTabChanged(int index)$/;"	f	class:SettingsWidget
onTextEditChanged	./../src/widget/form/chatform.cpp	/^void ChatForm::onTextEditChanged()$/;"	f	class:ChatForm
onThemeColorChanged	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onThemeColorChanged(int)$/;"	f	class:GeneralForm
onTimestampSelected	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onTimestampSelected(int index)$/;"	f	class:GeneralForm
onTransferClicked	./../src/widget/widget.cpp	/^void Widget::onTransferClicked()$/;"	f	class:Widget
onTranslationUpdated	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onTranslationUpdated()$/;"	f	class:GeneralForm
onTryCreateTrayIcon	./../src/widget/widget.cpp	/^void Widget::onTryCreateTrayIcon()$/;"	f	class:Widget
onTypingNotificationEnabledUpdated	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::onTypingNotificationEnabledUpdated()$/;"	f	class:PrivacyForm
onUDPUpdated	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onUDPUpdated()$/;"	f	class:GeneralForm
onUpdateTime	./../src/widget/form/chatform.cpp	/^void ChatForm::onUpdateTime()$/;"	f	class:ChatForm
onUseEmoticonsChange	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onUseEmoticonsChange()$/;"	f	class:GeneralForm
onUseProxyUpdated	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::onUseProxyUpdated()$/;"	f	class:GeneralForm
onUserAwayCheck	./../src/widget/widget.cpp	/^void Widget::onUserAwayCheck()$/;"	f	class:Widget
onUserListChanged	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::onUserListChanged()$/;"	f	class:GroupChatForm
onUserListChanged	./../src/widget/groupwidget.cpp	/^void GroupWidget::onUserListChanged()$/;"	f	class:GroupWidget
onUserNameEdited	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::onUserNameEdited()$/;"	f	class:IdentityForm
onUserStatusChanged	./../src/core.cpp	/^void Core::onUserStatusChanged(Tox*\/* tox*\/, int friendId, uint8_t userstatus, void* core)$/;"	f	class:Core
onUsernameChanged	./../src/widget/androidgui.cpp	/^void AndroidGUI::onUsernameChanged(const QString& newUsername, const QString& oldUsername)$/;"	f	class:AndroidGUI
onUsernameChanged	./../src/widget/widget.cpp	/^void Widget::onUsernameChanged(const QString& newUsername, const QString& oldUsername)$/;"	f	class:Widget
onUsernameSet	./../src/widget/form/addfriendform.cpp	/^void AddFriendForm::onUsernameSet(const QString& username)$/;"	f	class:AddFriendForm
onVideoCallTriggered	./../src/widget/form/chatform.cpp	/^void ChatForm::onVideoCallTriggered()$/;"	f	class:ChatForm
onVolMuteToggle	./../src/widget/form/chatform.cpp	/^void ChatForm::onVolMuteToggle()$/;"	f	class:ChatForm
onVolMuteToggle	./../src/widget/form/groupchatform.cpp	/^void GroupChatForm::onVolMuteToggle()$/;"	f	class:GroupChatForm
onWorkerTimeout	./../src/chatlog/chatlog.cpp	/^void ChatLog::onWorkerTimeout()$/;"	f	class:ChatLog
on_BrightnessSlider_sliderMoved	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_BrightnessSlider_sliderMoved(int position)$/;"	f	class:AVForm
on_BrightnessSlider_valueChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_BrightnessSlider_valueChanged(int value)$/;"	f	class:AVForm
on_ContrastSlider_sliderMoved	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_ContrastSlider_sliderMoved(int position)$/;"	f	class:AVForm
on_ContrastSlider_valueChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_ContrastSlider_valueChanged(int value)$/;"	f	class:AVForm
on_HueSlider_sliderMoved	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_HueSlider_sliderMoved(int position)$/;"	f	class:AVForm
on_HueSlider_valueChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_HueSlider_valueChanged(int value)$/;"	f	class:AVForm
on_SaturationSlider_sliderMoved	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_SaturationSlider_sliderMoved(int position)$/;"	f	class:AVForm
on_SaturationSlider_valueChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_SaturationSlider_valueChanged(int value)$/;"	f	class:AVForm
on_bottomButton_clicked	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::on_bottomButton_clicked()$/;"	f	class:FileTransferWidget
on_playbackSlider_valueChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_playbackSlider_valueChanged(int value)$/;"	f	class:AVForm
on_topButton_clicked	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::on_topButton_clicked()$/;"	f	class:FileTransferWidget
on_videoModescomboBox_currentIndexChanged	./../src/widget/form/settings/avform.cpp	/^void AVForm::on_videoModescomboBox_currentIndexChanged(int index)$/;"	f	class:AVForm
once	./../libs/filter_audio/other/spl_init.c	/^static void once(void (*func)(void)) {$/;"	f	file:
open	./../src/corestructs.cpp	/^bool ToxFile::open(bool write)$/;"	f	class:ToxFile
openInput	./../src/audio.cpp	/^void Audio::openInput(const QString& inDevDescr)$/;"	f	class:Audio
openOutput	./../src/audio.cpp	/^void Audio::openOutput(const QString& outDevDescr)$/;"	f	class:Audio
opencvErrorHandler	./../src/main.cpp	/^int opencvErrorHandler(int status, const char* func_name, const char* err_msg,$/;"	f
operator !=	./../src/corestructs.cpp	/^bool ToxFile::operator!=(const ToxFile &other) const$/;"	f	class:ToxFile
operator !=	./../src/corestructs.cpp	/^bool ToxID::operator!=(const ToxID& other) const$/;"	f	class:ToxID
operator <	./../src/widget/form/tabcompleter.cpp	/^bool TabCompleter::SortableString::operator<(const SortableString &other) const$/;"	f	class:TabCompleter::SortableString
operator ==	./../src/autoupdate.h	/^        bool operator==(const UpdateFileMeta& other)$/;"	f	struct:AutoUpdater::UpdateFileMeta
operator ==	./../src/corestructs.cpp	/^bool ToxFile::operator==(const ToxFile &other) const$/;"	f	class:ToxFile
operator ==	./../src/corestructs.cpp	/^bool ToxID::operator==(const ToxID& other) const$/;"	f	class:ToxID
operator ==	./../updater/update.h	/^    bool operator==(const UpdateFileMeta& other)$/;"	f	struct:UpdateFileMeta
order	./../libs/filter_audio/other/real_fft.c	/^  int order;$/;"	m	struct:RealFFT	file:
origText	./../src/widget/croppinglabel.h	/^    QString origText;$/;"	m	class:CroppingLabel
other	./../src/friend.h	/^    Friend& operator=(const Friend& other)=delete;$/;"	m	struct:Friend
other	./../src/friend.h	/^    Friend(const Friend& other)=delete;$/;"	m	struct:Friend
other	./../src/misc/cdata.h	/^    CData& operator=(const CData& other)=delete;$/;"	m	class:CData
other	./../src/misc/cdata.h	/^    CData(const CData& other)=delete;$/;"	m	class:CData
outBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  float outBuf[PART_LEN];$/;"	m	struct:AecCore
outDev	./../src/misc/settings.h	/^    QString outDev;$/;"	m	class:Settings
outDevCombobox	./../ui_avsettings.h	/^    QComboBox *outDevCombobox;$/;"	m	class:Ui_AVSettings
outDevLabel	./../ui_avsettings.h	/^    QLabel *outDevLabel;$/;"	m	class:Ui_AVSettings
outFile	./../libs/filter_audio/aec/aec_core_internal.h	/^  rtc_WavWriter* outFile;$/;"	m	struct:AecCore
outFrBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* outFrBuf;$/;"	m	struct:AecCore
outFrBufH	./../libs/filter_audio/aec/aec_core_internal.h	/^  RingBuffer* outFrBufH;$/;"	m	struct:AecCore
outLinearFile	./../libs/filter_audio/aec/aec_core_internal.h	/^  rtc_WavWriter* outLinearFile;$/;"	m	struct:AecCore
outSamples	./../libs/filter_audio/aec/aec_core_internal.h	/^  int inSamples, outSamples;$/;"	m	struct:AecCore
outputVolume	./../src/audio.h	/^    static float outputVolume;$/;"	m	class:Audio
overDrive	./../libs/filter_audio/aec/aec_core_internal.h	/^  float overDrive, overDriveSm;$/;"	m	struct:AecCore
overDriveSm	./../libs/filter_audio/aec/aec_core_internal.h	/^  float overDrive, overDriveSm;$/;"	m	struct:AecCore
overdrive	./../libs/filter_audio/ns/ns_core.h	/^  float overdrive;$/;"	m	struct:NSinst_t_
overdrive	./../libs/filter_audio/ns/nsx_core.h	/^  uint16_t                overdrive; \/* Q8 *\/$/;"	m	struct:NsxInst_t_
override	./../src/chatlog/content/image.h	/^    virtual QRectF boundingRect() const override;$/;"	m	class:Image
override	./../src/chatlog/content/image.h	/^    virtual qreal getAscent() const override;$/;"	m	class:Image
override	./../src/chatlog/content/image.h	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:Image
override	./../src/chatlog/content/image.h	/^    virtual void setWidth(qreal width) override;$/;"	m	class:Image
override	./../src/chatlog/content/notificationicon.h	/^    virtual QRectF boundingRect() const override;$/;"	m	class:NotificationIcon
override	./../src/chatlog/content/notificationicon.h	/^    virtual qreal getAscent() const override;$/;"	m	class:NotificationIcon
override	./../src/chatlog/content/notificationicon.h	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:NotificationIcon
override	./../src/chatlog/content/notificationicon.h	/^    virtual void setWidth(qreal width) override;$/;"	m	class:NotificationIcon
override	./../src/chatlog/content/spinner.h	/^    virtual QRectF boundingRect() const override;$/;"	m	class:Spinner
override	./../src/chatlog/content/spinner.h	/^    virtual qreal getAscent() const override;$/;"	m	class:Spinner
override	./../src/chatlog/content/spinner.h	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:Spinner
override	./../src/chatlog/content/spinner.h	/^    virtual void setWidth(qreal width) override;$/;"	m	class:Spinner
override	./../src/chatlog/content/spinner.h	/^    virtual void visibilityChanged(bool visible) override;$/;"	m	class:Spinner
override	./../src/chatlog/content/text.h	/^    virtual QRectF boundingRect() const override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual QString getSelectedText() const override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual QString getText() const override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual bool isOverSelection(QPointF scenePos) const override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual qreal getAscent() const override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void hoverMoveEvent(QGraphicsSceneHoverEvent* event) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void mousePressEvent(QGraphicsSceneMouseEvent *event) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void mouseReleaseEvent(QGraphicsSceneMouseEvent *event) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void selectionCleared() override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void selectionDoubleClick(QPointF scenePos) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void selectionFocusChanged(bool focusIn) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void selectionMouseMove(QPointF scenePos) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void selectionStarted(QPointF scenePos) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void setWidth(qreal width) override;$/;"	m	class:Text
override	./../src/chatlog/content/text.h	/^    virtual void visibilityChanged(bool keepInMemory) override;$/;"	m	class:Text
override	./../src/widget/adjustingscrollarea.h	/^    virtual QSize sizeHint() const override;$/;"	m	class:AdjustingScrollArea
override	./../src/widget/adjustingscrollarea.h	/^    virtual void resizeEvent(QResizeEvent *ev) override;$/;"	m	class:AdjustingScrollArea
override	./../src/widget/callconfirmwidget.h	/^    virtual void paintEvent(QPaintEvent* event) override;$/;"	m	class:CallConfirmWidget
override	./../src/widget/callconfirmwidget.h	/^    virtual void showEvent(QShowEvent * event) override;$/;"	m	class:CallConfirmWidget
override	./../src/widget/tool/chattextedit.h	/^    virtual void keyPressEvent(QKeyEvent * event) override;$/;"	m	class:ChatTextEdit
paint	./../src/chatlog/chatlinecontentproxy.cpp	/^void ChatLineContentProxy::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:ChatLineContentProxy
paint	./../src/chatlog/content/image.cpp	/^void Image::paint(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget)$/;"	f	class:Image
paint	./../src/chatlog/content/notificationicon.cpp	/^void NotificationIcon::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:NotificationIcon
paint	./../src/chatlog/content/spinner.cpp	/^void Spinner::paint(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget)$/;"	f	class:Spinner
paint	./../src/chatlog/content/text.cpp	/^void Text::paint(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget)$/;"	f	class:Text
paintEvent	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::paintEvent(QPaintEvent *)$/;"	f	class:FileTransferWidget
paintEvent	./../src/widget/callconfirmwidget.cpp	/^void CallConfirmWidget::paintEvent(QPaintEvent*)$/;"	f	class:CallConfirmWidget
paintEvent	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::paintEvent(QPaintEvent *)$/;"	f	class:MaskablePixmapWidget
paintGL	./../src/widget/videosurface.cpp	/^void VideoSurface::paintGL()$/;"	f	class:VideoSurface
palette	./../src/misc/style.cpp	/^static QColor palette[] = {$/;"	v	file:
parametricNoise	./../libs/filter_audio/ns/ns_core.h	/^  float parametricNoise[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
parent	./../src/platform/statusnotifier/statusnotifier.h	/^    GObject parent;$/;"	m	struct:_StatusNotifier
parent	./../src/widget/form/genericchatform.h	/^    Widget *parent;$/;"	m	class:GenericChatForm
parent	./../src/widget/form/settings/generalform.h	/^    SettingsWidget *parent;$/;"	m	class:GeneralForm
parent_class	./../src/platform/statusnotifier/statusnotifier.h	/^    GObjectClass parent_class;$/;"	m	struct:_StatusNotifierClass
parseFlist	./../src/autoupdate.cpp	/^QList<AutoUpdater::UpdateFileMeta> AutoUpdater::parseFlist(QByteArray flistData)$/;"	f	class:AutoUpdater
parseFlist	./../updater/update.cpp	/^QList<UpdateFileMeta> parseFlist(QByteArray flistData)$/;"	f
passAudioOutput	./../src/audiofilterer.cpp	/^bool AudioFilterer::passAudioOutput(const int16_t *data, int samples)$/;"	f	class:AudioFilterer
pass_audio_output	./../libs/filter_audio/filter_audio.c	/^int pass_audio_output(Filter_Audio *f_a, const int16_t *data, unsigned int samples)$/;"	f
password	./../tools/publish.py	/^	password = getpass('GitHub password for {0}: '.format(user))$/;"	v
password	./../tools/publish.py	/^password = ""$/;"	v
passwordDialog	./../src/widget/gui.cpp	/^QString GUI::passwordDialog(const QString& cancel, const QString& body)$/;"	f	class:GUI
passwordlineEdit	./../ui_setpassworddialog.h	/^    QLineEdit *passwordlineEdit;$/;"	m	class:Ui_SetPasswordDialog
path	./../src/misc/smileypack.h	/^    QString path; \/\/ directory containing the cfg and image files$/;"	m	class:SmileyPack
path	./../src/widget/form/filesform.h	/^    QString path;$/;"	m	class:ListWidgetItem
pauseResumeFileRecv	./../src/core.cpp	/^void Core::pauseResumeFileRecv(int friendId, int fileNum)$/;"	f	class:Core
pauseResumeFileSend	./../src/core.cpp	/^void Core::pauseResumeFileSend(int friendId, int fileNum)$/;"	f	class:Core
pbo	./../src/widget/videosurface.h	/^    QOpenGLBuffer* pbo[2];$/;"	m	class:VideoSurface
pboAllocSize	./../src/widget/videosurface.h	/^    int pboAllocSize;$/;"	m	class:VideoSurface
pboIndex	./../src/widget/videosurface.h	/^    int pboIndex;$/;"	m	class:VideoSurface
peers	./../src/group.h	/^    QMap<int, QString> peers;$/;"	m	class:Group
pic	./../src/widget/friendwidget.h	/^    void onAvatarChange(int FriendId, const QPixmap& pic);$/;"	m	struct:FriendWidget
pinkNoiseExp	./../libs/filter_audio/ns/ns_core.h	/^  float pinkNoiseExp;  \/\/ Pink noise parameter: power of frequencies.$/;"	m	struct:NSinst_t_
pinkNoiseExp	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 pinkNoiseExp;  \/\/ Power of freq.$/;"	m	struct:NsxInst_t_
pinkNoiseNumerator	./../libs/filter_audio/ns/ns_core.h	/^  float pinkNoiseNumerator;  \/\/ Pink noise parameter: numerator.$/;"	m	struct:NSinst_t_
pinkNoiseNumerator	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 pinkNoiseNumerator;  \/\/ Numerator.$/;"	m	struct:NsxInst_t_
pinnedPk	./../src/toxme.cpp	/^const unsigned char Toxme::pinnedPk[] = {0x5D, 0x72, 0xC5, 0x17, 0xDF, 0x6A, 0xEC, 0x54, 0xF1, 0xE9, 0x77, 0xA6, 0xB6, 0xF2, 0x59, 0x14,$/;"	m	class:Toxme	file:
pinnedPk	./../src/toxme.h	/^    static const unsigned char pinnedPk[];$/;"	m	class:Toxme
pinnedServers	./../src/toxdns.h	/^    static const tox3_server pinnedServers[2];$/;"	m	class:ToxDNS
pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^            GdkPixbuf *pixbuf;$/;"	m	union:_StatusNotifierPrivate::__anon45::__anon46	file:
pixmap	./../src/widget/maskablepixmapwidget.h	/^    QPixmap pixmap, mask, unscaled; \/\/ a lot of memory...$/;"	m	class:MaskablePixmapWidget
plainChunkSize	./../src/misc/db/encrypteddb.cpp	/^qint64 EncryptedDb::plainChunkSize = EncryptedDb::encryptedChunkSize - tox_pass_encryption_extra_length();$/;"	m	class:EncryptedDb	file:
plainChunkSize	./../src/misc/db/encrypteddb.h	/^    static qint64 plainChunkSize;$/;"	m	class:EncryptedDb
platform	./../src/autoupdate.cpp	/^const QString AutoUpdater::platform = "osx";$/;"	m	class:AutoUpdater	file:
platform	./../src/autoupdate.cpp	/^const QString AutoUpdater::platform = "win32";$/;"	m	class:AutoUpdater	file:
platform	./../src/autoupdate.cpp	/^const QString AutoUpdater::platform = "win64";$/;"	m	class:AutoUpdater	file:
platform	./../src/autoupdate.cpp	/^const QString AutoUpdater::platform;$/;"	m	class:AutoUpdater	file:
platform	./../src/autoupdate.h	/^    static const QString platform; \/\/\/< Name of platform we're trying to get updates for$/;"	m	class:AutoUpdater
platform	./../tools/publish.py	/^	platform=sys.argv[2]$/;"	v
platform	./../tools/publish.py	/^platform=''$/;"	v
playAudioBuffer	./../src/audio.cpp	/^void Audio::playAudioBuffer(ALuint alSource, const int16_t *data, int samples, unsigned channels, int sampleRate)$/;"	f	class:Audio
playAudioBuffer	./../src/coreav.cpp	/^void Core::playAudioBuffer(ALuint alSource, const int16_t *data, int samples, unsigned channels, int sampleRate)$/;"	f	class:Core
playCallAudio	./../src/coreav.cpp	/^void Core::playCallAudio(void* toxav, int32_t callId, const int16_t *data, uint16_t samples, void *user_data)$/;"	f	class:Core
playCallVideo	./../src/coreav.cpp	/^void Core::playCallVideo(void*, int32_t callId, const vpx_image_t* img, void *user_data)$/;"	f	class:Core
playGroupAudio	./../src/audio.cpp	/^void Audio::playGroupAudio(int group, int peer, const int16_t* data,$/;"	f	class:Audio
playGroupAudioQueued	./../src/audio.cpp	/^void Audio::playGroupAudioQueued(Tox*,int group, int peer, const int16_t* data,$/;"	f	class:Audio
playMono16Sound	./../src/audio.cpp	/^void Audio::playMono16Sound(const QByteArray& data)$/;"	f	class:Audio
playRingtone	./../src/widget/widget.cpp	/^void Widget::playRingtone()$/;"	f	class:Widget
playbackLabel	./../ui_avsettings.h	/^    QLabel *playbackLabel;$/;"	m	class:Ui_AVSettings
playbackSlider	./../ui_avsettings.h	/^    QSlider *playbackSlider;$/;"	m	class:Ui_AVSettings
pmap	./../src/chatlog/content/image.h	/^    QPixmap pmap;$/;"	m	class:Image
pmap	./../src/chatlog/content/notificationicon.h	/^    QPixmap pmap;$/;"	m	class:NotificationIcon
pmap	./../src/chatlog/content/spinner.h	/^    QPixmap pmap;$/;"	m	class:Spinner
policy	./../src/chatlog/chatline.h	/^    Policy policy = VariableSize;$/;"	m	struct:ColumnFormat
pop	./../src/chatlog/documentcache.cpp	/^QTextDocument* DocumentCache::pop()$/;"	f	class:DocumentCache
port	./../src/corestructs.h	/^    int port;$/;"	m	struct:DhtServer
port	./../src/misc/settings.h	/^        quint16 port;$/;"	m	struct:Settings::DhtServer
position	./../libs/filter_audio/aec/aec_resampler.c	/^  float position;$/;"	m	struct:__anon9	file:
postEvent	./../src/ipc.cpp	/^time_t IPC::postEvent(const QString &name, const QByteArray& data\/*=QByteArray()*\/, uint32_t dest\/*=0*\/)$/;"	f	class:IPC
posted	./../src/ipc.h	/^        time_t posted;$/;"	m	struct:IPC::IPCEvent
prefix	./../tools/update-server/deployUpdateFTP_32.py	/^prefix = '\/qtox\/'+target+'\/'$/;"	v
prefix	./../tools/update-server/deployUpdateFTP_64.py	/^prefix = '\/qtox\/'+target+'\/'$/;"	v
prefix	./../tools/update-server/deployUpdateS3.py	/^prefix = "\/qtox\/win32\/" # We only support Windows for now$/;"	v
prepareCall	./../src/coreav.cpp	/^void Core::prepareCall(int friendId, int callId, ToxAv* toxav, bool videoEnabled)$/;"	f	class:Core
prepareEncryptedJson	./../src/toxme.cpp	/^QByteArray Toxme::prepareEncryptedJson(int action, QString payload)$/;"	f	class:Toxme
present	./../src/widget/form/settings/avform.cpp	/^void AVForm::present()$/;"	f	class:AVForm
present	./../src/widget/form/settings/genericsettings.h	/^    virtual void present() {}$/;"	f	class:GenericForm
present	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::present()$/;"	f	class:IdentityForm
present	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::present()$/;"	f	class:PrivacyForm
prevMagnU16	./../libs/filter_audio/ns/nsx_core.h	/^  uint16_t                prevMagnU16[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
prevNoiseU32	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                prevNoiseU32[HALF_ANAL_BLOCKL];$/;"	m	struct:NsxInst_t_
prevQMagn	./../libs/filter_audio/ns/nsx_core.h	/^  int                     prevQMagn;$/;"	m	struct:NsxInst_t_
prevQNoise	./../libs/filter_audio/ns/nsx_core.h	/^  int                     prevQNoise;$/;"	m	struct:NsxInst_t_
previewLabel	./../ui_filetransferwidget.h	/^    QLabel *previewLabel;$/;"	m	class:Ui_FileTransferWidget
previousContact	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::previousContact()$/;"	f	class:GenericChatForm
previousContact	./../src/widget/widget.cpp	/^void Widget::previousContact()$/;"	f	class:Widget
previousId	./../src/widget/form/genericchatform.h	/^    ToxID previousId;$/;"	m	class:GenericChatForm
priorModelPars	./../libs/filter_audio/ns/ns_core.h	/^  float priorModelPars[7];  \/\/ Parameters for prior model.$/;"	m	struct:NSinst_t_
priorNonSpeechProb	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 priorNonSpeechProb;$/;"	m	struct:NsxInst_t_
priorSpeechProb	./../libs/filter_audio/ns/ns_core.h	/^  float priorSpeechProb;  \/\/ Prior speech\/noise probability.$/;"	m	struct:NSinst_t_
priv	./../src/platform/statusnotifier/statusnotifier.h	/^    StatusNotifierPrivate *priv;$/;"	m	struct:_StatusNotifier
probeProp	./../src/video/camera.cpp	/^void Camera::probeProp(Camera::Prop prop)$/;"	f	class:Camera
probeProp	./../src/video/cameraworker.cpp	/^void CameraWorker::probeProp(int prop)$/;"	f	class:CameraWorker
probeResolutions	./../src/video/camera.cpp	/^void Camera::probeResolutions()$/;"	f	class:Camera
probeResolutions	./../src/video/cameraworker.cpp	/^void CameraWorker::probeResolutions()$/;"	f	class:CameraWorker
process	./../src/core.cpp	/^void Core::process()$/;"	f	class:Core
processEvents	./../src/ipc.cpp	/^void IPC::processEvents()$/;"	f	class:IPC
processOfflineMsgs	./../src/widget/widget.cpp	/^void Widget::processOfflineMsgs()$/;"	f	class:Widget
processed	./../src/ipc.h	/^        time_t processed;$/;"	m	struct:IPC::IPCEvent
profilePicture	./../src/widget/androidgui.h	/^    MaskablePixmapWidget* profilePicture;$/;"	m	class:AndroidGUI
profilePicture	./../src/widget/widget.h	/^    MaskablePixmapWidget *profilePicture;$/;"	m	class:Widget
profiles	./../ui_identitysettings.h	/^    QComboBox *profiles;$/;"	m	class:Ui_IdentitySettings
profilesButtonsLayout	./../ui_identitysettings.h	/^    QHBoxLayout *profilesButtonsLayout;$/;"	m	class:Ui_IdentitySettings
profilesButtonsLayout2	./../ui_identitysettings.h	/^    QHBoxLayout *profilesButtonsLayout2;$/;"	m	class:Ui_IdentitySettings
profilesComboLayout	./../ui_identitysettings.h	/^    QHBoxLayout *profilesComboLayout;$/;"	m	class:Ui_IdentitySettings
profilesGroup	./../ui_identitysettings.h	/^    QGroupBox *profilesGroup;$/;"	m	class:Ui_IdentitySettings
profilesLabel	./../ui_identitysettings.h	/^    QLabel *profilesLabel;$/;"	m	class:Ui_IdentitySettings
profilesVLayout	./../ui_identitysettings.h	/^    QVBoxLayout *profilesVLayout;$/;"	m	class:Ui_IdentitySettings
progressBar	./../ui_filetransferwidget.h	/^    QProgressBar *progressBar;$/;"	m	class:Ui_FileTransferWidget
progressLabel	./../ui_filetransferwidget.h	/^    QLabel *progressLabel;$/;"	m	class:Ui_FileTransferWidget
propProbingFinished	./../moc_camera.cpp	/^void Camera::propProbingFinished(Prop _t1, double _t2)$/;"	f	class:Camera
propProbingFinished	./../moc_cameraworker.cpp	/^void CameraWorker::propProbingFinished(int _t1, double _t2)$/;"	f	class:CameraWorker
prop_name_from_icon	./../src/platform/statusnotifier/statusnotifier.c	/^static guint prop_name_from_icon[_NB_STATUS_NOTIFIER_ICONS] = {$/;"	v	file:
prop_pixbuf_from_icon	./../src/platform/statusnotifier/statusnotifier.c	/^static guint prop_pixbuf_from_icon[_NB_STATUS_NOTIFIER_ICONS] = {$/;"	v	file:
props	./../src/video/cameraworker.h	/^    QMap<int, double> props;$/;"	m	class:CameraWorker
protocolSpacer	./../ui_generalsettings.h	/^    QSpacerItem *protocolSpacer;$/;"	m	class:Ui_GeneralSettings
proxy	./../src/chatlog/chatlinecontentproxy.h	/^    QGraphicsProxyWidget* proxy;$/;"	m	class:ChatLineContentProxy
proxyAddr	./../src/misc/settings.h	/^    QString proxyAddr;$/;"	m	class:Settings
proxyAddr	./../ui_generalsettings.h	/^    QLineEdit *proxyAddr;$/;"	m	class:Ui_GeneralSettings
proxyAddrLabel	./../ui_generalsettings.h	/^    QLabel *proxyAddrLabel;$/;"	m	class:Ui_GeneralSettings
proxyLayout	./../ui_generalsettings.h	/^    QGridLayout *proxyLayout;$/;"	m	class:Ui_GeneralSettings
proxyPort	./../src/misc/settings.h	/^    int proxyPort;$/;"	m	class:Settings
proxyPort	./../ui_generalsettings.h	/^    QSpinBox *proxyPort;$/;"	m	class:Ui_GeneralSettings
proxyPortLabel	./../ui_generalsettings.h	/^    QLabel *proxyPortLabel;$/;"	m	class:Ui_GeneralSettings
proxyType	./../src/misc/settings.h	/^    ProxyType proxyType;$/;"	m	class:Settings
proxyType	./../ui_generalsettings.h	/^    QComboBox *proxyType;$/;"	m	class:Ui_GeneralSettings
proxyTypeLabel	./../ui_generalsettings.h	/^    QLabel *proxyTypeLabel;$/;"	m	class:Ui_GeneralSettings
proxy_cb	./../src/platform/statusnotifier/statusnotifier.c	/^proxy_cb (GObject *sce, GAsyncResult *result, gpointer data)$/;"	f	file:
pswdsLayout	./../ui_setpassworddialog.h	/^    QGridLayout *pswdsLayout;$/;"	m	class:Ui_SetPasswordDialog
ptCounter	./../src/core.h	/^    enum PasswordType {ptMain = 0, ptHistory, ptCounter};$/;"	e	enum:Core::PasswordType
ptHTTP	./../src/misc/settings.h	/^enum ProxyType {ptNone, ptSOCKS5, ptHTTP};$/;"	e	enum:ProxyType
ptHistory	./../src/core.h	/^    enum PasswordType {ptMain = 0, ptHistory, ptCounter};$/;"	e	enum:Core::PasswordType
ptMain	./../src/core.h	/^    enum PasswordType {ptMain = 0, ptHistory, ptCounter};$/;"	e	enum:Core::PasswordType
ptNone	./../src/misc/settings.h	/^enum ProxyType {ptNone, ptSOCKS5, ptHTTP};$/;"	e	enum:ProxyType
ptSOCKS5	./../src/misc/settings.h	/^enum ProxyType {ptNone, ptSOCKS5, ptHTTP};$/;"	e	enum:ProxyType
pubkey	./../src/toxdns.h	/^        uint8_t* pubkey; \/\/\/< Public key of the tox3 server, usually 256bit long$/;"	m	struct:ToxDNS::tox3_server
publicGroup	./../ui_identitysettings.h	/^    QGroupBox *publicGroup;$/;"	m	class:Ui_IdentitySettings
publicKey	./../src/corestructs.h	/^    QString publicKey;$/;"	m	struct:ToxID
pullFileContent	./../src/misc/db/encrypteddb.cpp	/^bool EncryptedDb::pullFileContent(const QString &fname, QByteArray &buf)$/;"	f	class:EncryptedDb
push	./../src/chatlog/documentcache.cpp	/^void DocumentCache::push(QTextDocument *doc)$/;"	f	class:DocumentCache
pushFrame	./../src/video/netvideosource.cpp	/^void NetVideoSource::pushFrame(VideoFrame frame)$/;"	f	class:NetVideoSource
pushVPXFrame	./../src/video/netvideosource.cpp	/^void NetVideoSource::pushVPXFrame(const vpx_image *image)$/;"	f	class:NetVideoSource
pwsaltedkeys	./../src/core.h	/^    uint8_t* pwsaltedkeys[PasswordType::ptCounter] = {nullptr}; \/\/ use the pw's hash as the "pw"$/;"	m	class:Core
qCleanupResources_res	./../qrc_res.cpp	/^int QT_MANGLE_NAMESPACE(qCleanupResources_res)()$/;"	f
qCleanupResources_smileys	./../qrc_smileys.cpp	/^int QT_MANGLE_NAMESPACE(qCleanupResources_smileys)()$/;"	f
qInitResources_res	./../qrc_res.cpp	/^int QT_MANGLE_NAMESPACE(qInitResources_res)()$/;"	f
qInitResources_smileys	./../qrc_smileys.cpp	/^int QT_MANGLE_NAMESPACE(qInitResources_smileys)()$/;"	f
qNoise	./../libs/filter_audio/ns/nsx_core.h	/^  int                     qNoise;$/;"	m	struct:NsxInst_t_
qssifyFont	./../src/misc/style.cpp	/^QString qssifyFont(QFont font)$/;"	f
qtIcon	./../src/widget/systemtrayicon.h	/^    QSystemTrayIcon* qtIcon;$/;"	m	class:SystemTrayIcon
qt_meta_data_AVForm	./../moc_avform.cpp	/^static const uint qt_meta_data_AVForm[] = {$/;"	v	file:
qt_meta_data_AddFriendForm	./../moc_addfriendform.cpp	/^static const uint qt_meta_data_AddFriendForm[] = {$/;"	v	file:
qt_meta_data_AdjustingScrollArea	./../moc_adjustingscrollarea.cpp	/^static const uint qt_meta_data_AdjustingScrollArea[] = {$/;"	v	file:
qt_meta_data_AdvancedForm	./../moc_advancedform.cpp	/^static const uint qt_meta_data_AdvancedForm[] = {$/;"	v	file:
qt_meta_data_Audio	./../moc_audio.cpp	/^static const uint qt_meta_data_Audio[] = {$/;"	v	file:
qt_meta_data_CallConfirmWidget	./../moc_callconfirmwidget.cpp	/^static const uint qt_meta_data_CallConfirmWidget[] = {$/;"	v	file:
qt_meta_data_Camera	./../moc_camera.cpp	/^static const uint qt_meta_data_Camera[] = {$/;"	v	file:
qt_meta_data_CameraWorker	./../moc_cameraworker.cpp	/^static const uint qt_meta_data_CameraWorker[] = {$/;"	v	file:
qt_meta_data_ChatForm	./../moc_chatform.cpp	/^static const uint qt_meta_data_ChatForm[] = {$/;"	v	file:
qt_meta_data_ChatLog	./../moc_chatlog.cpp	/^static const uint qt_meta_data_ChatLog[] = {$/;"	v	file:
qt_meta_data_ChatTextEdit	./../moc_chattextedit.cpp	/^static const uint qt_meta_data_ChatTextEdit[] = {$/;"	v	file:
qt_meta_data_ClickableTE	./../moc_identityform.cpp	/^static const uint qt_meta_data_ClickableTE[] = {$/;"	v	file:
qt_meta_data_Core	./../moc_core.cpp	/^static const uint qt_meta_data_Core[] = {$/;"	v	file:
qt_meta_data_CroppingLabel	./../moc_croppinglabel.cpp	/^static const uint qt_meta_data_CroppingLabel[] = {$/;"	v	file:
qt_meta_data_CustomTextDocument	./../moc_customtextdocument.cpp	/^static const uint qt_meta_data_CustomTextDocument[] = {$/;"	v	file:
qt_meta_data_EmoticonsWidget	./../moc_emoticonswidget.cpp	/^static const uint qt_meta_data_EmoticonsWidget[] = {$/;"	v	file:
qt_meta_data_FileTransferWidget	./../moc_filetransferwidget.cpp	/^static const uint qt_meta_data_FileTransferWidget[] = {$/;"	v	file:
qt_meta_data_FilesForm	./../moc_filesform.cpp	/^static const uint qt_meta_data_FilesForm[] = {$/;"	v	file:
qt_meta_data_FriendListWidget	./../moc_friendlistwidget.cpp	/^static const uint qt_meta_data_FriendListWidget[] = {$/;"	v	file:
qt_meta_data_FriendRequestDialog	./../moc_friendrequestdialog.cpp	/^static const uint qt_meta_data_FriendRequestDialog[] = {$/;"	v	file:
qt_meta_data_FriendWidget	./../moc_friendwidget.cpp	/^static const uint qt_meta_data_FriendWidget[] = {$/;"	v	file:
qt_meta_data_GUI	./../moc_gui.cpp	/^static const uint qt_meta_data_GUI[] = {$/;"	v	file:
qt_meta_data_GeneralForm	./../moc_generalform.cpp	/^static const uint qt_meta_data_GeneralForm[] = {$/;"	v	file:
qt_meta_data_GenericChatForm	./../moc_genericchatform.cpp	/^static const uint qt_meta_data_GenericChatForm[] = {$/;"	v	file:
qt_meta_data_GenericChatroomWidget	./../moc_genericchatroomwidget.cpp	/^static const uint qt_meta_data_GenericChatroomWidget[] = {$/;"	v	file:
qt_meta_data_GenericForm	./../moc_genericsettings.cpp	/^static const uint qt_meta_data_GenericForm[] = {$/;"	v	file:
qt_meta_data_Group	./../moc_group.cpp	/^static const uint qt_meta_data_Group[] = {$/;"	v	file:
qt_meta_data_GroupChatForm	./../moc_groupchatform.cpp	/^static const uint qt_meta_data_GroupChatForm[] = {$/;"	v	file:
qt_meta_data_GroupWidget	./../moc_groupwidget.cpp	/^static const uint qt_meta_data_GroupWidget[] = {$/;"	v	file:
qt_meta_data_IPC	./../moc_ipc.cpp	/^static const uint qt_meta_data_IPC[] = {$/;"	v	file:
qt_meta_data_IdentityForm	./../moc_identityform.cpp	/^static const uint qt_meta_data_IdentityForm[] = {$/;"	v	file:
qt_meta_data_LoadHistoryDialog	./../moc_loadhistorydialog.cpp	/^static const uint qt_meta_data_LoadHistoryDialog[] = {$/;"	v	file:
qt_meta_data_MaskablePixmapWidget	./../moc_maskablepixmapwidget.cpp	/^static const uint qt_meta_data_MaskablePixmapWidget[] = {$/;"	v	file:
qt_meta_data_NetCamView	./../moc_netcamview.cpp	/^static const uint qt_meta_data_NetCamView[] = {$/;"	v	file:
qt_meta_data_Nexus	./../moc_nexus.cpp	/^static const uint qt_meta_data_Nexus[] = {$/;"	v	file:
qt_meta_data_NotificationIcon	./../moc_notificationicon.cpp	/^static const uint qt_meta_data_NotificationIcon[] = {$/;"	v	file:
qt_meta_data_OfflineMsgEngine	./../moc_offlinemsgengine.cpp	/^static const uint qt_meta_data_OfflineMsgEngine[] = {$/;"	v	file:
qt_meta_data_PrivacyForm	./../moc_privacyform.cpp	/^static const uint qt_meta_data_PrivacyForm[] = {$/;"	v	file:
qt_meta_data_SetPasswordDialog	./../moc_setpassworddialog.cpp	/^static const uint qt_meta_data_SetPasswordDialog[] = {$/;"	v	file:
qt_meta_data_Settings	./../moc_settings.cpp	/^static const uint qt_meta_data_Settings[] = {$/;"	v	file:
qt_meta_data_SettingsWidget	./../moc_settingswidget.cpp	/^static const uint qt_meta_data_SettingsWidget[] = {$/;"	v	file:
qt_meta_data_SmileyPack	./../moc_smileypack.cpp	/^static const uint qt_meta_data_SmileyPack[] = {$/;"	v	file:
qt_meta_data_Spinner	./../moc_spinner.cpp	/^static const uint qt_meta_data_Spinner[] = {$/;"	v	file:
qt_meta_data_SystemTrayIcon	./../moc_systemtrayicon.cpp	/^static const uint qt_meta_data_SystemTrayIcon[] = {$/;"	v	file:
qt_meta_data_TabCompleter	./../moc_tabcompleter.cpp	/^static const uint qt_meta_data_TabCompleter[] = {$/;"	v	file:
qt_meta_data_ToxDNS	./../moc_toxdns.cpp	/^static const uint qt_meta_data_ToxDNS[] = {$/;"	v	file:
qt_meta_data_ToxURIDialog	./../moc_toxuri.cpp	/^static const uint qt_meta_data_ToxURIDialog[] = {$/;"	v	file:
qt_meta_data_VideoSource	./../moc_videosource.cpp	/^static const uint qt_meta_data_VideoSource[] = {$/;"	v	file:
qt_meta_data_VideoSurface	./../moc_videosurface.cpp	/^static const uint qt_meta_data_VideoSurface[] = {$/;"	v	file:
qt_meta_data_Widget	./../moc_widget.cpp	/^static const uint qt_meta_data_Widget[] = {$/;"	v	file:
qt_meta_stringdata_AVForm	./../moc_avform.cpp	/^static const qt_meta_stringdata_AVForm_t qt_meta_stringdata_AVForm = {$/;"	v	file:
qt_meta_stringdata_AVForm_t	./../moc_avform.cpp	/^struct qt_meta_stringdata_AVForm_t {$/;"	s	file:
qt_meta_stringdata_AddFriendForm	./../moc_addfriendform.cpp	/^static const qt_meta_stringdata_AddFriendForm_t qt_meta_stringdata_AddFriendForm = {$/;"	v	file:
qt_meta_stringdata_AddFriendForm_t	./../moc_addfriendform.cpp	/^struct qt_meta_stringdata_AddFriendForm_t {$/;"	s	file:
qt_meta_stringdata_AdjustingScrollArea	./../moc_adjustingscrollarea.cpp	/^static const qt_meta_stringdata_AdjustingScrollArea_t qt_meta_stringdata_AdjustingScrollArea = {$/;"	v	file:
qt_meta_stringdata_AdjustingScrollArea_t	./../moc_adjustingscrollarea.cpp	/^struct qt_meta_stringdata_AdjustingScrollArea_t {$/;"	s	file:
qt_meta_stringdata_AdvancedForm	./../moc_advancedform.cpp	/^static const qt_meta_stringdata_AdvancedForm_t qt_meta_stringdata_AdvancedForm = {$/;"	v	file:
qt_meta_stringdata_AdvancedForm_t	./../moc_advancedform.cpp	/^struct qt_meta_stringdata_AdvancedForm_t {$/;"	s	file:
qt_meta_stringdata_Audio	./../moc_audio.cpp	/^static const qt_meta_stringdata_Audio_t qt_meta_stringdata_Audio = {$/;"	v	file:
qt_meta_stringdata_Audio_t	./../moc_audio.cpp	/^struct qt_meta_stringdata_Audio_t {$/;"	s	file:
qt_meta_stringdata_CallConfirmWidget	./../moc_callconfirmwidget.cpp	/^static const qt_meta_stringdata_CallConfirmWidget_t qt_meta_stringdata_CallConfirmWidget = {$/;"	v	file:
qt_meta_stringdata_CallConfirmWidget_t	./../moc_callconfirmwidget.cpp	/^struct qt_meta_stringdata_CallConfirmWidget_t {$/;"	s	file:
qt_meta_stringdata_Camera	./../moc_camera.cpp	/^static const qt_meta_stringdata_Camera_t qt_meta_stringdata_Camera = {$/;"	v	file:
qt_meta_stringdata_CameraWorker	./../moc_cameraworker.cpp	/^static const qt_meta_stringdata_CameraWorker_t qt_meta_stringdata_CameraWorker = {$/;"	v	file:
qt_meta_stringdata_CameraWorker_t	./../moc_cameraworker.cpp	/^struct qt_meta_stringdata_CameraWorker_t {$/;"	s	file:
qt_meta_stringdata_Camera_t	./../moc_camera.cpp	/^struct qt_meta_stringdata_Camera_t {$/;"	s	file:
qt_meta_stringdata_ChatForm	./../moc_chatform.cpp	/^static const qt_meta_stringdata_ChatForm_t qt_meta_stringdata_ChatForm = {$/;"	v	file:
qt_meta_stringdata_ChatForm_t	./../moc_chatform.cpp	/^struct qt_meta_stringdata_ChatForm_t {$/;"	s	file:
qt_meta_stringdata_ChatLog	./../moc_chatlog.cpp	/^static const qt_meta_stringdata_ChatLog_t qt_meta_stringdata_ChatLog = {$/;"	v	file:
qt_meta_stringdata_ChatLog_t	./../moc_chatlog.cpp	/^struct qt_meta_stringdata_ChatLog_t {$/;"	s	file:
qt_meta_stringdata_ChatTextEdit	./../moc_chattextedit.cpp	/^static const qt_meta_stringdata_ChatTextEdit_t qt_meta_stringdata_ChatTextEdit = {$/;"	v	file:
qt_meta_stringdata_ChatTextEdit_t	./../moc_chattextedit.cpp	/^struct qt_meta_stringdata_ChatTextEdit_t {$/;"	s	file:
qt_meta_stringdata_ClickableTE	./../moc_identityform.cpp	/^static const qt_meta_stringdata_ClickableTE_t qt_meta_stringdata_ClickableTE = {$/;"	v	file:
qt_meta_stringdata_ClickableTE_t	./../moc_identityform.cpp	/^struct qt_meta_stringdata_ClickableTE_t {$/;"	s	file:
qt_meta_stringdata_Core	./../moc_core.cpp	/^static const qt_meta_stringdata_Core_t qt_meta_stringdata_Core = {$/;"	v	file:
qt_meta_stringdata_Core_t	./../moc_core.cpp	/^struct qt_meta_stringdata_Core_t {$/;"	s	file:
qt_meta_stringdata_CroppingLabel	./../moc_croppinglabel.cpp	/^static const qt_meta_stringdata_CroppingLabel_t qt_meta_stringdata_CroppingLabel = {$/;"	v	file:
qt_meta_stringdata_CroppingLabel_t	./../moc_croppinglabel.cpp	/^struct qt_meta_stringdata_CroppingLabel_t {$/;"	s	file:
qt_meta_stringdata_CustomTextDocument	./../moc_customtextdocument.cpp	/^static const qt_meta_stringdata_CustomTextDocument_t qt_meta_stringdata_CustomTextDocument = {$/;"	v	file:
qt_meta_stringdata_CustomTextDocument_t	./../moc_customtextdocument.cpp	/^struct qt_meta_stringdata_CustomTextDocument_t {$/;"	s	file:
qt_meta_stringdata_EmoticonsWidget	./../moc_emoticonswidget.cpp	/^static const qt_meta_stringdata_EmoticonsWidget_t qt_meta_stringdata_EmoticonsWidget = {$/;"	v	file:
qt_meta_stringdata_EmoticonsWidget_t	./../moc_emoticonswidget.cpp	/^struct qt_meta_stringdata_EmoticonsWidget_t {$/;"	s	file:
qt_meta_stringdata_FileTransferWidget	./../moc_filetransferwidget.cpp	/^static const qt_meta_stringdata_FileTransferWidget_t qt_meta_stringdata_FileTransferWidget = {$/;"	v	file:
qt_meta_stringdata_FileTransferWidget_t	./../moc_filetransferwidget.cpp	/^struct qt_meta_stringdata_FileTransferWidget_t {$/;"	s	file:
qt_meta_stringdata_FilesForm	./../moc_filesform.cpp	/^static const qt_meta_stringdata_FilesForm_t qt_meta_stringdata_FilesForm = {$/;"	v	file:
qt_meta_stringdata_FilesForm_t	./../moc_filesform.cpp	/^struct qt_meta_stringdata_FilesForm_t {$/;"	s	file:
qt_meta_stringdata_FriendListWidget	./../moc_friendlistwidget.cpp	/^static const qt_meta_stringdata_FriendListWidget_t qt_meta_stringdata_FriendListWidget = {$/;"	v	file:
qt_meta_stringdata_FriendListWidget_t	./../moc_friendlistwidget.cpp	/^struct qt_meta_stringdata_FriendListWidget_t {$/;"	s	file:
qt_meta_stringdata_FriendRequestDialog	./../moc_friendrequestdialog.cpp	/^static const qt_meta_stringdata_FriendRequestDialog_t qt_meta_stringdata_FriendRequestDialog = {$/;"	v	file:
qt_meta_stringdata_FriendRequestDialog_t	./../moc_friendrequestdialog.cpp	/^struct qt_meta_stringdata_FriendRequestDialog_t {$/;"	s	file:
qt_meta_stringdata_FriendWidget	./../moc_friendwidget.cpp	/^static const qt_meta_stringdata_FriendWidget_t qt_meta_stringdata_FriendWidget = {$/;"	v	file:
qt_meta_stringdata_FriendWidget_t	./../moc_friendwidget.cpp	/^struct qt_meta_stringdata_FriendWidget_t {$/;"	s	file:
qt_meta_stringdata_GUI	./../moc_gui.cpp	/^static const qt_meta_stringdata_GUI_t qt_meta_stringdata_GUI = {$/;"	v	file:
qt_meta_stringdata_GUI_t	./../moc_gui.cpp	/^struct qt_meta_stringdata_GUI_t {$/;"	s	file:
qt_meta_stringdata_GeneralForm	./../moc_generalform.cpp	/^static const qt_meta_stringdata_GeneralForm_t qt_meta_stringdata_GeneralForm = {$/;"	v	file:
qt_meta_stringdata_GeneralForm_t	./../moc_generalform.cpp	/^struct qt_meta_stringdata_GeneralForm_t {$/;"	s	file:
qt_meta_stringdata_GenericChatForm	./../moc_genericchatform.cpp	/^static const qt_meta_stringdata_GenericChatForm_t qt_meta_stringdata_GenericChatForm = {$/;"	v	file:
qt_meta_stringdata_GenericChatForm_t	./../moc_genericchatform.cpp	/^struct qt_meta_stringdata_GenericChatForm_t {$/;"	s	file:
qt_meta_stringdata_GenericChatroomWidget	./../moc_genericchatroomwidget.cpp	/^static const qt_meta_stringdata_GenericChatroomWidget_t qt_meta_stringdata_GenericChatroomWidget = {$/;"	v	file:
qt_meta_stringdata_GenericChatroomWidget_t	./../moc_genericchatroomwidget.cpp	/^struct qt_meta_stringdata_GenericChatroomWidget_t {$/;"	s	file:
qt_meta_stringdata_GenericForm	./../moc_genericsettings.cpp	/^static const qt_meta_stringdata_GenericForm_t qt_meta_stringdata_GenericForm = {$/;"	v	file:
qt_meta_stringdata_GenericForm_t	./../moc_genericsettings.cpp	/^struct qt_meta_stringdata_GenericForm_t {$/;"	s	file:
qt_meta_stringdata_Group	./../moc_group.cpp	/^static const qt_meta_stringdata_Group_t qt_meta_stringdata_Group = {$/;"	v	file:
qt_meta_stringdata_GroupChatForm	./../moc_groupchatform.cpp	/^static const qt_meta_stringdata_GroupChatForm_t qt_meta_stringdata_GroupChatForm = {$/;"	v	file:
qt_meta_stringdata_GroupChatForm_t	./../moc_groupchatform.cpp	/^struct qt_meta_stringdata_GroupChatForm_t {$/;"	s	file:
qt_meta_stringdata_GroupWidget	./../moc_groupwidget.cpp	/^static const qt_meta_stringdata_GroupWidget_t qt_meta_stringdata_GroupWidget = {$/;"	v	file:
qt_meta_stringdata_GroupWidget_t	./../moc_groupwidget.cpp	/^struct qt_meta_stringdata_GroupWidget_t {$/;"	s	file:
qt_meta_stringdata_Group_t	./../moc_group.cpp	/^struct qt_meta_stringdata_Group_t {$/;"	s	file:
qt_meta_stringdata_IPC	./../moc_ipc.cpp	/^static const qt_meta_stringdata_IPC_t qt_meta_stringdata_IPC = {$/;"	v	file:
qt_meta_stringdata_IPC_t	./../moc_ipc.cpp	/^struct qt_meta_stringdata_IPC_t {$/;"	s	file:
qt_meta_stringdata_IdentityForm	./../moc_identityform.cpp	/^static const qt_meta_stringdata_IdentityForm_t qt_meta_stringdata_IdentityForm = {$/;"	v	file:
qt_meta_stringdata_IdentityForm_t	./../moc_identityform.cpp	/^struct qt_meta_stringdata_IdentityForm_t {$/;"	s	file:
qt_meta_stringdata_LoadHistoryDialog	./../moc_loadhistorydialog.cpp	/^static const qt_meta_stringdata_LoadHistoryDialog_t qt_meta_stringdata_LoadHistoryDialog = {$/;"	v	file:
qt_meta_stringdata_LoadHistoryDialog_t	./../moc_loadhistorydialog.cpp	/^struct qt_meta_stringdata_LoadHistoryDialog_t {$/;"	s	file:
qt_meta_stringdata_MaskablePixmapWidget	./../moc_maskablepixmapwidget.cpp	/^static const qt_meta_stringdata_MaskablePixmapWidget_t qt_meta_stringdata_MaskablePixmapWidget = {$/;"	v	file:
qt_meta_stringdata_MaskablePixmapWidget_t	./../moc_maskablepixmapwidget.cpp	/^struct qt_meta_stringdata_MaskablePixmapWidget_t {$/;"	s	file:
qt_meta_stringdata_NetCamView	./../moc_netcamview.cpp	/^static const qt_meta_stringdata_NetCamView_t qt_meta_stringdata_NetCamView = {$/;"	v	file:
qt_meta_stringdata_NetCamView_t	./../moc_netcamview.cpp	/^struct qt_meta_stringdata_NetCamView_t {$/;"	s	file:
qt_meta_stringdata_Nexus	./../moc_nexus.cpp	/^static const qt_meta_stringdata_Nexus_t qt_meta_stringdata_Nexus = {$/;"	v	file:
qt_meta_stringdata_Nexus_t	./../moc_nexus.cpp	/^struct qt_meta_stringdata_Nexus_t {$/;"	s	file:
qt_meta_stringdata_NotificationIcon	./../moc_notificationicon.cpp	/^static const qt_meta_stringdata_NotificationIcon_t qt_meta_stringdata_NotificationIcon = {$/;"	v	file:
qt_meta_stringdata_NotificationIcon_t	./../moc_notificationicon.cpp	/^struct qt_meta_stringdata_NotificationIcon_t {$/;"	s	file:
qt_meta_stringdata_OfflineMsgEngine	./../moc_offlinemsgengine.cpp	/^static const qt_meta_stringdata_OfflineMsgEngine_t qt_meta_stringdata_OfflineMsgEngine = {$/;"	v	file:
qt_meta_stringdata_OfflineMsgEngine_t	./../moc_offlinemsgengine.cpp	/^struct qt_meta_stringdata_OfflineMsgEngine_t {$/;"	s	file:
qt_meta_stringdata_PrivacyForm	./../moc_privacyform.cpp	/^static const qt_meta_stringdata_PrivacyForm_t qt_meta_stringdata_PrivacyForm = {$/;"	v	file:
qt_meta_stringdata_PrivacyForm_t	./../moc_privacyform.cpp	/^struct qt_meta_stringdata_PrivacyForm_t {$/;"	s	file:
qt_meta_stringdata_SetPasswordDialog	./../moc_setpassworddialog.cpp	/^static const qt_meta_stringdata_SetPasswordDialog_t qt_meta_stringdata_SetPasswordDialog = {$/;"	v	file:
qt_meta_stringdata_SetPasswordDialog_t	./../moc_setpassworddialog.cpp	/^struct qt_meta_stringdata_SetPasswordDialog_t {$/;"	s	file:
qt_meta_stringdata_Settings	./../moc_settings.cpp	/^static const qt_meta_stringdata_Settings_t qt_meta_stringdata_Settings = {$/;"	v	file:
qt_meta_stringdata_SettingsWidget	./../moc_settingswidget.cpp	/^static const qt_meta_stringdata_SettingsWidget_t qt_meta_stringdata_SettingsWidget = {$/;"	v	file:
qt_meta_stringdata_SettingsWidget_t	./../moc_settingswidget.cpp	/^struct qt_meta_stringdata_SettingsWidget_t {$/;"	s	file:
qt_meta_stringdata_Settings_t	./../moc_settings.cpp	/^struct qt_meta_stringdata_Settings_t {$/;"	s	file:
qt_meta_stringdata_SmileyPack	./../moc_smileypack.cpp	/^static const qt_meta_stringdata_SmileyPack_t qt_meta_stringdata_SmileyPack = {$/;"	v	file:
qt_meta_stringdata_SmileyPack_t	./../moc_smileypack.cpp	/^struct qt_meta_stringdata_SmileyPack_t {$/;"	s	file:
qt_meta_stringdata_Spinner	./../moc_spinner.cpp	/^static const qt_meta_stringdata_Spinner_t qt_meta_stringdata_Spinner = {$/;"	v	file:
qt_meta_stringdata_Spinner_t	./../moc_spinner.cpp	/^struct qt_meta_stringdata_Spinner_t {$/;"	s	file:
qt_meta_stringdata_SystemTrayIcon	./../moc_systemtrayicon.cpp	/^static const qt_meta_stringdata_SystemTrayIcon_t qt_meta_stringdata_SystemTrayIcon = {$/;"	v	file:
qt_meta_stringdata_SystemTrayIcon_t	./../moc_systemtrayicon.cpp	/^struct qt_meta_stringdata_SystemTrayIcon_t {$/;"	s	file:
qt_meta_stringdata_TabCompleter	./../moc_tabcompleter.cpp	/^static const qt_meta_stringdata_TabCompleter_t qt_meta_stringdata_TabCompleter = {$/;"	v	file:
qt_meta_stringdata_TabCompleter_t	./../moc_tabcompleter.cpp	/^struct qt_meta_stringdata_TabCompleter_t {$/;"	s	file:
qt_meta_stringdata_ToxDNS	./../moc_toxdns.cpp	/^static const qt_meta_stringdata_ToxDNS_t qt_meta_stringdata_ToxDNS = {$/;"	v	file:
qt_meta_stringdata_ToxDNS_t	./../moc_toxdns.cpp	/^struct qt_meta_stringdata_ToxDNS_t {$/;"	s	file:
qt_meta_stringdata_ToxURIDialog	./../moc_toxuri.cpp	/^static const qt_meta_stringdata_ToxURIDialog_t qt_meta_stringdata_ToxURIDialog = {$/;"	v	file:
qt_meta_stringdata_ToxURIDialog_t	./../moc_toxuri.cpp	/^struct qt_meta_stringdata_ToxURIDialog_t {$/;"	s	file:
qt_meta_stringdata_VideoSource	./../moc_videosource.cpp	/^static const qt_meta_stringdata_VideoSource_t qt_meta_stringdata_VideoSource = {$/;"	v	file:
qt_meta_stringdata_VideoSource_t	./../moc_videosource.cpp	/^struct qt_meta_stringdata_VideoSource_t {$/;"	s	file:
qt_meta_stringdata_VideoSurface	./../moc_videosurface.cpp	/^static const qt_meta_stringdata_VideoSurface_t qt_meta_stringdata_VideoSurface = {$/;"	v	file:
qt_meta_stringdata_VideoSurface_t	./../moc_videosurface.cpp	/^struct qt_meta_stringdata_VideoSurface_t {$/;"	s	file:
qt_meta_stringdata_Widget	./../moc_widget.cpp	/^static const qt_meta_stringdata_Widget_t qt_meta_stringdata_Widget = {$/;"	v	file:
qt_meta_stringdata_Widget_t	./../moc_widget.cpp	/^struct qt_meta_stringdata_Widget_t {$/;"	s	file:
qt_metacall	./../moc_addfriendform.cpp	/^int AddFriendForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AddFriendForm
qt_metacall	./../moc_adjustingscrollarea.cpp	/^int AdjustingScrollArea::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdjustingScrollArea
qt_metacall	./../moc_advancedform.cpp	/^int AdvancedForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvancedForm
qt_metacall	./../moc_audio.cpp	/^int Audio::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Audio
qt_metacall	./../moc_avform.cpp	/^int AVForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AVForm
qt_metacall	./../moc_callconfirmwidget.cpp	/^int CallConfirmWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CallConfirmWidget
qt_metacall	./../moc_camera.cpp	/^int Camera::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Camera
qt_metacall	./../moc_cameraworker.cpp	/^int CameraWorker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CameraWorker
qt_metacall	./../moc_chatform.cpp	/^int ChatForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatForm
qt_metacall	./../moc_chatlog.cpp	/^int ChatLog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatLog
qt_metacall	./../moc_chattextedit.cpp	/^int ChatTextEdit::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatTextEdit
qt_metacall	./../moc_core.cpp	/^int Core::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Core
qt_metacall	./../moc_croppinglabel.cpp	/^int CroppingLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CroppingLabel
qt_metacall	./../moc_customtextdocument.cpp	/^int CustomTextDocument::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomTextDocument
qt_metacall	./../moc_emoticonswidget.cpp	/^int EmoticonsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EmoticonsWidget
qt_metacall	./../moc_filesform.cpp	/^int FilesForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FilesForm
qt_metacall	./../moc_filetransferwidget.cpp	/^int FileTransferWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileTransferWidget
qt_metacall	./../moc_friendlistwidget.cpp	/^int FriendListWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendListWidget
qt_metacall	./../moc_friendrequestdialog.cpp	/^int FriendRequestDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendRequestDialog
qt_metacall	./../moc_friendwidget.cpp	/^int FriendWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendWidget
qt_metacall	./../moc_generalform.cpp	/^int GeneralForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GeneralForm
qt_metacall	./../moc_genericchatform.cpp	/^int GenericChatForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericChatForm
qt_metacall	./../moc_genericchatroomwidget.cpp	/^int GenericChatroomWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericChatroomWidget
qt_metacall	./../moc_genericsettings.cpp	/^int GenericForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericForm
qt_metacall	./../moc_group.cpp	/^int Group::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Group
qt_metacall	./../moc_groupchatform.cpp	/^int GroupChatForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GroupChatForm
qt_metacall	./../moc_groupwidget.cpp	/^int GroupWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GroupWidget
qt_metacall	./../moc_gui.cpp	/^int GUI::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GUI
qt_metacall	./../moc_identityform.cpp	/^int ClickableTE::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ClickableTE
qt_metacall	./../moc_identityform.cpp	/^int IdentityForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IdentityForm
qt_metacall	./../moc_ipc.cpp	/^int IPC::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IPC
qt_metacall	./../moc_loadhistorydialog.cpp	/^int LoadHistoryDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LoadHistoryDialog
qt_metacall	./../moc_maskablepixmapwidget.cpp	/^int MaskablePixmapWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MaskablePixmapWidget
qt_metacall	./../moc_netcamview.cpp	/^int NetCamView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NetCamView
qt_metacall	./../moc_nexus.cpp	/^int Nexus::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Nexus
qt_metacall	./../moc_notificationicon.cpp	/^int NotificationIcon::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NotificationIcon
qt_metacall	./../moc_offlinemsgengine.cpp	/^int OfflineMsgEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OfflineMsgEngine
qt_metacall	./../moc_privacyform.cpp	/^int PrivacyForm::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrivacyForm
qt_metacall	./../moc_setpassworddialog.cpp	/^int SetPasswordDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SetPasswordDialog
qt_metacall	./../moc_settings.cpp	/^int Settings::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Settings
qt_metacall	./../moc_settingswidget.cpp	/^int SettingsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SettingsWidget
qt_metacall	./../moc_smileypack.cpp	/^int SmileyPack::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SmileyPack
qt_metacall	./../moc_spinner.cpp	/^int Spinner::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Spinner
qt_metacall	./../moc_systemtrayicon.cpp	/^int SystemTrayIcon::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SystemTrayIcon
qt_metacall	./../moc_tabcompleter.cpp	/^int TabCompleter::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TabCompleter
qt_metacall	./../moc_toxdns.cpp	/^int ToxDNS::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToxDNS
qt_metacall	./../moc_toxuri.cpp	/^int ToxURIDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToxURIDialog
qt_metacall	./../moc_videosource.cpp	/^int VideoSource::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoSource
qt_metacall	./../moc_videosurface.cpp	/^int VideoSurface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoSurface
qt_metacall	./../moc_widget.cpp	/^int Widget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Widget
qt_metacast	./../moc_addfriendform.cpp	/^void *AddFriendForm::qt_metacast(const char *_clname)$/;"	f	class:AddFriendForm
qt_metacast	./../moc_adjustingscrollarea.cpp	/^void *AdjustingScrollArea::qt_metacast(const char *_clname)$/;"	f	class:AdjustingScrollArea
qt_metacast	./../moc_advancedform.cpp	/^void *AdvancedForm::qt_metacast(const char *_clname)$/;"	f	class:AdvancedForm
qt_metacast	./../moc_audio.cpp	/^void *Audio::qt_metacast(const char *_clname)$/;"	f	class:Audio
qt_metacast	./../moc_avform.cpp	/^void *AVForm::qt_metacast(const char *_clname)$/;"	f	class:AVForm
qt_metacast	./../moc_callconfirmwidget.cpp	/^void *CallConfirmWidget::qt_metacast(const char *_clname)$/;"	f	class:CallConfirmWidget
qt_metacast	./../moc_camera.cpp	/^void *Camera::qt_metacast(const char *_clname)$/;"	f	class:Camera
qt_metacast	./../moc_cameraworker.cpp	/^void *CameraWorker::qt_metacast(const char *_clname)$/;"	f	class:CameraWorker
qt_metacast	./../moc_chatform.cpp	/^void *ChatForm::qt_metacast(const char *_clname)$/;"	f	class:ChatForm
qt_metacast	./../moc_chatlog.cpp	/^void *ChatLog::qt_metacast(const char *_clname)$/;"	f	class:ChatLog
qt_metacast	./../moc_chattextedit.cpp	/^void *ChatTextEdit::qt_metacast(const char *_clname)$/;"	f	class:ChatTextEdit
qt_metacast	./../moc_core.cpp	/^void *Core::qt_metacast(const char *_clname)$/;"	f	class:Core
qt_metacast	./../moc_croppinglabel.cpp	/^void *CroppingLabel::qt_metacast(const char *_clname)$/;"	f	class:CroppingLabel
qt_metacast	./../moc_customtextdocument.cpp	/^void *CustomTextDocument::qt_metacast(const char *_clname)$/;"	f	class:CustomTextDocument
qt_metacast	./../moc_emoticonswidget.cpp	/^void *EmoticonsWidget::qt_metacast(const char *_clname)$/;"	f	class:EmoticonsWidget
qt_metacast	./../moc_filesform.cpp	/^void *FilesForm::qt_metacast(const char *_clname)$/;"	f	class:FilesForm
qt_metacast	./../moc_filetransferwidget.cpp	/^void *FileTransferWidget::qt_metacast(const char *_clname)$/;"	f	class:FileTransferWidget
qt_metacast	./../moc_friendlistwidget.cpp	/^void *FriendListWidget::qt_metacast(const char *_clname)$/;"	f	class:FriendListWidget
qt_metacast	./../moc_friendrequestdialog.cpp	/^void *FriendRequestDialog::qt_metacast(const char *_clname)$/;"	f	class:FriendRequestDialog
qt_metacast	./../moc_friendwidget.cpp	/^void *FriendWidget::qt_metacast(const char *_clname)$/;"	f	class:FriendWidget
qt_metacast	./../moc_generalform.cpp	/^void *GeneralForm::qt_metacast(const char *_clname)$/;"	f	class:GeneralForm
qt_metacast	./../moc_genericchatform.cpp	/^void *GenericChatForm::qt_metacast(const char *_clname)$/;"	f	class:GenericChatForm
qt_metacast	./../moc_genericchatroomwidget.cpp	/^void *GenericChatroomWidget::qt_metacast(const char *_clname)$/;"	f	class:GenericChatroomWidget
qt_metacast	./../moc_genericsettings.cpp	/^void *GenericForm::qt_metacast(const char *_clname)$/;"	f	class:GenericForm
qt_metacast	./../moc_group.cpp	/^void *Group::qt_metacast(const char *_clname)$/;"	f	class:Group
qt_metacast	./../moc_groupchatform.cpp	/^void *GroupChatForm::qt_metacast(const char *_clname)$/;"	f	class:GroupChatForm
qt_metacast	./../moc_groupwidget.cpp	/^void *GroupWidget::qt_metacast(const char *_clname)$/;"	f	class:GroupWidget
qt_metacast	./../moc_gui.cpp	/^void *GUI::qt_metacast(const char *_clname)$/;"	f	class:GUI
qt_metacast	./../moc_identityform.cpp	/^void *ClickableTE::qt_metacast(const char *_clname)$/;"	f	class:ClickableTE
qt_metacast	./../moc_identityform.cpp	/^void *IdentityForm::qt_metacast(const char *_clname)$/;"	f	class:IdentityForm
qt_metacast	./../moc_ipc.cpp	/^void *IPC::qt_metacast(const char *_clname)$/;"	f	class:IPC
qt_metacast	./../moc_loadhistorydialog.cpp	/^void *LoadHistoryDialog::qt_metacast(const char *_clname)$/;"	f	class:LoadHistoryDialog
qt_metacast	./../moc_maskablepixmapwidget.cpp	/^void *MaskablePixmapWidget::qt_metacast(const char *_clname)$/;"	f	class:MaskablePixmapWidget
qt_metacast	./../moc_netcamview.cpp	/^void *NetCamView::qt_metacast(const char *_clname)$/;"	f	class:NetCamView
qt_metacast	./../moc_nexus.cpp	/^void *Nexus::qt_metacast(const char *_clname)$/;"	f	class:Nexus
qt_metacast	./../moc_notificationicon.cpp	/^void *NotificationIcon::qt_metacast(const char *_clname)$/;"	f	class:NotificationIcon
qt_metacast	./../moc_offlinemsgengine.cpp	/^void *OfflineMsgEngine::qt_metacast(const char *_clname)$/;"	f	class:OfflineMsgEngine
qt_metacast	./../moc_privacyform.cpp	/^void *PrivacyForm::qt_metacast(const char *_clname)$/;"	f	class:PrivacyForm
qt_metacast	./../moc_setpassworddialog.cpp	/^void *SetPasswordDialog::qt_metacast(const char *_clname)$/;"	f	class:SetPasswordDialog
qt_metacast	./../moc_settings.cpp	/^void *Settings::qt_metacast(const char *_clname)$/;"	f	class:Settings
qt_metacast	./../moc_settingswidget.cpp	/^void *SettingsWidget::qt_metacast(const char *_clname)$/;"	f	class:SettingsWidget
qt_metacast	./../moc_smileypack.cpp	/^void *SmileyPack::qt_metacast(const char *_clname)$/;"	f	class:SmileyPack
qt_metacast	./../moc_spinner.cpp	/^void *Spinner::qt_metacast(const char *_clname)$/;"	f	class:Spinner
qt_metacast	./../moc_systemtrayicon.cpp	/^void *SystemTrayIcon::qt_metacast(const char *_clname)$/;"	f	class:SystemTrayIcon
qt_metacast	./../moc_tabcompleter.cpp	/^void *TabCompleter::qt_metacast(const char *_clname)$/;"	f	class:TabCompleter
qt_metacast	./../moc_toxdns.cpp	/^void *ToxDNS::qt_metacast(const char *_clname)$/;"	f	class:ToxDNS
qt_metacast	./../moc_toxuri.cpp	/^void *ToxURIDialog::qt_metacast(const char *_clname)$/;"	f	class:ToxURIDialog
qt_metacast	./../moc_videosource.cpp	/^void *VideoSource::qt_metacast(const char *_clname)$/;"	f	class:VideoSource
qt_metacast	./../moc_videosurface.cpp	/^void *VideoSurface::qt_metacast(const char *_clname)$/;"	f	class:VideoSurface
qt_metacast	./../moc_widget.cpp	/^void *Widget::qt_metacast(const char *_clname)$/;"	f	class:Widget
qt_resource_data	./../qrc_res.cpp	/^static const unsigned char qt_resource_data[] = {$/;"	v	file:
qt_resource_data	./../qrc_smileys.cpp	/^static const unsigned char qt_resource_data[] = {$/;"	v	file:
qt_resource_name	./../qrc_res.cpp	/^static const unsigned char qt_resource_name[] = {$/;"	v	file:
qt_resource_name	./../qrc_smileys.cpp	/^static const unsigned char qt_resource_name[] = {$/;"	v	file:
qt_resource_struct	./../qrc_res.cpp	/^static const unsigned char qt_resource_struct[] = {$/;"	v	file:
qt_resource_struct	./../qrc_smileys.cpp	/^static const unsigned char qt_resource_struct[] = {$/;"	v	file:
qt_static_metacall	./../moc_addfriendform.cpp	/^void AddFriendForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AddFriendForm
qt_static_metacall	./../moc_adjustingscrollarea.cpp	/^void AdjustingScrollArea::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdjustingScrollArea
qt_static_metacall	./../moc_advancedform.cpp	/^void AdvancedForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvancedForm
qt_static_metacall	./../moc_audio.cpp	/^void Audio::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Audio
qt_static_metacall	./../moc_avform.cpp	/^void AVForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AVForm
qt_static_metacall	./../moc_callconfirmwidget.cpp	/^void CallConfirmWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CallConfirmWidget
qt_static_metacall	./../moc_camera.cpp	/^void Camera::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Camera
qt_static_metacall	./../moc_cameraworker.cpp	/^void CameraWorker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CameraWorker
qt_static_metacall	./../moc_chatform.cpp	/^void ChatForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatForm
qt_static_metacall	./../moc_chatlog.cpp	/^void ChatLog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatLog
qt_static_metacall	./../moc_chattextedit.cpp	/^void ChatTextEdit::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ChatTextEdit
qt_static_metacall	./../moc_core.cpp	/^void Core::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Core
qt_static_metacall	./../moc_croppinglabel.cpp	/^void CroppingLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CroppingLabel
qt_static_metacall	./../moc_customtextdocument.cpp	/^void CustomTextDocument::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomTextDocument
qt_static_metacall	./../moc_emoticonswidget.cpp	/^void EmoticonsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EmoticonsWidget
qt_static_metacall	./../moc_filesform.cpp	/^void FilesForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FilesForm
qt_static_metacall	./../moc_filetransferwidget.cpp	/^void FileTransferWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileTransferWidget
qt_static_metacall	./../moc_friendlistwidget.cpp	/^void FriendListWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendListWidget
qt_static_metacall	./../moc_friendrequestdialog.cpp	/^void FriendRequestDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendRequestDialog
qt_static_metacall	./../moc_friendwidget.cpp	/^void FriendWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FriendWidget
qt_static_metacall	./../moc_generalform.cpp	/^void GeneralForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GeneralForm
qt_static_metacall	./../moc_genericchatform.cpp	/^void GenericChatForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericChatForm
qt_static_metacall	./../moc_genericchatroomwidget.cpp	/^void GenericChatroomWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericChatroomWidget
qt_static_metacall	./../moc_genericsettings.cpp	/^void GenericForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericForm
qt_static_metacall	./../moc_group.cpp	/^void Group::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Group
qt_static_metacall	./../moc_groupchatform.cpp	/^void GroupChatForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GroupChatForm
qt_static_metacall	./../moc_groupwidget.cpp	/^void GroupWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GroupWidget
qt_static_metacall	./../moc_gui.cpp	/^void GUI::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GUI
qt_static_metacall	./../moc_identityform.cpp	/^void ClickableTE::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ClickableTE
qt_static_metacall	./../moc_identityform.cpp	/^void IdentityForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IdentityForm
qt_static_metacall	./../moc_ipc.cpp	/^void IPC::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IPC
qt_static_metacall	./../moc_loadhistorydialog.cpp	/^void LoadHistoryDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LoadHistoryDialog
qt_static_metacall	./../moc_maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MaskablePixmapWidget
qt_static_metacall	./../moc_netcamview.cpp	/^void NetCamView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NetCamView
qt_static_metacall	./../moc_nexus.cpp	/^void Nexus::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Nexus
qt_static_metacall	./../moc_notificationicon.cpp	/^void NotificationIcon::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NotificationIcon
qt_static_metacall	./../moc_offlinemsgengine.cpp	/^void OfflineMsgEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OfflineMsgEngine
qt_static_metacall	./../moc_privacyform.cpp	/^void PrivacyForm::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrivacyForm
qt_static_metacall	./../moc_setpassworddialog.cpp	/^void SetPasswordDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SetPasswordDialog
qt_static_metacall	./../moc_settings.cpp	/^void Settings::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Settings
qt_static_metacall	./../moc_settingswidget.cpp	/^void SettingsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SettingsWidget
qt_static_metacall	./../moc_smileypack.cpp	/^void SmileyPack::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SmileyPack
qt_static_metacall	./../moc_spinner.cpp	/^void Spinner::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Spinner
qt_static_metacall	./../moc_systemtrayicon.cpp	/^void SystemTrayIcon::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SystemTrayIcon
qt_static_metacall	./../moc_tabcompleter.cpp	/^void TabCompleter::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TabCompleter
qt_static_metacall	./../moc_toxdns.cpp	/^void ToxDNS::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToxDNS
qt_static_metacall	./../moc_toxuri.cpp	/^void ToxURIDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToxURIDialog
qt_static_metacall	./../moc_videosource.cpp	/^void VideoSource::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoSource
qt_static_metacall	./../moc_videosurface.cpp	/^void VideoSurface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoSurface
qt_static_metacall	./../moc_widget.cpp	/^void Widget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Widget
quantile	./../libs/filter_audio/ns/ns_core.h	/^  float quantile[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
queryTox1	./../src/toxdns.cpp	/^QString ToxDNS::queryTox1(const QString& record, bool silent)$/;"	f	class:ToxDNS
queryTox3	./../src/toxdns.cpp	/^QString ToxDNS::queryTox3(const tox3_server& server, const QString &record, bool silent)$/;"	f	class:ToxDNS
queue	./../src/video/cameraworker.h	/^    QQueue<cv::Mat3b> queue;$/;"	m	class:CameraWorker
quitGroupChat	./../src/core.cpp	/^void Core::quitGroupChat(int groupId) const$/;"	f	class:Core
randomNosapamButton	./../ui_privacysettings.h	/^    QPushButton *randomNosapamButton;$/;"	m	class:Ui_PrivacySettings
rangeAvgHistLrt	./../libs/filter_audio/ns/ns_core.h	/^  float rangeAvgHistLrt;$/;"	m	struct:NSParaExtract_t_
rangedSingleToData	./../src/misc/serialize.cpp	/^QByteArray rangedSingleToData(float value, float min, float max, int numberOfBits)$/;"	f
rangedSingleToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray rangedSingleToData(float value, float min, float max, int numberOfBits)$/;"	f
rangedSingleToData	./../updater/serialize.cpp	/^QByteArray rangedSingleToData(float value, float min, float max, int numberOfBits)$/;"	f
rate_factor	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int rate_factor;$/;"	m	struct:__anon23
rawText	./../src/chatlog/content/text.h	/^    QString rawText;$/;"	m	class:Text
rdft_w	./../libs/filter_audio/aec/aec_rdft.c	/^const float rdft_w[64] = {$/;"	v
rdft_wk1i	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk1i[32] = {$/;"	v
rdft_wk1r	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk1r[32] = {$/;"	v
rdft_wk2i	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk2i[32] = {$/;"	v
rdft_wk2r	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk2r[32] = {$/;"	v
rdft_wk3i	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk3i[32] = {$/;"	v
rdft_wk3r	./../libs/filter_audio/aec/aec_rdft.c	/^ALIGN16_BEG const float ALIGN16_END rdft_wk3r[32] = {$/;"	v
rdft_wk3ri_first	./../libs/filter_audio/aec/aec_rdft.c	/^const float rdft_wk3ri_first[16] = {$/;"	v
rdft_wk3ri_second	./../libs/filter_audio/aec/aec_rdft.c	/^const float rdft_wk3ri_second[16] = {$/;"	v
read_pos	./../libs/filter_audio/other/ring_buffer.c	/^  size_t read_pos;$/;"	m	struct:RingBuffer	file:
ready	./../src/core.h	/^    bool ready;$/;"	m	class:Core
real	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 real[ANAL_BLOCKL_MAX];$/;"	m	struct:NsxInst_t_
real_fft	./../libs/filter_audio/ns/nsx_core.h	/^  struct RealFFT* real_fft;$/;"	m	struct:NsxInst_t_	typeref:struct:NsxInst_t_::RealFFT
reasonablePasswordLength	./../src/widget/form/setpassworddialog.cpp	/^const double SetPasswordDialog::reasonablePasswordLength = 8.;$/;"	m	class:SetPasswordDialog	file:
reasonablePasswordLength	./../src/widget/form/setpassworddialog.h	/^    static const double reasonablePasswordLength;$/;"	m	class:SetPasswordDialog
receipt	./../src/offlinemsgengine.h	/^        int receipt;$/;"	m	struct:OfflineMsgEngine::MsgPtr
receiptRecieved	./../moc_core.cpp	/^void Core::receiptRecieved(int _t1, int _t2)$/;"	f	class:Core
receipts	./../src/offlinemsgengine.h	/^    QHash<int, int> receipts;$/;"	m	class:OfflineMsgEngine
reconnectButton	./../ui_generalsettings.h	/^    QPushButton *reconnectButton;$/;"	m	class:Ui_GeneralSettings
rectH	./../src/widget/callconfirmwidget.h	/^    const int rectW, rectH;$/;"	m	class:CallConfirmWidget
rectRatio	./../src/widget/callconfirmwidget.h	/^    const qreal rectRatio; \/\/\/< Used to correct the rounding factors on non-square rects$/;"	m	class:CallConfirmWidget
rectW	./../src/widget/callconfirmwidget.h	/^    const int rectW, rectH;$/;"	m	class:CallConfirmWidget
recvd	./../src/widget/form/filesform.h	/^    QListWidget* sent, * recvd;$/;"	m	class:FilesForm
refCount	./../src/video/cameraworker.h	/^    int refCount;$/;"	m	class:CameraWorker
refcount	./../src/video/camera.h	/^    int refcount; \/\/\/< Number of users suscribed to the camera$/;"	m	class:Camera
regenerate	./../src/chatlog/content/text.cpp	/^void Text::regenerate()$/;"	f	class:Text
regeneratePeerList	./../src/group.cpp	/^void Group::regeneratePeerList()$/;"	f	class:Group
registerEventHandler	./../src/ipc.cpp	/^void IPC::registerEventHandler(const QString &name, IPCEventHandler handler)$/;"	f	class:IPC
registerReceipt	./../src/offlinemsgengine.cpp	/^void OfflineMsgEngine::registerReceipt(int receipt, int messageID, ChatMessage::Ptr msg, const QDateTime &timestamp)$/;"	f	class:OfflineMsgEngine
register_item_cb	./../src/platform/statusnotifier/statusnotifier.c	/^register_item_cb (GObject *sce, GAsyncResult *result, gpointer data)$/;"	f	file:
registration_failed	./../src/platform/statusnotifier/statusnotifier.h	/^    void            (*registration_failed)  (StatusNotifier         *sn,$/;"	m	struct:_StatusNotifierClass
rejectCall	./../moc_chatform.cpp	/^void ChatForm::rejectCall(int _t1)$/;"	f	class:ChatForm
rejectCall	./../src/coreav.cpp	/^void Core::rejectCall(int callId)$/;"	f	class:Core
rejectFileRecvRequest	./../src/core.cpp	/^void Core::rejectFileRecvRequest(int friendId, int fileNum)$/;"	f	class:Core
rejected	./../moc_callconfirmwidget.cpp	/^void CallConfirmWidget::rejected()$/;"	f	class:CallConfirmWidget
release	./../tools/publish.py	/^release = repo.create_release(version,'master',title,'This is an automated release of qTox, published by qTox\\'s continous integration server.',False,False)$/;"	v
reloadHistory	./../src/widget/widget.cpp	/^void Widget::reloadHistory()$/;"	f	class:Widget
reloadSmiles	./../src/widget/form/settings/generalform.cpp	/^void GeneralForm::reloadSmiles()$/;"	f	class:GeneralForm
reloadTheme	./../src/widget/androidgui.cpp	/^void AndroidGUI::reloadTheme()$/;"	f	class:AndroidGUI
reloadTheme	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::reloadTheme()$/;"	f	class:GenericChatroomWidget
reloadTheme	./../src/widget/gui.cpp	/^void GUI::reloadTheme()$/;"	f	class:GUI
reloadTheme	./../src/widget/widget.cpp	/^void Widget::reloadTheme()$/;"	f	class:Widget
removeAllReciepts	./../src/offlinemsgengine.cpp	/^void OfflineMsgEngine::removeAllReciepts()$/;"	f	class:OfflineMsgEngine
removeFileFromQueue	./../src/core.cpp	/^void Core::removeFileFromQueue(bool sendQueue, int friendId, int fileId)$/;"	f	class:Core
removeFriend	./../moc_friendwidget.cpp	/^void FriendWidget::removeFriend(int _t1)$/;"	f	class:FriendWidget
removeFriend	./../src/core.cpp	/^void Core::removeFriend(int friendId, bool fake)$/;"	f	class:Core
removeFriend	./../src/friendlist.cpp	/^void FriendList::removeFriend(int friendId, bool fake)$/;"	f	class:FriendList
removeFriend	./../src/widget/widget.cpp	/^void Widget::removeFriend(Friend* f, bool fake)$/;"	f	class:Widget
removeFriend	./../src/widget/widget.cpp	/^void Widget::removeFriend(int friendId)$/;"	f	class:Widget
removeFriendSettings	./../src/misc/settings.cpp	/^void Settings::removeFriendSettings(const ToxID &id)$/;"	f	class:Settings
removeFromScene	./../src/chatlog/chatline.cpp	/^void ChatLine::removeFromScene()$/;"	f	class:ChatLine
removeGroup	./../moc_groupwidget.cpp	/^void GroupWidget::removeGroup(int _t1)$/;"	f	class:GroupWidget
removeGroup	./../src/core.cpp	/^void Core::removeGroup(int groupId, bool fake)$/;"	f	class:Core
removeGroup	./../src/grouplist.cpp	/^void GroupList::removeGroup(int groupId, bool \/*fake*\/)$/;"	f	class:GroupList
removeGroup	./../src/widget/widget.cpp	/^void Widget::removeGroup(Group* g, bool fake)$/;"	f	class:Widget
removeGroup	./../src/widget/widget.cpp	/^void Widget::removeGroup(int groupId)$/;"	f	class:Widget
removeHistory	./../src/historykeeper.cpp	/^bool HistoryKeeper::removeHistory(int encrypted)$/;"	f	class:HistoryKeeper
renameButton	./../ui_identitysettings.h	/^    QPushButton *renameButton;$/;"	m	class:Ui_IdentitySettings
renameHistory	./../src/historykeeper.cpp	/^void HistoryKeeper::renameHistory(QString from, QString to)$/;"	f	class:HistoryKeeper
renderTarget	./../src/widget/maskablepixmapwidget.h	/^    QPixmap* renderTarget = nullptr; \/\/ pointer to dynamically call the constructor$/;"	m	class:MaskablePixmapWidget
repasswordlineEdit	./../ui_setpassworddialog.h	/^    QLineEdit *repasswordlineEdit;$/;"	m	class:Ui_SetPasswordDialog
replaceContent	./../src/chatlog/chatline.cpp	/^void ChatLine::replaceContent(int col, ChatLineContent *lineContent)$/;"	f	class:ChatLine
repo	./../tools/publish.py	/^repo = g.repository('tux3', 'qTox')$/;"	v
repolish	./../src/misc/style.cpp	/^void Style::repolish(QWidget *w)$/;"	f	class:Style
reported_delay_enabled	./../libs/filter_audio/aec/aec_core_internal.h	/^  int reported_delay_enabled;  \/\/ 0 = disabled, otherwise enabled.$/;"	m	struct:AecCore
reposition	./../src/chatlog/chatlog.cpp	/^void ChatLog::reposition(int start, int end, qreal deltaY)$/;"	f	class:ChatLog
reposition	./../src/widget/callconfirmwidget.cpp	/^void CallConfirmWidget::reposition()$/;"	f	class:CallConfirmWidget
requestFriendship	./../src/core.cpp	/^void Core::requestFriendship(const QString& friendAddress, const QString& message)$/;"	f	class:Core
rerl	./../libs/filter_audio/aec/aec_core_internal.h	/^  Stats rerl;$/;"	m	struct:AecCore
rerl	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  AecLevel rerl;$/;"	m	struct:__anon22
res	./../src/widget/videosurface.h	/^    QSize res;$/;"	m	class:VideoSurface
resProbingFinished	./../moc_cameraworker.cpp	/^void CameraWorker::resProbingFinished(QList<QSize> _t1)$/;"	f	class:CameraWorker
resample	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int resample;  \/\/ if the skew is small enough we don't resample$/;"	m	struct:__anon23
resampler	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  void* resampler;$/;"	m	struct:__anon23
resampler_t	./../libs/filter_audio/aec/aec_resampler.c	/^} resampler_t;$/;"	t	typeref:struct:__anon9	file:
rescanButton	./../ui_avsettings.h	/^    QPushButton *rescanButton;$/;"	m	class:Ui_AVSettings
reset	./../src/widget/form/tabcompleter.cpp	/^void TabCompleter::reset()$/;"	f	class:TabCompleter
resetButton	./../ui_advancedsettings.h	/^    QPushButton *resetButton;$/;"	m	class:Ui_AdvancedSettings
resetCallSources	./../src/core.cpp	/^void Core::resetCallSources()$/;"	f	class:Core
resetEventFlags	./../src/widget/friendwidget.cpp	/^void FriendWidget::resetEventFlags()$/;"	f	class:FriendWidget
resetEventFlags	./../src/widget/genericchatroomwidget.h	/^    virtual void resetEventFlags(){;}$/;"	f	class:GenericChatroomWidget
resetEventFlags	./../src/widget/groupwidget.cpp	/^void GroupWidget::resetEventFlags()$/;"	f	class:GroupWidget
resetInstance	./../src/historykeeper.cpp	/^void HistoryKeeper::resetInstance()$/;"	f	class:HistoryKeeper
resetToDefault	./../src/widget/form/settings/advancedform.cpp	/^void AdvancedForm::resetToDefault()$/;"	f	class:AdvancedForm
resizeEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::resizeEvent(QResizeEvent* ev)$/;"	f	class:ChatLog
resizeEvent	./../src/widget/adjustingscrollarea.cpp	/^void AdjustingScrollArea::resizeEvent(QResizeEvent *ev)$/;"	f	class:AdjustingScrollArea
resizeEvent	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::resizeEvent(QResizeEvent* ev)$/;"	f	class:CroppingLabel
resizeEvent	./../src/widget/widget.cpp	/^void Widget::resizeEvent(QResizeEvent *event)$/;"	f	class:Widget
resized	./../moc_gui.cpp	/^void GUI::resized()$/;"	f	class:GUI
resized	./../moc_widget.cpp	/^void Widget::resized()$/;"	f	class:Widget
resolution	./../src/video/videoframe.h	/^    QSize resolution;$/;"	m	struct:VideoFrame
resolutionLabel	./../ui_avsettings.h	/^    QLabel *resolutionLabel;$/;"	m	class:Ui_AVSettings
resolutionProbingFinished	./../moc_camera.cpp	/^void Camera::resolutionProbingFinished(QList<QSize> _t1)$/;"	f	class:Camera
resolutions	./../src/video/cameraworker.h	/^    QList<QSize> resolutions;$/;"	m	class:CameraWorker
resolve	./../src/misc/style.cpp	/^QString Style::resolve(QString qss)$/;"	f	class:Style
resolveToxAddress	./../src/toxdns.cpp	/^ToxID ToxDNS::resolveToxAddress(const QString &address, bool silent)$/;"	f	class:ToxDNS
resolveToxID	./../src/group.cpp	/^QString Group::resolveToxID(const ToxID &id) const$/;"	f	class:Group
resolveToxID	./../src/widget/form/genericchatform.cpp	/^QString GenericChatForm::resolveToxID(const ToxID &id)$/;"	f	class:GenericChatForm
restoreBackups	./../updater/widget.cpp	/^void Widget::restoreBackups()$/;"	f	class:Widget
restoreGeometryState	./../src/misc/settings.h	/^    void restoreGeometryState(T* widget) const$/;"	f	class:Settings
resume	./../src/video/cameraworker.cpp	/^void CameraWorker::resume()$/;"	f	class:CameraWorker
retranslateUi	./../ui_advancedsettings.h	/^    void retranslateUi(QWidget *AdvancedSettings)$/;"	f	class:Ui_AdvancedSettings
retranslateUi	./../ui_android.h	/^    void retranslateUi(QWidget *Android)$/;"	f	class:Ui_Android
retranslateUi	./../ui_avsettings.h	/^    void retranslateUi(QWidget *AVSettings)$/;"	f	class:Ui_AVSettings
retranslateUi	./../ui_filetransferwidget.h	/^    void retranslateUi(QWidget *FileTransferWidget)$/;"	f	class:Ui_FileTransferWidget
retranslateUi	./../ui_generalsettings.h	/^    void retranslateUi(QWidget *GeneralSettings)$/;"	f	class:Ui_GeneralSettings
retranslateUi	./../ui_identitysettings.h	/^    void retranslateUi(QWidget *IdentitySettings)$/;"	f	class:Ui_IdentitySettings
retranslateUi	./../ui_loadhistorydialog.h	/^    void retranslateUi(QDialog *LoadHistoryDialog)$/;"	f	class:Ui_LoadHistoryDialog
retranslateUi	./../ui_mainwindow.h	/^    void retranslateUi(QMainWindow *MainWindow)$/;"	f	class:Ui_MainWindow
retranslateUi	./../ui_privacysettings.h	/^    void retranslateUi(QWidget *PrivacySettings)$/;"	f	class:Ui_PrivacySettings
retranslateUi	./../ui_setpassworddialog.h	/^    void retranslateUi(QDialog *SetPasswordDialog)$/;"	f	class:Ui_SetPasswordDialog
rft_sub_128_t	./../libs/filter_audio/aec/aec_rdft.h	/^typedef void (*rft_sub_128_t)(float* a);$/;"	t
rftbsub	./../libs/filter_audio/other/fft4g.c	/^static void rftbsub(int n, float *a, int nc, float *c)$/;"	f	file:
rftbsub_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t rftbsub_128;$/;"	v
rftbsub_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void rftbsub_128_C(float* a) {$/;"	f	file:
rftbsub_128_SSE2	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^static void rftbsub_128_SSE2(float* a) {$/;"	f	file:
rftfsub	./../libs/filter_audio/other/fft4g.c	/^static void rftfsub(int n, float *a, int nc, float *c)$/;"	f	file:
rftfsub_128	./../libs/filter_audio/aec/aec_rdft.c	/^rft_sub_128_t rftfsub_128;$/;"	v
rftfsub_128_C	./../libs/filter_audio/aec/aec_rdft.c	/^static void rftfsub_128_C(float* a) {$/;"	f	file:
rftfsub_128_SSE2	./../libs/filter_audio/aec/aec_rdft_sse2.c	/^static void rftfsub_128_SSE2(float* a) {$/;"	f	file:
robust_validation_enabled	./../libs/filter_audio/other/delay_estimator.h	/^  int robust_validation_enabled;$/;"	m	struct:__anon25
rotSpeed	./../src/chatlog/content/spinner.h	/^    qreal rotSpeed;$/;"	m	class:Spinner
roundedFactor	./../src/widget/callconfirmwidget.h	/^    const int roundedFactor; \/\/\/< By how much are the corners of the main rect rounded$/;"	m	class:CallConfirmWidget
row	./../src/chatlog/chatline.h	/^    int row = -1;$/;"	m	class:ChatLine
row	./../src/chatlog/chatlinecontent.h	/^    int row = -1;$/;"	m	class:ChatLineContent
runEventHandler	./../src/ipc.cpp	/^bool IPC::runEventHandler(IPCEventHandler handler, const QByteArray& arg)$/;"	f	class:IPC
rw_wrap	./../libs/filter_audio/other/ring_buffer.c	/^  enum Wrap rw_wrap;$/;"	m	struct:RingBuffer	typeref:enum:RingBuffer::Wrap	file:
sampFactor	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  float sampFactor;  \/\/ scSampRate \/ sampFreq$/;"	m	struct:__anon23
sampFreq	./../libs/filter_audio/aec/aec_core_internal.h	/^  int sampFreq;$/;"	m	struct:AecCore
sampFreq	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int sampFreq;$/;"	m	struct:__anon23
sampMsNb	./../libs/filter_audio/aec/echo_cancellation.c	/^static const int sampMsNb = 8;           \/\/ samples per ms in nb$/;"	v	file:
sanitize	./../src/core.cpp	/^QString Core::sanitize(QString name)$/;"	f	class:Core
sanitizedNameMention	./../src/widget/androidgui.h	/^    QRegExp nameMention, sanitizedNameMention;$/;"	m	class:AndroidGUI
sanitizedNameMention	./../src/widget/widget.h	/^    QRegExp nameMention, sanitizedNameMention;$/;"	m	class:Widget
saturationLabel	./../ui_avsettings.h	/^    QLabel *saturationLabel;$/;"	m	class:Ui_AVSettings
save	./../src/misc/settings.cpp	/^void Settings::save(QString path, bool writePersonal)$/;"	f	class:Settings
save	./../src/misc/settings.cpp	/^void Settings::save(bool writePersonal)$/;"	f	class:Settings
saveAvatar	./../src/misc/settings.cpp	/^void Settings::saveAvatar(QPixmap& pic, const QString& ownerId)$/;"	f	class:Settings
saveAvatarHash	./../src/misc/settings.cpp	/^void Settings::saveAvatarHash(const QByteArray& hash, const QString& ownerId)$/;"	f	class:Settings
saveConfiguration	./../src/core.cpp	/^void Core::saveConfiguration()$/;"	f	class:Core
saveConfiguration	./../src/coreencryption.cpp	/^void Core::saveConfiguration(const QString& path)$/;"	f	class:Core
saveCurrentInformation	./../src/coreencryption.cpp	/^void Core::saveCurrentInformation()$/;"	f	class:Core
saveGeometryState	./../src/misc/settings.h	/^    void saveGeometryState(const T* widget)$/;"	f	class:Settings
saveGlobal	./../src/misc/settings.cpp	/^void Settings::saveGlobal(QString path)$/;"	f	class:Settings
savePersonal	./../src/misc/settings.cpp	/^void Settings::savePersonal(QString path)$/;"	f	class:Settings
saveSplitterGeometry	./../src/widget/widget.cpp	/^void Widget::saveSplitterGeometry()$/;"	f	class:Widget
saveWindowGeometry	./../src/widget/widget.cpp	/^void Widget::saveWindowGeometry()$/;"	f	class:Widget
scSampFreq	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int scSampFreq;$/;"	m	struct:__anon23
scale	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             scale;              \/\/ Scale factor for internal volume levels$/;"	m	struct:__anon1
scaleEnergyIn	./../libs/filter_audio/ns/nsx_core.h	/^  int                     scaleEnergyIn;$/;"	m	struct:NsxInst_t_
scanDir	./../tools/update-server/qtox-updater-genflist/main.cpp	/^QList<QString> scanDir(QDir dir)$/;"	f
scene	./../src/chatlog/chatlog.h	/^    QGraphicsScene* scene = nullptr;$/;"	m	class:ChatLog
sceneBoundingRect	./../src/chatlog/chatline.cpp	/^QRectF ChatLine::sceneBoundingRect() const$/;"	f	class:ChatLine
scroll	./../src/platform/statusnotifier/statusnotifier.h	/^    gboolean        (*scroll)               (StatusNotifier         *sn,$/;"	m	struct:_StatusNotifierClass
scrollArea	./../ui_advancedsettings.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_AdvancedSettings
scrollArea	./../ui_avsettings.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_AVSettings
scrollArea	./../ui_generalsettings.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_GeneralSettings
scrollArea	./../ui_identitysettings.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_IdentitySettings
scrollArea	./../ui_privacysettings.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_PrivacySettings
scrollAreaWidgetContents	./../ui_advancedsettings.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_AdvancedSettings
scrollAreaWidgetContents	./../ui_avsettings.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_AVSettings
scrollAreaWidgetContents	./../ui_generalsettings.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_GeneralSettings
scrollAreaWidgetContents	./../ui_identitysettings.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_IdentitySettings
scrollAreaWidgetContents	./../ui_mainwindow.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_MainWindow
scrollAreaWidgetContents	./../ui_privacysettings.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_PrivacySettings
scrollContentsBy	./../src/chatlog/chatlog.cpp	/^void ChatLog::scrollContentsBy(int dx, int dy)$/;"	f	class:ChatLog
scrollToBottom	./../src/chatlog/chatlog.cpp	/^void ChatLog::scrollToBottom()$/;"	f	class:ChatLog
scrollToLine	./../src/chatlog/chatlog.cpp	/^void ChatLog::scrollToLine(ChatLine::Ptr line)$/;"	f	class:ChatLog
sd	./../libs/filter_audio/aec/aec_core_internal.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:AecCore
sde	./../libs/filter_audio/aec/aec_core_internal.h	/^  complex_t sde[PART_LEN1];  \/\/ cross-psd of nearend and error$/;"	m	struct:AecCore
se	./../libs/filter_audio/aec/aec_core_internal.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:AecCore
searchProfiles	./../src/misc/settings.cpp	/^QList<QString> Settings::searchProfiles()$/;"	f	class:Settings
secondColumnHandlePosFromRight	./../src/misc/settings.h	/^    int secondColumnHandlePosFromRight;$/;"	m	class:Settings
secondary_activate	./../src/platform/statusnotifier/statusnotifier.h	/^    gboolean        (*secondary_activate)   (StatusNotifier         *sn,$/;"	m	struct:_StatusNotifierClass
secondsToDHMS	./../src/widget/form/chatform.cpp	/^QString ChatForm::secondsToDHMS(quint32 duration)$/;"	f	class:ChatForm
seed	./../libs/filter_audio/aec/aec_core_internal.h	/^  uint32_t seed;$/;"	m	struct:AecCore
selClickedCol	./../src/chatlog/chatlog.h	/^    int selClickedCol = -1;$/;"	m	class:ChatLog
selClickedRow	./../src/chatlog/chatlog.h	/^    int selClickedRow = -1; \/\/These 4 are only valid while selectionMode != None$/;"	m	class:ChatLog
selFirstRow	./../src/chatlog/chatlog.h	/^    int selFirstRow = -1;$/;"	m	class:ChatLog
selGraphItem	./../src/chatlog/chatlog.h	/^    QGraphicsRectItem* selGraphItem = nullptr;$/;"	m	class:ChatLog
selLastRow	./../src/chatlog/chatlog.h	/^    int selLastRow = -1;$/;"	m	class:ChatLog
selectAll	./../src/chatlog/chatlog.cpp	/^void ChatLog::selectAll()$/;"	f	class:ChatLog
selectedText	./../src/chatlog/content/text.h	/^    QString selectedText;$/;"	m	class:Text
selectionAnchor	./../src/chatlog/content/text.h	/^    int selectionAnchor = -1;$/;"	m	class:Text
selectionChanged	./../moc_chatlog.cpp	/^void ChatLog::selectionChanged()$/;"	f	class:ChatLog
selectionCleared	./../src/chatlog/chatline.cpp	/^void ChatLine::selectionCleared()$/;"	f	class:ChatLine
selectionCleared	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::selectionCleared()$/;"	f	class:ChatLineContent
selectionCleared	./../src/chatlog/content/text.cpp	/^void Text::selectionCleared()$/;"	f	class:Text
selectionDoubleClick	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::selectionDoubleClick(QPointF)$/;"	f	class:ChatLineContent
selectionDoubleClick	./../src/chatlog/content/text.cpp	/^void Text::selectionDoubleClick(QPointF scenePos)$/;"	f	class:Text
selectionEnd	./../src/chatlog/content/text.h	/^    int selectionEnd = -1;$/;"	m	class:Text
selectionFocusChanged	./../src/chatlog/chatline.cpp	/^void ChatLine::selectionFocusChanged(bool focusIn)$/;"	f	class:ChatLine
selectionFocusChanged	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::selectionFocusChanged(bool)$/;"	f	class:ChatLineContent
selectionFocusChanged	./../src/chatlog/content/text.cpp	/^void Text::selectionFocusChanged(bool focusIn)$/;"	f	class:Text
selectionHasFocus	./../src/chatlog/content/text.h	/^    bool selectionHasFocus = true;$/;"	m	class:Text
selectionMode	./../src/chatlog/chatlog.h	/^    SelectionMode selectionMode = None;$/;"	m	class:ChatLog
selectionMouseMove	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::selectionMouseMove(QPointF)$/;"	f	class:ChatLineContent
selectionMouseMove	./../src/chatlog/content/text.cpp	/^void Text::selectionMouseMove(QPointF scenePos)$/;"	f	class:Text
selectionRectColor	./../src/chatlog/chatlog.h	/^    QColor selectionRectColor = QColor::fromRgbF(0.23, 0.68, 0.91).lighter(150);$/;"	m	class:ChatLog
selectionScrollDir	./../src/chatlog/chatlog.h	/^    AutoScrollDirection selectionScrollDir = NoDirection;$/;"	m	class:ChatLog
selectionStarted	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::selectionStarted(QPointF)$/;"	f	class:ChatLineContent
selectionStarted	./../src/chatlog/content/text.cpp	/^void Text::selectionStarted(QPointF scenePos)$/;"	f	class:Text
selectionTimer	./../src/chatlog/chatlog.h	/^    QTimer* selectionTimer = nullptr;$/;"	m	class:ChatLog
selfAvatarChanged	./../moc_core.cpp	/^void Core::selfAvatarChanged(const QPixmap & _t1)$/;"	f	class:Core
sendAction	./../moc_genericchatform.cpp	/^void GenericChatForm::sendAction(int _t1, QString _t2)$/;"	f	class:GenericChatForm
sendAction	./../src/core.cpp	/^int Core::sendAction(int friendId, const QString &action)$/;"	f	class:Core
sendAllFileData	./../src/core.cpp	/^void Core::sendAllFileData(Core *core, ToxFile* file)$/;"	f	class:Core
sendAudioTimer	./../src/coreav.h	/^    QTimer *sendAudioTimer, *sendVideoTimer;$/;"	m	struct:ToxCall
sendAudioTimer	./../src/coreav.h	/^    QTimer *sendAudioTimer;$/;"	m	struct:ToxGroupCall
sendButton	./../src/widget/form/addfriendform.h	/^    QPushButton sendButton;$/;"	m	class:AddFriendForm
sendButton	./../src/widget/form/genericchatform.h	/^    QPushButton *sendButton;$/;"	m	class:GenericChatForm
sendCallAudio	./../src/coreav.cpp	/^void Core::sendCallAudio(int callId, ToxAv* toxav)$/;"	f	class:Core
sendCallVideo	./../src/coreav.cpp	/^void Core::sendCallVideo(int callId)$/;"	f	class:Core
sendFile	./../moc_chatform.cpp	/^void ChatForm::sendFile(int32_t _t1, QString _t2, QString _t3, long long _t4)$/;"	f	class:ChatForm
sendFile	./../src/core.cpp	/^void Core::sendFile(int32_t friendId, QString Filename, QString FilePath, long long filesize)$/;"	f	class:Core
sendGroupAction	./../src/core.cpp	/^void Core::sendGroupAction(int groupId, const QString& message)$/;"	f	class:Core
sendGroupCallAudio	./../src/coreav.cpp	/^void Core::sendGroupCallAudio(int groupId, ToxAv* toxav)$/;"	f	class:Core
sendGroupMessage	./../src/core.cpp	/^void Core::sendGroupMessage(int groupId, const QString& message)$/;"	f	class:Core
sendMessage	./../moc_genericchatform.cpp	/^void GenericChatForm::sendMessage(int _t1, QString _t2)$/;"	f	class:GenericChatForm
sendMessage	./../src/core.cpp	/^int Core::sendMessage(int friendId, const QString& message)$/;"	f	class:Core
sendTimer	./../src/corestructs.h	/^    QTimer* sendTimer;$/;"	v
sendTyping	./../src/core.cpp	/^void Core::sendTyping(int friendId, bool typing)$/;"	f	class:Core
sendVideoTimer	./../src/coreav.h	/^    QTimer *sendAudioTimer, *sendVideoTimer;$/;"	m	struct:ToxCall
sender	./../src/historykeeper.h	/^        QString sender;$/;"	m	struct:HistoryKeeper::HistMessage
sender	./../src/ipc.h	/^        int32_t sender;$/;"	m	struct:IPC::IPCEvent
sent	./../src/widget/form/filesform.h	/^    QListWidget* sent, * recvd;$/;"	m	class:FilesForm
setActive	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::setActive(bool active)$/;"	f	class:GenericChatroomWidget
setAlias	./../src/friend.cpp	/^void Friend::setAlias(QString name)$/;"	f	class:Friend
setAlias	./../src/widget/friendwidget.cpp	/^void FriendWidget::setAlias(const QString& _alias)$/;"	f	class:FriendWidget
setAnimationEnabled	./../src/misc/settings.cpp	/^void Settings::setAnimationEnabled(bool newValue)$/;"	f	class:Settings
setAsAction	./../src/chatlog/chatmessage.cpp	/^void ChatMessage::setAsAction()$/;"	f	class:ChatMessage
setAsActiveChatroom	./../src/widget/friendwidget.cpp	/^void FriendWidget::setAsActiveChatroom()$/;"	f	class:FriendWidget
setAsActiveChatroom	./../src/widget/genericchatroomwidget.h	/^    virtual void setAsActiveChatroom(){;}$/;"	f	class:GenericChatroomWidget
setAsActiveChatroom	./../src/widget/groupwidget.cpp	/^void GroupWidget::setAsActiveChatroom()$/;"	f	class:GroupWidget
setAsInactiveChatroom	./../src/widget/friendwidget.cpp	/^void FriendWidget::setAsInactiveChatroom()$/;"	f	class:FriendWidget
setAsInactiveChatroom	./../src/widget/genericchatroomwidget.h	/^    virtual void setAsInactiveChatroom(){;}$/;"	f	class:GenericChatroomWidget
setAsInactiveChatroom	./../src/widget/groupwidget.cpp	/^void GroupWidget::setAsInactiveChatroom()$/;"	f	class:GroupWidget
setAutoAcceptDir	./../src/misc/settings.cpp	/^void Settings::setAutoAcceptDir(const ToxID &id, const QString& dir)$/;"	f	class:Settings
setAutoAwayTime	./../src/misc/settings.cpp	/^void Settings::setAutoAwayTime(int newValue)$/;"	f	class:Settings
setAutoSaveEnabled	./../src/misc/settings.cpp	/^void Settings::setAutoSaveEnabled(bool newValue)$/;"	f	class:Settings
setAutorun	./../src/misc/settings.cpp	/^void Settings::setAutorun(bool newValue)$/;"	f	class:Settings
setAutorun	./../src/platform/autorun_osx.cpp	/^bool Platform::setAutorun(bool on)$/;"	f	class:Platform
setAutorun	./../src/platform/autorun_win.cpp	/^bool Platform::setAutorun(bool on)$/;"	f	class:Platform
setAutorun	./../src/platform/autorun_xdg.cpp	/^bool Platform::setAutorun(bool on)$/;"	f	class:Platform
setAutostartInTray	./../src/misc/settings.cpp	/^void Settings::setAutostartInTray(bool newValue)$/;"	f	class:Settings
setAvatar	./../src/core.cpp	/^void Core::setAvatar(uint8_t format, const QByteArray& data)$/;"	f	class:Core
setBackgroundColor	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::setBackgroundColor(const QColor &c, bool whiteFont)$/;"	f	class:FileTransferWidget
setBodyHeadStyle	./../src/widget/form/settingswidget.cpp	/^void SettingsWidget::setBodyHeadStyle(QString style)$/;"	f	class:SettingsWidget
setBusyNotification	./../src/chatlog/chatlog.cpp	/^void ChatLog::setBusyNotification(ChatLine::Ptr notification)$/;"	f	class:ChatLog
setButtonColor	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::setButtonColor(const QColor &c)$/;"	f	class:FileTransferWidget
setCamVideoRes	./../src/misc/settings.cpp	/^void Settings::setCamVideoRes(QSize newValue)$/;"	f	class:Settings
setChatForm	./../src/widget/friendwidget.cpp	/^void FriendWidget::setChatForm(Ui::MainWindow &ui)$/;"	f	class:FriendWidget
setChatForm	./../src/widget/genericchatroomwidget.h	/^    virtual void setChatForm(Ui::MainWindow &){;}$/;"	f	class:GenericChatroomWidget
setChatForm	./../src/widget/groupwidget.cpp	/^void GroupWidget::setChatForm(Ui::MainWindow &ui)$/;"	f	class:GroupWidget
setChatLogsPassword	./../src/widget/form/settings/privacyform.cpp	/^bool PrivacyForm::setChatLogsPassword()$/;"	f	class:PrivacyForm
setCheckUpdates	./../src/misc/settings.cpp	/^void Settings::setCheckUpdates(bool newValue)$/;"	f	class:Settings
setClickable	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::setClickable(bool clickable)$/;"	f	class:MaskablePixmapWidget
setCloseToTray	./../src/misc/settings.cpp	/^void Settings::setCloseToTray(bool newValue)$/;"	f	class:Settings
setCompact	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::setCompact(bool compact)$/;"	f	class:GenericChatroomWidget
setCompactLayout	./../src/misc/settings.cpp	/^void Settings::setCompactLayout(bool value)$/;"	f	class:Settings
setContextMenu	./../src/widget/systemtrayicon.cpp	/^void SystemTrayIcon::setContextMenu(QMenu* menu)$/;"	f	class:SystemTrayIcon
setCurrentProfile	./../src/misc/settings.cpp	/^void Settings::setCurrentProfile(QString profile)$/;"	f	class:Settings
setCurstomEmojiFont	./../src/misc/settings.cpp	/^void Settings::setCurstomEmojiFont(bool value)$/;"	f	class:Settings
setDbSyncType	./../src/misc/settings.cpp	/^void Settings::setDbSyncType(int newValue)$/;"	f	class:Settings
setDhtServerList	./../src/misc/settings.cpp	/^void Settings::setDhtServerList(const QList<DhtServer>& newDhtServerList)$/;"	f	class:Settings
setEchoDelayMs	./../src/audiofilterer.cpp	/^bool AudioFilterer::setEchoDelayMs(int16_t msInSndCardBuf)$/;"	f	class:AudioFilterer
setEditable	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::setEditable(bool editable)$/;"	f	class:CroppingLabel
setEdlideMode	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::setEdlideMode(Qt::TextElideMode elide)$/;"	f	class:CroppingLabel
setElidedText	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::setElidedText()$/;"	f	class:CroppingLabel
setEmojiFontFamily	./../src/misc/settings.cpp	/^void Settings::setEmojiFontFamily(const QString &value)$/;"	f	class:Settings
setEmojiFontPointSize	./../src/misc/settings.cpp	/^void Settings::setEmojiFontPointSize(int value)$/;"	f	class:Settings
setEnableIPv6	./../src/misc/settings.cpp	/^void Settings::setEnableIPv6(bool newValue)$/;"	f	class:Settings
setEnableLogging	./../src/misc/settings.cpp	/^void Settings::setEnableLogging(bool newValue)$/;"	f	class:Settings
setEnabled	./../src/widget/gui.cpp	/^void GUI::setEnabled(bool state)$/;"	f	class:GUI
setEncryptLogs	./../src/misc/settings.cpp	/^void Settings::setEncryptLogs(bool newValue)$/;"	f	class:Settings
setEncryptTox	./../src/misc/settings.cpp	/^void Settings::setEncryptTox(bool newValue)$/;"	f	class:Settings
setEventFlag	./../src/friend.cpp	/^void Friend::setEventFlag(int f)$/;"	f	class:Friend
setEventFlag	./../src/group.cpp	/^void Group::setEventFlag(int f)$/;"	f	class:Group
setFauxOfflineMessaging	./../src/misc/settings.cpp	/^void Settings::setFauxOfflineMessaging(bool value)$/;"	f	class:Settings
setFilePath	./../src/corestructs.cpp	/^void ToxFile::setFilePath(QString path)$/;"	f	class:ToxFile
setFilterAudio	./../src/misc/settings.cpp	/^void Settings::setFilterAudio(bool newValue)$/;"	f	class:Settings
setFirstColumnHandlePos	./../src/misc/settings.cpp	/^void Settings::setFirstColumnHandlePos(const int pos)$/;"	f	class:Settings
setForceTCP	./../src/misc/settings.cpp	/^void Settings::setForceTCP(bool newValue)$/;"	f	class:Settings
setFriendAlias	./../src/misc/settings.cpp	/^void Settings::setFriendAlias(const ToxID &id, const QString &alias)$/;"	f	class:Settings
setFriendAlias	./../src/widget/friendwidget.cpp	/^void FriendWidget::setFriendAlias()$/;"	f	class:FriendWidget
setFriendTyping	./../src/widget/form/chatform.cpp	/^void ChatForm::setFriendTyping(bool isTyping)$/;"	f	class:ChatForm
setGeometry	./../src/misc/flowlayout.cpp	/^void FlowLayout::setGeometry(const QRect &rect)$/;"	f	class:FlowLayout
setGlobalAutoAcceptDir	./../src/misc/settings.cpp	/^void Settings::setGlobalAutoAcceptDir(const QString& newValue)$/;"	f	class:Settings
setGroupAlwaysNotify	./../src/misc/settings.cpp	/^void Settings::setGroupAlwaysNotify(bool newValue)$/;"	f	class:Settings
setIcon	./../src/widget/systemtrayicon.cpp	/^void SystemTrayIcon::setIcon(QIcon &&icon)$/;"	f	class:SystemTrayIcon
setInDev	./../src/misc/settings.cpp	/^void Settings::setInDev(const QString& deviceSpecifier)$/;"	f	class:Settings
setIndex	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::setIndex(int r, int c)$/;"	f	class:ChatLineContent
setLastMessage	./../src/widget/tool/chattextedit.cpp	/^void ChatTextEdit::setLastMessage(QString lm)$/;"	f	class:ChatTextEdit
setLightTrayIcon	./../src/misc/settings.cpp	/^void Settings::setLightTrayIcon(bool newValue)$/;"	f	class:Settings
setMakeToxPortable	./../src/misc/settings.cpp	/^void Settings::setMakeToxPortable(bool newValue)$/;"	f	class:Settings
setMentionedFlag	./../src/group.cpp	/^void Group::setMentionedFlag(int f)$/;"	f	class:Group
setMinimizeOnClose	./../src/misc/settings.cpp	/^void Settings::setMinimizeOnClose(bool newValue)$/;"	f	class:Settings
setMinimizeToTray	./../src/misc/settings.cpp	/^void Settings::setMinimizeToTray(bool newValue)$/;"	f	class:Settings
setName	./../src/friend.cpp	/^void Friend::setName(QString name)$/;"	f	class:Friend
setName	./../src/group.cpp	/^void Group::setName(const QString& name)$/;"	f	class:Group
setName	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::setName(const QString &newName)$/;"	f	class:GenericChatForm
setName	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::setName(const QString &name)$/;"	f	class:GenericChatroomWidget
setName	./../src/widget/groupwidget.cpp	/^void GroupWidget::setName(const QString& name)$/;"	f	class:GroupWidget
setNospam	./../src/core.cpp	/^void Core::setNospam(uint32_t nospam)$/;"	f	class:Core
setNospam	./../src/widget/form/settings/privacyform.cpp	/^void PrivacyForm::setNospam()$/;"	f	class:PrivacyForm
setOutDev	./../src/misc/settings.cpp	/^void Settings::setOutDev(const QString& deviceSpecifier)$/;"	f	class:Settings
setPassword	./../src/coreencryption.cpp	/^void Core::setPassword(QString& password, PasswordType passtype, uint8_t* salt)$/;"	f	class:Core
setPixmap	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::setPixmap(const QPixmap &pmap)$/;"	f	class:MaskablePixmapWidget
setPixmap	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::setPixmap(const QPixmap &pmap, QColor background)$/;"	f	class:MaskablePixmapWidget
setProgress	./../updater/widget.cpp	/^void Widget::setProgress(int value)$/;"	f	class:Widget
setProp	./../src/video/camera.cpp	/^void Camera::setProp(Camera::Prop prop, double val)$/;"	f	class:Camera
setProp	./../src/video/cameraworker.cpp	/^void CameraWorker::setProp(int prop, double val)$/;"	f	class:CameraWorker
setProxyAddr	./../src/misc/settings.cpp	/^void Settings::setProxyAddr(const QString& newValue)$/;"	f	class:Settings
setProxyPort	./../src/misc/settings.cpp	/^void Settings::setProxyPort(int newValue)$/;"	f	class:Settings
setProxyType	./../src/misc/settings.cpp	/^void Settings::setProxyType(int newValue)$/;"	f	class:Settings
setResolution	./../src/video/camera.cpp	/^void Camera::setResolution(QSize res)$/;"	f	class:Camera
setRow	./../src/chatlog/chatline.cpp	/^void ChatLine::setRow(int idx)$/;"	f	class:ChatLine
setSecondColumnHandlePosFromRight	./../src/misc/settings.cpp	/^void Settings::setSecondColumnHandlePosFromRight(const int pos)$/;"	f	class:Settings
setShowInFront	./../src/misc/settings.cpp	/^void Settings::setShowInFront(bool newValue)$/;"	f	class:Settings
setShowSystemTray	./../moc_settingswidget.cpp	/^void SettingsWidget::setShowSystemTray(bool _t1)$/;"	f	class:SettingsWidget
setShowSystemTray	./../src/misc/settings.cpp	/^void Settings::setShowSystemTray(const bool& newValue)$/;"	f	class:Settings
setShowWindow	./../src/misc/settings.cpp	/^void Settings::setShowWindow(bool newValue)$/;"	f	class:Settings
setSize	./../src/widget/maskablepixmapwidget.cpp	/^void MaskablePixmapWidget::setSize(QSize size)$/;"	f	class:MaskablePixmapWidget
setSmileyPack	./../src/misc/settings.cpp	/^void Settings::setSmileyPack(const QString &value)$/;"	f	class:Settings
setSource	./../src/widget/netcamview.cpp	/^void NetCamView::setSource(VideoSource *s)$/;"	f	class:NetCamView
setSource	./../src/widget/videosurface.cpp	/^void VideoSurface::setSource(VideoSource *src)$/;"	f	class:VideoSurface
setSplitterState	./../src/misc/settings.cpp	/^void Settings::setSplitterState(const QByteArray &value)$/;"	f	class:Settings
setStatus	./../src/core.cpp	/^void Core::setStatus(Status status)$/;"	f	class:Core
setStatus	./../src/friend.cpp	/^void Friend::setStatus(Status s)$/;"	f	class:Friend
setStatusAway	./../src/widget/widget.cpp	/^void Widget::setStatusAway()$/;"	f	class:Widget
setStatusBusy	./../src/widget/widget.cpp	/^void Widget::setStatusBusy()$/;"	f	class:Widget
setStatusChangeNotificationEnabled	./../src/misc/settings.cpp	/^void Settings::setStatusChangeNotificationEnabled(bool newValue)$/;"	f	class:Settings
setStatusMessage	./../src/core.cpp	/^void Core::setStatusMessage(const QString& message)$/;"	f	class:Core
setStatusMessage	./../src/friend.cpp	/^void Friend::setStatusMessage(QString message)$/;"	f	class:Friend
setStatusMessage	./../src/widget/androidgui.cpp	/^void AndroidGUI::setStatusMessage(const QString &statusMessage)$/;"	f	class:AndroidGUI
setStatusMessage	./../src/widget/form/chatform.cpp	/^void ChatForm::setStatusMessage(QString newMessage)$/;"	f	class:ChatForm
setStatusMessage	./../src/widget/widget.cpp	/^void Widget::setStatusMessage(const QString &statusMessage)$/;"	f	class:Widget
setStatusMsg	./../src/widget/genericchatroomwidget.cpp	/^void GenericChatroomWidget::setStatusMsg(const QString &status)$/;"	f	class:GenericChatroomWidget
setStatusOnline	./../src/widget/widget.cpp	/^void Widget::setStatusOnline()$/;"	f	class:Widget
setStyle	./../src/misc/settings.cpp	/^void Settings::setStyle(const QString& newStyle) $/;"	f	class:Settings
setSyncType	./../src/historykeeper.cpp	/^void HistoryKeeper::setSyncType(Db::syncType sType)$/;"	f	class:HistoryKeeper
setText	./../src/chatlog/content/text.cpp	/^void Text::setText(const QString& txt)$/;"	f	class:Text
setText	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::setText(const QString& text)$/;"	f	class:CroppingLabel
setThemeColor	./../src/misc/settings.cpp	/^void Settings::setThemeColor(const int &value)$/;"	f	class:Settings
setThemeColor	./../src/misc/style.cpp	/^void Style::setThemeColor(QColor color)$/;"	f	class:Style
setThemeColor	./../src/misc/style.cpp	/^void Style::setThemeColor(int color)$/;"	f	class:Style
setTimestampFormat	./../src/misc/settings.cpp	/^void Settings::setTimestampFormat(const QString &format)$/;"	f	class:Settings
setTitle	./../src/widget/netcamview.cpp	/^void NetCamView::setTitle(const QString &title)$/;"	f	class:NetCamView
setToxId	./../src/widget/form/settings/identityform.cpp	/^void IdentityForm::setToxId(const QString& id)$/;"	f	class:IdentityForm
setToxPassword	./../src/widget/form/settings/privacyform.cpp	/^bool PrivacyForm::setToxPassword()$/;"	f	class:PrivacyForm
setTranslation	./../src/misc/settings.cpp	/^void Settings::setTranslation(QString newValue)$/;"	f	class:Settings
setTranslation	./../src/widget/widget.cpp	/^void Widget::setTranslation()$/;"	f	class:Widget
setTypingNotification	./../src/chatlog/chatlog.cpp	/^void ChatLog::setTypingNotification(ChatLine::Ptr notification)$/;"	f	class:ChatLog
setTypingNotification	./../src/misc/settings.cpp	/^void Settings::setTypingNotification(bool enabled)$/;"	f	class:Settings
setTypingNotificationVisible	./../src/chatlog/chatlog.cpp	/^void ChatLog::setTypingNotificationVisible(bool visible)$/;"	f	class:ChatLog
setUseEmoticons	./../src/misc/settings.cpp	/^void Settings::setUseEmoticons(bool newValue)$/;"	f	class:Settings
setUseNativeStyle	./../src/misc/settings.cpp	/^void Settings::setUseNativeStyle(bool value)$/;"	f	class:Settings
setUsername	./../src/core.cpp	/^void Core::setUsername(const QString& username)$/;"	f	class:Core
setUsername	./../src/widget/androidgui.cpp	/^void AndroidGUI::setUsername(const QString& username)$/;"	f	class:AndroidGUI
setUsername	./../src/widget/widget.cpp	/^void Widget::setUsername(const QString& username)$/;"	f	class:Widget
setVisible	./../src/chatlog/chatline.cpp	/^void ChatLine::setVisible(bool visible)$/;"	f	class:ChatLine
setVisible	./../src/widget/systemtrayicon.cpp	/^void SystemTrayIcon::setVisible(bool newState)$/;"	f	class:SystemTrayIcon
setWidgetData	./../src/misc/settings.cpp	/^void Settings::setWidgetData(const QString& uniqueName, const QByteArray& data)$/;"	f	class:Settings
setWidth	./../src/chatlog/chatlinecontentproxy.cpp	/^void ChatLineContentProxy::setWidth(qreal width)$/;"	f	class:ChatLineContentProxy
setWidth	./../src/chatlog/content/image.cpp	/^void Image::setWidth(qreal width)$/;"	f	class:Image
setWidth	./../src/chatlog/content/notificationicon.cpp	/^void NotificationIcon::setWidth(qreal width)$/;"	f	class:NotificationIcon
setWidth	./../src/chatlog/content/spinner.cpp	/^void Spinner::setWidth(qreal width)$/;"	f	class:Spinner
setWidth	./../src/chatlog/content/text.cpp	/^void Text::setWidth(qreal w)$/;"	f	class:Text
setWindowGeometry	./../src/misc/settings.cpp	/^void Settings::setWindowGeometry(const QByteArray &value)$/;"	f	class:Settings
setWindowState	./../src/misc/settings.cpp	/^void Settings::setWindowState(const QByteArray &value)$/;"	f	class:Settings
setWindowTitle	./../src/widget/gui.cpp	/^void GUI::setWindowTitle(const QString& title)$/;"	f	class:GUI
setWindowTitle	./../src/widget/widget.cpp	/^void Widget::setWindowTitle(const QString& title)$/;"	f	class:Widget
set_echo_delay_ms	./../libs/filter_audio/filter_audio.c	/^int set_echo_delay_ms(Filter_Audio *f_a, int16_t msInSndCardBuf)$/;"	f
set_feature_extraction_parameters	./../libs/filter_audio/ns/ns_core.c	/^static void set_feature_extraction_parameters(NSinst_t* self) {$/;"	f	file:
settings	./../src/misc/settings.h	/^    Settings(Settings &settings) = delete;$/;"	m	class:Settings
settings	./../src/misc/settings.h	/^    static Settings* settings;$/;"	m	class:Settings
settingsButton	./../ui_mainwindow.h	/^    QPushButton *settingsButton;$/;"	m	class:Ui_MainWindow
settingsWidget	./../src/widget/widget.h	/^    SettingsWidget *settingsWidget;$/;"	m	class:Widget
settingsWidgets	./../src/widget/form/settingswidget.h	/^    QTabWidget *settingsWidgets;$/;"	m	class:SettingsWidget
setupButtons	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::setupButtons()$/;"	f	class:FileTransferWidget
setupUi	./../ui_advancedsettings.h	/^    void setupUi(QWidget *AdvancedSettings)$/;"	f	class:Ui_AdvancedSettings
setupUi	./../ui_android.h	/^    void setupUi(QWidget *Android)$/;"	f	class:Ui_Android
setupUi	./../ui_avsettings.h	/^    void setupUi(QWidget *AVSettings)$/;"	f	class:Ui_AVSettings
setupUi	./../ui_filetransferwidget.h	/^    void setupUi(QWidget *FileTransferWidget)$/;"	f	class:Ui_FileTransferWidget
setupUi	./../ui_generalsettings.h	/^    void setupUi(QWidget *GeneralSettings)$/;"	f	class:Ui_GeneralSettings
setupUi	./../ui_identitysettings.h	/^    void setupUi(QWidget *IdentitySettings)$/;"	f	class:Ui_IdentitySettings
setupUi	./../ui_loadhistorydialog.h	/^    void setupUi(QDialog *LoadHistoryDialog)$/;"	f	class:Ui_LoadHistoryDialog
setupUi	./../ui_mainwindow.h	/^    void setupUi(QMainWindow *MainWindow)$/;"	f	class:Ui_MainWindow
setupUi	./../ui_privacysettings.h	/^    void setupUi(QWidget *PrivacySettings)$/;"	f	class:Ui_PrivacySettings
setupUi	./../ui_setpassworddialog.h	/^    void setupUi(QDialog *SetPasswordDialog)$/;"	f	class:Ui_SetPasswordDialog
sfrcounter	./../libs/filter_audio/aec/aec_core_internal.h	/^  int sfrcounter;$/;"	m	struct:PowerLevel
sfrsum	./../libs/filter_audio/aec/aec_core_internal.h	/^  float sfrsum;$/;"	m	struct:PowerLevel
show	./../src/widget/form/addfriendform.cpp	/^void AddFriendForm::show(Ui::MainWindow &ui)$/;"	f	class:AddFriendForm
show	./../src/widget/form/chatform.cpp	/^void ChatForm::show(Ui::MainWindow &ui)$/;"	f	class:ChatForm
show	./../src/widget/form/filesform.cpp	/^void FilesForm::show(Ui::MainWindow& ui)$/;"	f	class:FilesForm
show	./../src/widget/form/genericchatform.cpp	/^void GenericChatForm::show(Ui::MainWindow &ui)$/;"	f	class:GenericChatForm
show	./../src/widget/form/settingswidget.cpp	/^void SettingsWidget::show(Ui::MainWindow& ui)$/;"	f	class:SettingsWidget
show	./../src/widget/netcamview.cpp	/^void NetCamView::show(VideoSource *source, const QString &title)$/;"	f	class:NetCamView
show	./../src/widget/systemtrayicon.cpp	/^void SystemTrayIcon::show()$/;"	f	class:SystemTrayIcon
showError	./../src/widget/gui.cpp	/^void GUI::showError(const QString& title, const QString& msg)$/;"	f	class:GUI
showEvent	./../src/chatlog/chatlog.cpp	/^void ChatLog::showEvent(QShowEvent*)$/;"	f	class:ChatLog
showEvent	./../src/widget/callconfirmwidget.cpp	/^void CallConfirmWidget::showEvent(QShowEvent*)$/;"	f	class:CallConfirmWidget
showEvent	./../src/widget/form/settings/avform.cpp	/^void AVForm::showEvent(QShowEvent *)$/;"	f	class:AVForm
showInFront	./../src/misc/settings.h	/^    bool showInFront;$/;"	m	class:Settings
showInFront	./../ui_generalsettings.h	/^    QCheckBox *showInFront;$/;"	m	class:Ui_GeneralSettings
showInfo	./../src/widget/gui.cpp	/^void GUI::showInfo(const QString& title, const QString& msg)$/;"	f	class:GUI
showPreview	./../src/chatlog/content/filetransferwidget.cpp	/^void FileTransferWidget::showPreview(const QString &filename)$/;"	f	class:FileTransferWidget
showSystemTray	./../src/misc/settings.h	/^    bool showSystemTray;$/;"	m	class:Settings
showSystemTray	./../ui_generalsettings.h	/^    QCheckBox *showSystemTray;$/;"	m	class:Ui_GeneralSettings
showTextEdit	./../src/widget/croppinglabel.cpp	/^void CroppingLabel::showTextEdit()$/;"	f	class:CroppingLabel
showWarning	./../src/toxdns.cpp	/^void ToxDNS::showWarning(const QString &message)$/;"	f	class:ToxDNS
showWarning	./../src/widget/form/addfriendform.cpp	/^void AddFriendForm::showWarning(const QString &message) const$/;"	f	class:AddFriendForm
showWarning	./../src/widget/gui.cpp	/^void GUI::showWarning(const QString& title, const QString& msg)$/;"	f	class:GUI
showWindow	./../src/misc/settings.h	/^    bool showWindow;$/;"	m	class:Settings
showWindow	./../ui_generalsettings.h	/^    QCheckBox *showWindow;$/;"	m	class:Ui_GeneralSettings
sig	./../src/autoupdate.h	/^        unsigned char sig[crypto_sign_BYTES]; \/\/\/< Signature of the file (ed25519)$/;"	m	struct:AutoUpdater::UpdateFileMeta
sig	./../updater/update.h	/^    unsigned char sig[crypto_sign_BYTES]; \/\/\/< Signature of the file (ed25519)$/;"	m	struct:UpdateFileMeta
signalEnergy	./../libs/filter_audio/ns/ns_core.h	/^  float signalEnergy;  \/\/ Energy of |magn|.$/;"	m	struct:NSinst_t_
signals	./../src/widget/friendwidget.h	/^signals:$/;"	m	struct:FriendWidget
signals	./../src/widget/systemtrayicon_private.h	18;"	d
signals	./../src/widget/systemtrayicon_private.h	23;"	d
signals	./../src/widget/systemtrayicon_private.h	30;"	d
signals	./../src/widget/systemtrayicon_private.h	35;"	d
signals	./../src/widget/systemtrayicon_private.h	40;"	d
signals	./../src/widget/systemtrayicon_private.h	8;"	d
size	./../src/autoupdate.h	/^        uint64_t size; \/\/\/< Size in bytes of the file$/;"	m	struct:AutoUpdater::UpdateFileMeta
size	./../src/chatlog/chatline.h	/^    qreal size = 1.0;$/;"	m	struct:ColumnFormat
size	./../src/chatlog/content/image.h	/^    QSize size;$/;"	m	class:Image
size	./../src/chatlog/content/notificationicon.h	/^    QSize size;$/;"	m	class:NotificationIcon
size	./../src/chatlog/content/spinner.h	/^    QSize size;$/;"	m	class:Spinner
size	./../src/chatlog/content/text.h	/^    QSizeF size;$/;"	m	class:Text
size	./../src/misc/cdata.cpp	/^uint16_t CData::size() const$/;"	f	class:CData
size	./../src/misc/cstring.cpp	/^uint16_t CString::size() const$/;"	f	class:CString
size	./../src/widget/maskablepixmapwidget.h	/^    QSize size;$/;"	m	class:MaskablePixmapWidget
size	./../updater/update.h	/^    uint64_t size; \/\/\/< Size in bytes of the file$/;"	m	struct:UpdateFileMeta
sizeHint	./../src/misc/flowlayout.cpp	/^QSize FlowLayout::sizeHint() const$/;"	f	class:FlowLayout
sizeHint	./../src/widget/adjustingscrollarea.cpp	/^QSize AdjustingScrollArea::sizeHint() const$/;"	f	class:AdjustingScrollArea
sizeHint	./../src/widget/croppinglabel.cpp	/^QSize CroppingLabel::sizeHint() const$/;"	f	class:CroppingLabel
sizeHint	./../src/widget/emoticonswidget.cpp	/^QSize EmoticonsWidget::sizeHint() const$/;"	f	class:EmoticonsWidget
skew	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  float skew;$/;"	m	struct:__anon23
skewData	./../libs/filter_audio/aec/aec_resampler.c	/^  int skewData[kEstimateLengthFrames];$/;"	m	struct:__anon9	file:
skewDataIndex	./../libs/filter_audio/aec/aec_resampler.c	/^  int skewDataIndex;$/;"	m	struct:__anon9	file:
skewEstimate	./../libs/filter_audio/aec/aec_resampler.c	/^  float skewEstimate;$/;"	m	struct:__anon9	file:
skewFile	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  FILE* skewFile;$/;"	m	struct:__anon23
skewFrCtr	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int skewFrCtr;$/;"	m	struct:__anon23
skewMode	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  short skewMode;$/;"	m	struct:__anon23
skewMode	./../libs/filter_audio/aec/include/echo_cancellation.h	/^  int16_t skewMode;     \/\/ default kAecFalse$/;"	m	struct:__anon20
slots	./../src/widget/friendwidget.h	/^public slots:$/;"	m	struct:FriendWidget
smartSpacing	./../src/misc/flowlayout.cpp	/^int FlowLayout::smartSpacing(QStyle::PixelMetric pm) const$/;"	f	class:FlowLayout
smile1	./../ui_generalsettings.h	/^    QLabel *smile1;$/;"	m	class:Ui_GeneralSettings
smile2	./../ui_generalsettings.h	/^    QLabel *smile2;$/;"	m	class:Ui_GeneralSettings
smile3	./../ui_generalsettings.h	/^    QLabel *smile3;$/;"	m	class:Ui_GeneralSettings
smile4	./../ui_generalsettings.h	/^    QLabel *smile4;$/;"	m	class:Ui_GeneralSettings
smile5	./../ui_generalsettings.h	/^    QLabel *smile5;$/;"	m	class:Ui_GeneralSettings
smileyPack	./../src/misc/settings.h	/^    QString smileyPack;$/;"	m	class:Settings
smileyPackBrowser	./../ui_generalsettings.h	/^    QComboBox *smileyPackBrowser;$/;"	m	class:Ui_GeneralSettings
smileyPackChanged	./../moc_settings.cpp	/^void Settings::smileyPackChanged()$/;"	f	class:Settings
smileyPackLabel	./../ui_generalsettings.h	/^    QLabel *smileyPackLabel;$/;"	m	class:Ui_GeneralSettings
smileyfied	./../src/misc/smileypack.cpp	/^QString SmileyPack::smileyfied(QString msg)$/;"	f	class:SmileyPack
smooth	./../libs/filter_audio/ns/ns_core.h	/^  float smooth[HALF_ANAL_BLOCKL];$/;"	m	struct:NSinst_t_
snMenu	./../src/widget/systemtrayicon.h	/^    GtkWidget* snMenu;$/;"	m	class:SystemTrayIcon
source	./../src/widget/videosurface.h	/^    VideoSource* source;$/;"	m	class:VideoSurface
spectrum_size	./../libs/filter_audio/other/delay_estimator_internal.h	/^  int spectrum_size;$/;"	m	struct:__anon39
spectrum_size	./../libs/filter_audio/other/delay_estimator_internal.h	/^  int spectrum_size;$/;"	m	struct:__anon40
speechProb	./../libs/filter_audio/ns/ns_core.h	/^  float speechProb[HALF_ANAL_BLOCKL];  \/\/ Final speech\/noise prob: prior + LRT.$/;"	m	struct:NSinst_t_
spikeH	./../src/widget/callconfirmwidget.h	/^    const int spikeW, spikeH;$/;"	m	class:CallConfirmWidget
spikePoly	./../src/widget/callconfirmwidget.h	/^    QPolygon spikePoly;$/;"	m	class:CallConfirmWidget
spikeW	./../src/widget/callconfirmwidget.h	/^    const int spikeW, spikeH;$/;"	m	class:CallConfirmWidget
splitJvmOpts	./../android/gradlew	/^function splitJvmOpts() {$/;"	f
splitMessage	./../src/core.cpp	/^QList<CString> Core::splitMessage(const QString &message, int maxLen)$/;"	f	class:Core
splitSampFreq	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int splitSampFreq;$/;"	m	struct:__anon23
splitterState	./../src/misc/settings.h	/^    QByteArray splitterState;$/;"	m	class:Settings
stFull	./../src/misc/db/plaindb.h	/^    enum class syncType : int {stOff = 0, stNormal = 1, stFull = 2};$/;"	m	class:Db::syncType
stNearState	./../libs/filter_audio/aec/aec_core_internal.h	/^  short stNearState, echoState;$/;"	m	struct:AecCore
stNormal	./../src/misc/db/plaindb.h	/^    enum class syncType : int {stOff = 0, stNormal = 1, stFull = 2};$/;"	m	class:Db::syncType
stOff	./../src/misc/db/plaindb.h	/^    enum class syncType : int {stOff = 0, stNormal = 1, stFull = 2};$/;"	m	class:Db::syncType
stack	./../src/widget/emoticonswidget.h	/^    QStackedWidget stack;$/;"	m	class:EmoticonsWidget
stages	./../libs/filter_audio/ns/nsx_core.h	/^  int                     stages;$/;"	m	struct:NsxInst_t_
start	./../src/core.cpp	/^void Core::start()$/;"	f	class:Core
start	./../src/nexus.cpp	/^void Nexus::start()$/;"	f	class:Nexus
startCall	./../moc_chatform.cpp	/^void ChatForm::startCall(int _t1)$/;"	f	class:ChatForm
startCall	./../src/coreav.cpp	/^void Core::startCall(int friendId, bool video)$/;"	f	class:Core
startCounter	./../src/widget/form/chatform.cpp	/^void ChatForm::startCounter()$/;"	f	class:ChatForm
startFileSend	./../src/widget/form/chatform.cpp	/^void ChatForm::startFileSend(ToxFile file)$/;"	f	class:ChatForm
startFilter	./../src/audiofilterer.cpp	/^void AudioFilterer::startFilter(unsigned int fs)$/;"	f	class:AudioFilterer
startInTray	./../ui_generalsettings.h	/^    QCheckBox *startInTray;$/;"	m	class:Ui_GeneralSettings
startLowerLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             startLowerLimit;    \/\/ = RXX_BUFFER_LEN * 672641;       -23 dBfs$/;"	m	struct:__anon1
startQToxAndExit	./../updater/widget.cpp	/^void Widget::startQToxAndExit()$/;"	f	class:Widget
startResizeWorker	./../src/chatlog/chatlog.cpp	/^void ChatLog::startResizeWorker()$/;"	f	class:ChatLog
startUpperLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             startUpperLimit;    \/\/ = RXX_BUFFER_LEN * 1066064;      -21 dBfs$/;"	m	struct:__anon1
startVideoCall	./../moc_chatform.cpp	/^void ChatForm::startVideoCall(int _t1, bool _t2)$/;"	f	class:ChatForm
started	./../moc_cameraworker.cpp	/^void CameraWorker::started()$/;"	f	class:CameraWorker
started	./../src/nexus.h	/^    bool started;$/;"	m	class:Nexus
startup_phase	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int startup_phase;$/;"	m	struct:__anon23
state	./../src/platform/statusnotifier/statusnotifier.c	/^    StatusNotifierState state;$/;"	m	struct:_StatusNotifierPrivate	file:
stateCounter	./../libs/filter_audio/aec/aec_core_internal.h	/^  int stateCounter;$/;"	m	struct:AecCore
state_in	./../libs/filter_audio/filter_audio.c	/^    WebRtcSpl_State48khzTo16khz state_in, state_in_echo;$/;"	m	struct:__anon42	file:
state_in_echo	./../libs/filter_audio/filter_audio.c	/^    WebRtcSpl_State48khzTo16khz state_in, state_in_echo;$/;"	m	struct:__anon42	file:
state_out	./../libs/filter_audio/filter_audio.c	/^    WebRtcSpl_State16khzTo48khz state_out;$/;"	m	struct:__anon42	file:
staticMetaObject	./../moc_addfriendform.cpp	/^const QMetaObject AddFriendForm::staticMetaObject = {$/;"	m	class:AddFriendForm	file:
staticMetaObject	./../moc_adjustingscrollarea.cpp	/^const QMetaObject AdjustingScrollArea::staticMetaObject = {$/;"	m	class:AdjustingScrollArea	file:
staticMetaObject	./../moc_advancedform.cpp	/^const QMetaObject AdvancedForm::staticMetaObject = {$/;"	m	class:AdvancedForm	file:
staticMetaObject	./../moc_audio.cpp	/^const QMetaObject Audio::staticMetaObject = {$/;"	m	class:Audio	file:
staticMetaObject	./../moc_avform.cpp	/^const QMetaObject AVForm::staticMetaObject = {$/;"	m	class:AVForm	file:
staticMetaObject	./../moc_callconfirmwidget.cpp	/^const QMetaObject CallConfirmWidget::staticMetaObject = {$/;"	m	class:CallConfirmWidget	file:
staticMetaObject	./../moc_camera.cpp	/^const QMetaObject Camera::staticMetaObject = {$/;"	m	class:Camera	file:
staticMetaObject	./../moc_cameraworker.cpp	/^const QMetaObject CameraWorker::staticMetaObject = {$/;"	m	class:CameraWorker	file:
staticMetaObject	./../moc_chatform.cpp	/^const QMetaObject ChatForm::staticMetaObject = {$/;"	m	class:ChatForm	file:
staticMetaObject	./../moc_chatlog.cpp	/^const QMetaObject ChatLog::staticMetaObject = {$/;"	m	class:ChatLog	file:
staticMetaObject	./../moc_chattextedit.cpp	/^const QMetaObject ChatTextEdit::staticMetaObject = {$/;"	m	class:ChatTextEdit	file:
staticMetaObject	./../moc_core.cpp	/^const QMetaObject Core::staticMetaObject = {$/;"	m	class:Core	file:
staticMetaObject	./../moc_croppinglabel.cpp	/^const QMetaObject CroppingLabel::staticMetaObject = {$/;"	m	class:CroppingLabel	file:
staticMetaObject	./../moc_customtextdocument.cpp	/^const QMetaObject CustomTextDocument::staticMetaObject = {$/;"	m	class:CustomTextDocument	file:
staticMetaObject	./../moc_emoticonswidget.cpp	/^const QMetaObject EmoticonsWidget::staticMetaObject = {$/;"	m	class:EmoticonsWidget	file:
staticMetaObject	./../moc_filesform.cpp	/^const QMetaObject FilesForm::staticMetaObject = {$/;"	m	class:FilesForm	file:
staticMetaObject	./../moc_filetransferwidget.cpp	/^const QMetaObject FileTransferWidget::staticMetaObject = {$/;"	m	class:FileTransferWidget	file:
staticMetaObject	./../moc_friendlistwidget.cpp	/^const QMetaObject FriendListWidget::staticMetaObject = {$/;"	m	class:FriendListWidget	file:
staticMetaObject	./../moc_friendrequestdialog.cpp	/^const QMetaObject FriendRequestDialog::staticMetaObject = {$/;"	m	class:FriendRequestDialog	file:
staticMetaObject	./../moc_friendwidget.cpp	/^const QMetaObject FriendWidget::staticMetaObject = {$/;"	m	class:FriendWidget	file:
staticMetaObject	./../moc_generalform.cpp	/^const QMetaObject GeneralForm::staticMetaObject = {$/;"	m	class:GeneralForm	file:
staticMetaObject	./../moc_genericchatform.cpp	/^const QMetaObject GenericChatForm::staticMetaObject = {$/;"	m	class:GenericChatForm	file:
staticMetaObject	./../moc_genericchatroomwidget.cpp	/^const QMetaObject GenericChatroomWidget::staticMetaObject = {$/;"	m	class:GenericChatroomWidget	file:
staticMetaObject	./../moc_genericsettings.cpp	/^const QMetaObject GenericForm::staticMetaObject = {$/;"	m	class:GenericForm	file:
staticMetaObject	./../moc_group.cpp	/^const QMetaObject Group::staticMetaObject = {$/;"	m	class:Group	file:
staticMetaObject	./../moc_groupchatform.cpp	/^const QMetaObject GroupChatForm::staticMetaObject = {$/;"	m	class:GroupChatForm	file:
staticMetaObject	./../moc_groupwidget.cpp	/^const QMetaObject GroupWidget::staticMetaObject = {$/;"	m	class:GroupWidget	file:
staticMetaObject	./../moc_gui.cpp	/^const QMetaObject GUI::staticMetaObject = {$/;"	m	class:GUI	file:
staticMetaObject	./../moc_identityform.cpp	/^const QMetaObject ClickableTE::staticMetaObject = {$/;"	m	class:ClickableTE	file:
staticMetaObject	./../moc_identityform.cpp	/^const QMetaObject IdentityForm::staticMetaObject = {$/;"	m	class:IdentityForm	file:
staticMetaObject	./../moc_ipc.cpp	/^const QMetaObject IPC::staticMetaObject = {$/;"	m	class:IPC	file:
staticMetaObject	./../moc_loadhistorydialog.cpp	/^const QMetaObject LoadHistoryDialog::staticMetaObject = {$/;"	m	class:LoadHistoryDialog	file:
staticMetaObject	./../moc_maskablepixmapwidget.cpp	/^const QMetaObject MaskablePixmapWidget::staticMetaObject = {$/;"	m	class:MaskablePixmapWidget	file:
staticMetaObject	./../moc_netcamview.cpp	/^const QMetaObject NetCamView::staticMetaObject = {$/;"	m	class:NetCamView	file:
staticMetaObject	./../moc_nexus.cpp	/^const QMetaObject Nexus::staticMetaObject = {$/;"	m	class:Nexus	file:
staticMetaObject	./../moc_notificationicon.cpp	/^const QMetaObject NotificationIcon::staticMetaObject = {$/;"	m	class:NotificationIcon	file:
staticMetaObject	./../moc_offlinemsgengine.cpp	/^const QMetaObject OfflineMsgEngine::staticMetaObject = {$/;"	m	class:OfflineMsgEngine	file:
staticMetaObject	./../moc_privacyform.cpp	/^const QMetaObject PrivacyForm::staticMetaObject = {$/;"	m	class:PrivacyForm	file:
staticMetaObject	./../moc_setpassworddialog.cpp	/^const QMetaObject SetPasswordDialog::staticMetaObject = {$/;"	m	class:SetPasswordDialog	file:
staticMetaObject	./../moc_settings.cpp	/^const QMetaObject Settings::staticMetaObject = {$/;"	m	class:Settings	file:
staticMetaObject	./../moc_settingswidget.cpp	/^const QMetaObject SettingsWidget::staticMetaObject = {$/;"	m	class:SettingsWidget	file:
staticMetaObject	./../moc_smileypack.cpp	/^const QMetaObject SmileyPack::staticMetaObject = {$/;"	m	class:SmileyPack	file:
staticMetaObject	./../moc_spinner.cpp	/^const QMetaObject Spinner::staticMetaObject = {$/;"	m	class:Spinner	file:
staticMetaObject	./../moc_systemtrayicon.cpp	/^const QMetaObject SystemTrayIcon::staticMetaObject = {$/;"	m	class:SystemTrayIcon	file:
staticMetaObject	./../moc_tabcompleter.cpp	/^const QMetaObject TabCompleter::staticMetaObject = {$/;"	m	class:TabCompleter	file:
staticMetaObject	./../moc_toxdns.cpp	/^const QMetaObject ToxDNS::staticMetaObject = {$/;"	m	class:ToxDNS	file:
staticMetaObject	./../moc_toxuri.cpp	/^const QMetaObject ToxURIDialog::staticMetaObject = {$/;"	m	class:ToxURIDialog	file:
staticMetaObject	./../moc_videosource.cpp	/^const QMetaObject VideoSource::staticMetaObject = {$/;"	m	class:VideoSource	file:
staticMetaObject	./../moc_videosurface.cpp	/^const QMetaObject VideoSurface::staticMetaObject = {$/;"	m	class:VideoSurface	file:
staticMetaObject	./../moc_widget.cpp	/^const QMetaObject Widget::staticMetaObject = {$/;"	m	class:Widget	file:
status	./../src/corestructs.h	/^    FileStatus status;$/;"	v
status	./../src/platform/statusnotifier/statusnotifier.c	/^    StatusNotifierStatus status;$/;"	m	struct:_StatusNotifierPrivate	file:
statusAway	./../src/widget/widget.h	/^            *statusAway,$/;"	m	class:Widget
statusBusy	./../src/widget/widget.h	/^            *statusBusy,$/;"	m	class:Widget
statusButton	./../ui_mainwindow.h	/^    QPushButton *statusButton;$/;"	m	class:Ui_MainWindow
statusChangeNotificationEnabled	./../src/misc/settings.h	/^    bool statusChangeNotificationEnabled;$/;"	m	class:Settings
statusChanges	./../ui_generalsettings.h	/^    QCheckBox *statusChanges;$/;"	m	class:Ui_GeneralSettings
statusHead	./../ui_mainwindow.h	/^    QWidget *statusHead;$/;"	m	class:Ui_MainWindow
statusLabel	./../ui_mainwindow.h	/^    CroppingLabel *statusLabel;$/;"	m	class:Ui_MainWindow
statusMessage	./../ui_identitysettings.h	/^    QLineEdit *statusMessage;$/;"	m	class:Ui_IdentitySettings
statusMessageChanged	./../moc_identityform.cpp	/^void IdentityForm::statusMessageChanged(QString _t1)$/;"	f	class:IdentityForm
statusMessageChanged	./../moc_widget.cpp	/^void Widget::statusMessageChanged(const QString & _t1)$/;"	f	class:Widget
statusMessageLabel	./../src/widget/form/chatform.h	/^    CroppingLabel *statusMessageLabel;$/;"	m	class:ChatForm
statusMessageLabel	./../src/widget/genericchatroomwidget.h	/^    CroppingLabel* nameLabel, * statusMessageLabel;$/;"	m	class:GenericChatroomWidget
statusMessageLabel	./../ui_identitysettings.h	/^    QLabel *statusMessageLabel;$/;"	m	class:Ui_IdentitySettings
statusMessageSet	./../moc_core.cpp	/^void Core::statusMessageSet(const QString & _t1)$/;"	f	class:Core
statusNotifier	./../src/widget/systemtrayicon.h	/^    StatusNotifier* statusNotifier;$/;"	m	class:SystemTrayIcon
statusOnline	./../src/widget/widget.h	/^    QAction *statusOnline,$/;"	m	class:Widget
statusPanel	./../ui_mainwindow.h	/^    QFrame *statusPanel;$/;"	m	class:Ui_MainWindow
statusPic	./../src/widget/genericchatroomwidget.h	/^    QLabel statusPic;$/;"	m	class:GenericChatroomWidget
statusSelected	./../moc_widget.cpp	/^void Widget::statusSelected(Status _t1)$/;"	f	class:Widget
statusSet	./../moc_core.cpp	/^void Core::statusSet(Status _t1)$/;"	f	class:Core
statusSet	./../moc_widget.cpp	/^void Widget::statusSet(Status _t1)$/;"	f	class:Widget
statusWidget	./../ui_filetransferwidget.h	/^    QWidget *statusWidget;$/;"	m	class:Ui_FileTransferWidget
status_notifier_category_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_category_get_type (void)$/;"	f
status_notifier_class_init	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_class_init (StatusNotifierClass *klass)$/;"	f	file:
status_notifier_error_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_error_get_type (void)$/;"	f
status_notifier_finalize	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_finalize (GObject *object)$/;"	f	file:
status_notifier_freeze_tooltip	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_freeze_tooltip (StatusNotifier          *sn)$/;"	f
status_notifier_get_attention_movie_name	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_attention_movie_name (StatusNotifier          *sn)$/;"	f
status_notifier_get_category	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_category (StatusNotifier          *sn)$/;"	f
status_notifier_get_icon_name	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_icon_name (StatusNotifier          *sn,$/;"	f
status_notifier_get_id	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_id (StatusNotifier          *sn)$/;"	f
status_notifier_get_pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_pixbuf (StatusNotifier          *sn,$/;"	f
status_notifier_get_property	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_property (GObject            *object,$/;"	f	file:
status_notifier_get_state	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_state (StatusNotifier          *sn)$/;"	f
status_notifier_get_status	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_status (StatusNotifier          *sn)$/;"	f
status_notifier_get_title	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_title (StatusNotifier          *sn)$/;"	f
status_notifier_get_tooltip_body	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_tooltip_body (StatusNotifier          *sn)$/;"	f
status_notifier_get_tooltip_title	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_tooltip_title (StatusNotifier          *sn)$/;"	f
status_notifier_get_window_id	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_get_window_id (StatusNotifier          *sn)$/;"	f
status_notifier_has_pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_has_pixbuf (StatusNotifier          *sn,$/;"	f
status_notifier_icon_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_icon_get_type (void)$/;"	f
status_notifier_init	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_init (StatusNotifier *sn)$/;"	f	file:
status_notifier_new_from_icon_name	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_new_from_icon_name (const gchar             *id,$/;"	f
status_notifier_new_from_pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_new_from_pixbuf (const gchar             *id,$/;"	f
status_notifier_props	./../src/platform/statusnotifier/statusnotifier.c	/^static GParamSpec *status_notifier_props[NB_PROPS] = { NULL, };$/;"	v	file:
status_notifier_register	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_register (StatusNotifier          *sn)$/;"	f
status_notifier_scroll_orientation_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_scroll_orientation_get_type (void)$/;"	f
status_notifier_set_attention_movie_name	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_attention_movie_name (StatusNotifier          *sn,$/;"	f
status_notifier_set_from_icon_name	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_from_icon_name (StatusNotifier          *sn,$/;"	f
status_notifier_set_from_pixbuf	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_from_pixbuf (StatusNotifier          *sn,$/;"	f
status_notifier_set_property	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_property (GObject            *object,$/;"	f	file:
status_notifier_set_status	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_status (StatusNotifier          *sn,$/;"	f
status_notifier_set_title	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_title (StatusNotifier          *sn,$/;"	f
status_notifier_set_tooltip	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_tooltip (StatusNotifier          *sn,$/;"	f
status_notifier_set_tooltip_body	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_tooltip_body (StatusNotifier          *sn,$/;"	f
status_notifier_set_tooltip_title	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_tooltip_title (StatusNotifier          *sn,$/;"	f
status_notifier_set_window_id	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_set_window_id (StatusNotifier          *sn,$/;"	f
status_notifier_signals	./../src/platform/statusnotifier/statusnotifier.c	/^static guint status_notifier_signals[NB_SIGNALS] = { 0, };$/;"	v	file:
status_notifier_state_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_state_get_type (void)$/;"	f
status_notifier_status_get_type	./../src/platform/statusnotifier/enums.c	/^status_notifier_status_get_type (void)$/;"	f
status_notifier_thaw_tooltip	./../src/platform/statusnotifier/statusnotifier.c	/^status_notifier_thaw_tooltip (StatusNotifier          *sn)$/;"	f
statusbar	./../ui_mainwindow.h	/^    QStatusBar *statusbar;$/;"	m	class:Ui_MainWindow
stdLongTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t stdLongTerm; \/\/ Q10$/;"	m	struct:__anon3
stdShortTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int16_t stdShortTerm; \/\/ Q10$/;"	m	struct:__anon3
stickToBottom	./../src/chatlog/chatlog.cpp	/^bool ChatLog::stickToBottom() const$/;"	f	class:ChatLog
stopCounter	./../src/widget/form/chatform.cpp	/^void ChatForm::stopCounter()$/;"	f	class:ChatForm
strengthBar	./../ui_setpassworddialog.h	/^    QProgressBar *strengthBar;$/;"	m	class:Ui_SetPasswordDialog
stringToData	./../src/misc/serialize.cpp	/^QByteArray stringToData(QString str)$/;"	f
stringToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray stringToData(QString str)$/;"	f
stringToData	./../updater/serialize.cpp	/^QByteArray stringToData(QString str)$/;"	f
stringdata	./../moc_addfriendform.cpp	/^    char stringdata[93];$/;"	m	struct:qt_meta_stringdata_AddFriendForm_t	file:
stringdata	./../moc_adjustingscrollarea.cpp	/^    char stringdata[21];$/;"	m	struct:qt_meta_stringdata_AdjustingScrollArea_t	file:
stringdata	./../moc_advancedform.cpp	/^    char stringdata[75];$/;"	m	struct:qt_meta_stringdata_AdvancedForm_t	file:
stringdata	./../moc_audio.cpp	/^    char stringdata[91];$/;"	m	struct:qt_meta_stringdata_Audio_t	file:
stringdata	./../moc_avform.cpp	/^    char stringdata[552];$/;"	m	struct:qt_meta_stringdata_AVForm_t	file:
stringdata	./../moc_callconfirmwidget.cpp	/^    char stringdata[49];$/;"	m	struct:qt_meta_stringdata_CallConfirmWidget_t	file:
stringdata	./../moc_camera.cpp	/^    char stringdata[123];$/;"	m	struct:qt_meta_stringdata_Camera_t	file:
stringdata	./../moc_cameraworker.cpp	/^    char stringdata[211];$/;"	m	struct:qt_meta_stringdata_CameraWorker_t	file:
stringdata	./../moc_chatform.cpp	/^    char stringdata[694];$/;"	m	struct:qt_meta_stringdata_ChatForm_t	file:
stringdata	./../moc_chatlog.cpp	/^    char stringdata[67];$/;"	m	struct:qt_meta_stringdata_ChatLog_t	file:
stringdata	./../moc_chattextedit.cpp	/^    char stringdata[50];$/;"	m	struct:qt_meta_stringdata_ChatTextEdit_t	file:
stringdata	./../moc_core.cpp	/^    char stringdata[2278];$/;"	m	struct:qt_meta_stringdata_Core_t	file:
stringdata	./../moc_croppinglabel.cpp	/^    char stringdata[52];$/;"	m	struct:qt_meta_stringdata_CroppingLabel_t	file:
stringdata	./../moc_customtextdocument.cpp	/^    char stringdata[20];$/;"	m	struct:qt_meta_stringdata_CustomTextDocument_t	file:
stringdata	./../moc_emoticonswidget.cpp	/^    char stringdata[73];$/;"	m	struct:qt_meta_stringdata_EmoticonsWidget_t	file:
stringdata	./../moc_filesform.cpp	/^    char stringdata[99];$/;"	m	struct:qt_meta_stringdata_FilesForm_t	file:
stringdata	./../moc_filetransferwidget.cpp	/^    char stringdata[189];$/;"	m	struct:qt_meta_stringdata_FileTransferWidget_t	file:
stringdata	./../moc_friendlistwidget.cpp	/^    char stringdata[18];$/;"	m	struct:qt_meta_stringdata_FriendListWidget_t	file:
stringdata	./../moc_friendrequestdialog.cpp	/^    char stringdata[21];$/;"	m	struct:qt_meta_stringdata_FriendRequestDialog_t	file:
stringdata	./../moc_friendwidget.cpp	/^    char stringdata[161];$/;"	m	struct:qt_meta_stringdata_FriendWidget_t	file:
stringdata	./../moc_generalform.cpp	/^    char stringdata[598];$/;"	m	struct:qt_meta_stringdata_GeneralForm_t	file:
stringdata	./../moc_genericchatform.cpp	/^    char stringdata[242];$/;"	m	struct:qt_meta_stringdata_GenericChatForm_t	file:
stringdata	./../moc_genericchatroomwidget.cpp	/^    char stringdata[101];$/;"	m	struct:qt_meta_stringdata_GenericChatroomWidget_t	file:
stringdata	./../moc_genericsettings.cpp	/^    char stringdata[13];$/;"	m	struct:qt_meta_stringdata_GenericForm_t	file:
stringdata	./../moc_group.cpp	/^    char stringdata[7];$/;"	m	struct:qt_meta_stringdata_Group_t	file:
stringdata	./../moc_groupchatform.cpp	/^    char stringdata[110];$/;"	m	struct:qt_meta_stringdata_GroupChatForm_t	file:
stringdata	./../moc_groupwidget.cpp	/^    char stringdata[73];$/;"	m	struct:qt_meta_stringdata_GroupWidget_t	file:
stringdata	./../moc_gui.cpp	/^    char stringdata[302];$/;"	m	struct:qt_meta_stringdata_GUI_t	file:
stringdata	./../moc_identityform.cpp	/^    char stringdata[22];$/;"	m	struct:qt_meta_stringdata_ClickableTE_t	file:
stringdata	./../moc_identityform.cpp	/^    char stringdata[241];$/;"	m	struct:qt_meta_stringdata_IdentityForm_t	file:
stringdata	./../moc_ipc.cpp	/^    char stringdata[20];$/;"	m	struct:qt_meta_stringdata_IPC_t	file:
stringdata	./../moc_loadhistorydialog.cpp	/^    char stringdata[19];$/;"	m	struct:qt_meta_stringdata_LoadHistoryDialog_t	file:
stringdata	./../moc_maskablepixmapwidget.cpp	/^    char stringdata[31];$/;"	m	struct:qt_meta_stringdata_MaskablePixmapWidget_t	file:
stringdata	./../moc_netcamview.cpp	/^    char stringdata[12];$/;"	m	struct:qt_meta_stringdata_NetCamView_t	file:
stringdata	./../moc_nexus.cpp	/^    char stringdata[7];$/;"	m	struct:qt_meta_stringdata_Nexus_t	file:
stringdata	./../moc_notificationicon.cpp	/^    char stringdata[34];$/;"	m	struct:qt_meta_stringdata_NotificationIcon_t	file:
stringdata	./../moc_offlinemsgengine.cpp	/^    char stringdata[56];$/;"	m	struct:qt_meta_stringdata_OfflineMsgEngine_t	file:
stringdata	./../moc_privacyform.cpp	/^    char stringdata[192];$/;"	m	struct:qt_meta_stringdata_PrivacyForm_t	file:
stringdata	./../moc_setpassworddialog.cpp	/^    char stringdata[35];$/;"	m	struct:qt_meta_stringdata_SetPasswordDialog_t	file:
stringdata	./../moc_settings.cpp	/^    char stringdata[133];$/;"	m	struct:qt_meta_stringdata_Settings_t	file:
stringdata	./../moc_settingswidget.cpp	/^    char stringdata[80];$/;"	m	struct:qt_meta_stringdata_SettingsWidget_t	file:
stringdata	./../moc_smileypack.cpp	/^    char stringdata[33];$/;"	m	struct:qt_meta_stringdata_SmileyPack_t	file:
stringdata	./../moc_spinner.cpp	/^    char stringdata[18];$/;"	m	struct:qt_meta_stringdata_Spinner_t	file:
stringdata	./../moc_systemtrayicon.cpp	/^    char stringdata[61];$/;"	m	struct:qt_meta_stringdata_SystemTrayIcon_t	file:
stringdata	./../moc_tabcompleter.cpp	/^    char stringdata[30];$/;"	m	struct:qt_meta_stringdata_TabCompleter_t	file:
stringdata	./../moc_toxdns.cpp	/^    char stringdata[8];$/;"	m	struct:qt_meta_stringdata_ToxDNS_t	file:
stringdata	./../moc_toxuri.cpp	/^    char stringdata[14];$/;"	m	struct:qt_meta_stringdata_ToxURIDialog_t	file:
stringdata	./../moc_videosource.cpp	/^    char stringdata[46];$/;"	m	struct:qt_meta_stringdata_VideoSource_t	file:
stringdata	./../moc_videosurface.cpp	/^    char stringdata[55];$/;"	m	struct:qt_meta_stringdata_VideoSurface_t	file:
stringdata	./../moc_widget.cpp	/^    char stringdata[1364];$/;"	m	struct:qt_meta_stringdata_Widget_t	file:
style	./../src/misc/settings.h	/^    QString style;$/;"	m	class:Settings
styleBrowser	./../ui_generalsettings.h	/^    QComboBox *styleBrowser;$/;"	m	class:Ui_GeneralSettings
styleLabel	./../ui_generalsettings.h	/^    QLabel *styleLabel;$/;"	m	class:Ui_GeneralSettings
subCountLen	./../libs/filter_audio/aec/aec_core.c	/^static const int subCountLen = 4;$/;"	v	file:
subscribe	./../src/video/camera.cpp	/^void Camera::subscribe()$/;"	f	class:Camera
subscribe	./../src/video/cameraworker.cpp	/^void CameraWorker::subscribe()$/;"	f	class:CameraWorker
subscribe	./../src/video/netvideosource.h	/^    virtual void subscribe() {}$/;"	f	class:NetVideoSource
subscribe	./../src/widget/videosurface.cpp	/^void VideoSurface::subscribe()$/;"	f	class:VideoSurface
sum	./../libs/filter_audio/aec/aec_core.h	/^  float sum;$/;"	m	struct:Stats
sum	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int sum;$/;"	m	struct:__anon23
sumMagn	./../libs/filter_audio/ns/ns_core.h	/^  float sumMagn;$/;"	m	struct:NSinst_t_
sumMagn	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                sumMagn;$/;"	m	struct:NsxInst_t_
supported	./../updater/widget.cpp	/^const bool supported = false;$/;"	v
supported	./../updater/widget.cpp	/^const bool supported = true;$/;"	v
suscribeInput	./../src/audio.cpp	/^void Audio::suscribeInput()$/;"	f	class:Audio
suspend	./../src/video/cameraworker.cpp	/^void CameraWorker::suspend()$/;"	f	class:CameraWorker
switchConfiguration	./../src/core.cpp	/^void Core::switchConfiguration(const QString& profile)$/;"	f	class:Core
switchProfile	./../src/misc/settings.cpp	/^void Settings::switchProfile(const QString& profile)$/;"	f	class:Settings
sx	./../libs/filter_audio/aec/aec_core_internal.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:AecCore
sxd	./../libs/filter_audio/aec/aec_core_internal.h	/^  complex_t sxd[PART_LEN1];  \/\/ cross-psd of farend and nearend$/;"	m	struct:AecCore
syncType	./../src/misc/db/plaindb.h	/^    enum class syncType : int {stOff = 0, stNormal = 1, stFull = 2};$/;"	c	namespace:Db
syncTypeComboBox	./../ui_advancedsettings.h	/^    QComboBox *syncTypeComboBox;$/;"	m	class:Ui_AdvancedSettings
syntBuf	./../libs/filter_audio/ns/ns_core.h	/^  float syntBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NSinst_t_
synthesisBuffer	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 synthesisBuffer[ANAL_BLOCKL_MAX];$/;"	m	struct:NsxInst_t_
system_delay	./../libs/filter_audio/aec/aec_core_internal.h	/^  int system_delay;  \/\/ Current system delay buffered in AEC.$/;"	m	struct:AecCore
tabPressed	./../moc_chattextedit.cpp	/^void ChatTextEdit::tabPressed()$/;"	f	class:ChatTextEdit
tabber	./../src/widget/form/groupchatform.h	/^    TabCompleter* tabber;$/;"	m	class:GroupChatForm
takeAt	./../src/misc/flowlayout.cpp	/^QLayoutItem *FlowLayout::takeAt(int index)$/;"	f	class:FlowLayout
target	./../tools/update-server/deployUpdateFTP_32.py	/^target = 'win32'$/;"	v
target	./../tools/update-server/deployUpdateFTP_64.py	/^target = 'win64'$/;"	v
targetIdx	./../libs/filter_audio/agc/analog_agc.h	/^    uint16_t            targetIdx;          \/\/ Table index for corresponding target level$/;"	m	struct:__anon1
targetIdxOffset	./../libs/filter_audio/agc/analog_agc.h	/^    uint16_t            targetIdxOffset;    \/\/ Table index offset for level compensation$/;"	m	struct:__anon1
targetLevelDbfs	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             targetLevelDbfs;    \/\/ Target level in -dBfs of envelope (default -3)$/;"	m	struct:__anon1
targetLevelDbfs	./../libs/filter_audio/agc/include/gain_control.h	/^    int16_t targetLevelDbfs;   \/\/ default 3 (-3 dBOv)$/;"	m	struct:__anon7
text	./../src/chatlog/content/text.h	/^    QString text;$/;"	m	class:Text
textChanged	./../moc_croppinglabel.cpp	/^void CroppingLabel::textChanged(QString _t1, QString _t2)$/;"	f	class:CroppingLabel
textEdit	./../src/widget/croppinglabel.h	/^    QLineEdit* textEdit;$/;"	m	class:CroppingLabel
textLayout	./../src/widget/genericchatroomwidget.h	/^    QVBoxLayout* textLayout = nullptr;$/;"	m	class:GenericChatroomWidget
textureId	./../src/widget/videosurface.h	/^    GLuint textureId;$/;"	m	class:VideoSurface
themeColor	./../src/misc/settings.h	/^    int themeColor;$/;"	m	class:Settings
themeColorCBox	./../ui_generalsettings.h	/^    QComboBox *themeColorCBox;$/;"	m	class:Ui_GeneralSettings
themeColorColors	./../src/misc/style.cpp	/^QList<QColor> Style::themeColorColors = {QColor(), QColor("#004aa4"), QColor("#97ba00"), QColor("#c23716"), QColor("#4617b5")};$/;"	m	class:Style	file:
themeColorColors	./../src/misc/style.h	/^    static QList<QColor> themeColorColors;$/;"	m	class:Style
themeColorLabel	./../ui_generalsettings.h	/^    QLabel *themeColorLabel;$/;"	m	class:Ui_GeneralSettings
themeColorNames	./../src/misc/style.cpp	/^QStringList Style::themeColorNames = {QObject::tr("Default"), QObject::tr("Blue"), QObject::tr("Olive"), QObject::tr("Red"), QObject::tr("Violet")};$/;"	m	class:Style	file:
themeColorNames	./../src/misc/style.h	/^    static QStringList themeColorNames;$/;"	m	class:Style
themeGroup	./../ui_generalsettings.h	/^    QGroupBox *themeGroup;$/;"	m	class:Ui_GeneralSettings
thresFluctLrt	./../libs/filter_audio/ns/ns_core.h	/^  float thresFluctLrt;$/;"	m	struct:NSParaExtract_t_
thresPosSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  float thresPosSpecFlat;$/;"	m	struct:NSParaExtract_t_
thresWeightSpecDiff	./../libs/filter_audio/ns/ns_core.h	/^  int thresWeightSpecDiff;$/;"	m	struct:NSParaExtract_t_
thresWeightSpecFlat	./../libs/filter_audio/ns/ns_core.h	/^  int thresWeightSpecFlat;$/;"	m	struct:NSParaExtract_t_
thresholdLogLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int32_t                 thresholdLogLrt;$/;"	m	struct:NsxInst_t_
thresholdSpecDiff	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                thresholdSpecDiff;$/;"	m	struct:NsxInst_t_
thresholdSpecFlat	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                thresholdSpecFlat;$/;"	m	struct:NsxInst_t_
time	./../src/chatlog/content/timestamp.h	/^    QDateTime time;$/;"	m	class:Timestamp
timeAvgMagnEnergy	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                timeAvgMagnEnergy;$/;"	m	struct:NsxInst_t_
timeAvgMagnEnergyTmp	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                timeAvgMagnEnergyTmp;$/;"	m	struct:NsxInst_t_
timeElapsed	./../src/widget/form/chatform.h	/^    QElapsedTimer timeElapsed;$/;"	m	class:ChatForm
timeForDelayChange	./../libs/filter_audio/aec/echo_cancellation_internal.h	/^  int timeForDelayChange;$/;"	m	struct:__anon23
timeFormats	./../src/widget/form/settings/generalform.cpp	/^static QStringList timeFormats = {"hh:mm AP", "hh:mm", "hh:mm:ss AP", "hh:mm:ss"};$/;"	v	file:
timeout	./../src/chatlog/content/spinner.cpp	/^void Spinner::timeout()$/;"	f	class:Spinner
timer	./../src/chatlog/content/spinner.h	/^    QTimer timer;$/;"	m	class:Spinner
timer	./../src/ipc.h	/^    QTimer timer;$/;"	m	class:IPC
timer	./../src/widget/form/settings/identityform.h	/^    QTimer timer;$/;"	m	class:IdentityForm
timer	./../src/widget/widget.h	/^    QTimer *timer, *offlineMsgTimer;$/;"	m	class:Widget
timestamp	./../src/autoupdate.h	/^        uint64_t timestamp;$/;"	m	struct:AutoUpdater::VersionInfo
timestamp	./../src/historykeeper.h	/^        QDateTime timestamp;$/;"	m	struct:HistoryKeeper::HistMessage
timestamp	./../src/offlinemsgengine.h	/^        QDateTime timestamp;$/;"	m	struct:OfflineMsgEngine::MsgPtr
timestamp	./../ui_generalsettings.h	/^    QComboBox *timestamp;$/;"	m	class:Ui_GeneralSettings
timestampFormat	./../src/misc/settings.h	/^    QString timestampFormat;$/;"	m	class:Settings
timestampFormatChanged	./../moc_settings.cpp	/^void Settings::timestampFormatChanged()$/;"	f	class:Settings
timestampLabel	./../ui_generalsettings.h	/^    QLabel *timestampLabel;$/;"	m	class:Ui_GeneralSettings
title	./../src/platform/statusnotifier/statusnotifier.c	/^    gchar *title;$/;"	m	struct:_StatusNotifierPrivate	file:
title	./../tools/publish.py	/^	title = 'qTox '+datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')$/;"	v
title	./../tools/publish.py	/^	title = 'qTox Linux '+datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')$/;"	v
title	./../tools/publish.py	/^	title = 'qTox Windows '+datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')$/;"	v
tmp_mem	./../libs/filter_audio/filter_audio.c	/^    int32_t tmp_mem[496];$/;"	m	struct:__anon42	file:
toString	./../src/chatlog/chatmessage.cpp	/^QString ChatMessage::toString() const$/;"	f	class:ChatMessage
toString	./../src/corestructs.cpp	/^QString ToxID::toString() const$/;"	f	class:ToxID
toString	./../src/misc/cdata.cpp	/^QString CData::toString(const uint8_t *cData, const uint16_t cDataSize)$/;"	f	class:CData
toString	./../src/misc/cdata.cpp	/^QString CFriendAddress::toString(const uint8_t *cFriendAddress)$/;"	f	class:CFriendAddress
toString	./../src/misc/cdata.cpp	/^QString CUserId::toString(const uint8_t* cUserId)$/;"	f	class:CUserId
toString	./../src/misc/cstring.cpp	/^QString CString::toString(const uint8_t* cString, uint16_t cStringSize)$/;"	f	class:CString
tooliconsZone	./../ui_mainwindow.h	/^    QWidget *tooliconsZone;$/;"	m	class:Ui_MainWindow
tooltip_body	./../src/platform/statusnotifier/statusnotifier.c	/^    gchar *tooltip_body;$/;"	m	struct:_StatusNotifierPrivate	file:
tooltip_freeze	./../src/platform/statusnotifier/statusnotifier.c	/^    guint tooltip_freeze;$/;"	m	struct:_StatusNotifierPrivate	file:
tooltip_title	./../src/platform/statusnotifier/statusnotifier.c	/^    gchar *tooltip_title;$/;"	m	struct:_StatusNotifierPrivate	file:
topButton	./../ui_filetransferwidget.h	/^    QPushButton *topButton;$/;"	m	class:Ui_FileTransferWidget
tox	./../src/core.h	/^    Tox* tox;$/;"	m	class:Core
tox2id	./../src/friendlist.cpp	/^QHash<QString, int> FriendList::tox2id;$/;"	m	class:FriendList	file:
tox2id	./../src/friendlist.h	/^    static QHash<QString, int> tox2id;$/;"	m	class:FriendList
tox3_server	./../src/toxdns.h	/^        tox3_server(const char* _name, uint8_t _pk[32]):name{_name},pubkey{_pk}{}$/;"	f	struct:ToxDNS::tox3_server
tox3_server	./../src/toxdns.h	/^    struct tox3_server \/\/\/< Represents a tox3 server$/;"	s	class:ToxDNS
toxActivateEventHandler	./../src/widget/widget.cpp	/^bool toxActivateEventHandler(const QByteArray&)$/;"	f
toxGroup	./../ui_identitysettings.h	/^    QGroupBox *toxGroup;$/;"	m	class:Ui_IdentitySettings
toxId	./../src/widget/form/addfriendform.h	/^    QLineEdit toxId;$/;"	m	class:AddFriendForm
toxId	./../src/widget/form/settings/identityform.h	/^    ClickableTE* toxId;$/;"	m	class:IdentityForm
toxIdLabel	./../src/widget/form/addfriendform.h	/^    QLabel headLabel, toxIdLabel, messageLabel;$/;"	m	class:AddFriendForm
toxIdLabel	./../ui_identitysettings.h	/^    CroppingLabel *toxIdLabel;$/;"	m	class:Ui_IdentitySettings
toxSaveEventHandler	./../src/widget/toxsave.cpp	/^bool toxSaveEventHandler(const QByteArray& eventData)$/;"	f
toxTimer	./../src/core.h	/^    QTimer *toxTimer, *fileTimer; \/\/, *saveTimer;$/;"	m	class:Core
toxURIEventHandler	./../src/widget/toxuri.cpp	/^bool toxURIEventHandler(const QByteArray& eventData)$/;"	f
toxav	./../src/core.h	/^    ToxAv* toxav;$/;"	m	class:Core
toxids	./../src/group.h	/^    QMap<QString, QString> toxids;$/;"	m	class:Group
transComboBox	./../ui_generalsettings.h	/^    QComboBox *transComboBox;$/;"	m	class:Ui_GeneralSettings
transLabel	./../ui_generalsettings.h	/^    QLabel *transLabel;$/;"	m	class:Ui_GeneralSettings
transferButton	./../ui_mainwindow.h	/^    QPushButton *transferButton;$/;"	m	class:Ui_MainWindow
translation	./../src/misc/settings.h	/^    QString translation;$/;"	m	class:Settings
translator	./../src/widget/widget.h	/^    QTranslator* translator;$/;"	m	class:Widget
trayGroup	./../ui_generalsettings.h	/^    QGroupBox *trayGroup;$/;"	m	class:Ui_GeneralSettings
trayMenu	./../src/widget/widget.h	/^    QMenu *trayMenu;$/;"	m	class:Widget
traySpacer	./../ui_generalsettings.h	/^    QSpacerItem *traySpacer;$/;"	m	class:Ui_GeneralSettings
tryCaptureSamples	./../src/audio.cpp	/^bool Audio::tryCaptureSamples(uint8_t* buf, int framesize)$/;"	f	class:Audio
type	./../src/chatlog/chatlinecontent.cpp	/^int ChatLineContent::type() const$/;"	f	class:ChatLineContent
typingNotification	./../src/chatlog/chatlog.h	/^    ChatLine::Ptr typingNotification;$/;"	m	class:ChatLog
typingNotification	./../src/misc/settings.h	/^    bool typingNotification;$/;"	m	class:Settings
typingTimer	./../src/widget/form/chatform.h	/^    QTimer typingTimer;    $/;"	m	class:ChatForm
ui	./../src/chatlog/content/filetransferwidget.h	/^    Ui::FileTransferWidget *ui;$/;"	m	class:FileTransferWidget
ui	./../src/widget/androidgui.h	/^    Ui::Android* ui;$/;"	m	class:AndroidGUI
ui	./../src/widget/form/loadhistorydialog.h	/^    Ui::LoadHistoryDialog *ui;$/;"	m	class:LoadHistoryDialog
ui	./../src/widget/form/setpassworddialog.h	/^    Ui::SetPasswordDialog *ui;$/;"	m	class:SetPasswordDialog
ui	./../src/widget/widget.h	/^    Ui::MainWindow *ui;$/;"	m	class:Widget
ui	./../updater/widget.h	/^    Ui::Widget *ui;$/;"	m	class:Widget
uint16ToData	./../src/misc/serialize.cpp	/^QByteArray uint16ToData(uint16_t num)$/;"	f
uint16ToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray uint16ToData(uint16_t num)$/;"	f
uint16ToData	./../updater/serialize.cpp	/^QByteArray uint16ToData(uint16_t num)$/;"	f
uint32ToData	./../src/misc/serialize.cpp	/^QByteArray uint32ToData(uint32_t num)$/;"	f
uint32ToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray uint32ToData(uint32_t num)$/;"	f
uint32ToData	./../updater/serialize.cpp	/^QByteArray uint32ToData(uint32_t num)$/;"	f
uint64ToData	./../src/misc/serialize.cpp	/^QByteArray uint64ToData(uint64_t num)$/;"	f
uint64ToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray uint64ToData(uint64_t num)$/;"	f
uint64ToData	./../updater/serialize.cpp	/^QByteArray uint64ToData(uint64_t num)$/;"	f
uint8ToData	./../src/misc/serialize.cpp	/^QByteArray uint8ToData(uint8_t num)$/;"	f
uint8ToData	./../tools/update-server/qtox-updater-genflist/serialize.cpp	/^QByteArray uint8ToData(uint8_t num)$/;"	f
uint8ToData	./../updater/serialize.cpp	/^QByteArray uint8ToData(uint8_t num)$/;"	f
unWrapMessage	./../src/historykeeper.cpp	/^QString HistoryKeeper::unWrapMessage(const QString &str)$/;"	f	class:HistoryKeeper
undeliveredMsgs	./../src/offlinemsgengine.h	/^    QMap<int, MsgPtr> undeliveredMsgs;$/;"	m	class:OfflineMsgEngine
uniq_id	./../src/platform/statusnotifier/statusnotifier.c	/^static guint uniq_id = 0;$/;"	v	file:
unityIndicator	./../src/widget/systemtrayicon.h	/^    AppIndicator *unityIndicator;$/;"	m	class:SystemTrayIcon
unityMenu	./../src/widget/systemtrayicon.h	/^    GtkWidget *unityMenu;$/;"	m	class:SystemTrayIcon
unscaled	./../src/widget/maskablepixmapwidget.h	/^    QPixmap pixmap, mask, unscaled; \/\/ a lot of memory...$/;"	m	class:MaskablePixmapWidget
unsubscribe	./../src/video/camera.cpp	/^void Camera::unsubscribe()$/;"	f	class:Camera
unsubscribe	./../src/video/cameraworker.cpp	/^void CameraWorker::unsubscribe()$/;"	f	class:CameraWorker
unsubscribe	./../src/video/netvideosource.h	/^    virtual void unsubscribe() {}$/;"	f	class:NetVideoSource
unsubscribe	./../src/widget/videosurface.cpp	/^void VideoSurface::unsubscribe()$/;"	f	class:VideoSurface
unsuscribeInput	./../src/audio.cpp	/^void Audio::unsuscribeInput()$/;"	f	class:Audio
update	./../updater/widget.cpp	/^void Widget::update()$/;"	f	class:Widget
updateAliases	./../src/historykeeper.cpp	/^void HistoryKeeper::updateAliases()$/;"	f	class:HistoryKeeper
updateBBox	./../src/chatlog/chatline.cpp	/^void ChatLine::updateBBox()$/;"	f	class:ChatLine
updateBusyNotification	./../src/chatlog/chatlog.cpp	/^void ChatLog::updateBusyNotification()$/;"	f	class:ChatLog
updateChatsID	./../src/historykeeper.cpp	/^void HistoryKeeper::updateChatsID()$/;"	f	class:HistoryKeeper
updateFriendAdress	./../src/misc/settings.cpp	/^void Settings::updateFriendAdress(const QString &newAddr)$/;"	f	class:Settings
updateGradient	./../src/chatlog/content/notificationicon.cpp	/^void NotificationIcon::updateGradient()$/;"	f	class:NotificationIcon
updateMultiSelectionRect	./../src/chatlog/chatlog.cpp	/^void ChatLog::updateMultiSelectionRect()$/;"	f	class:ChatLog
updatePeer	./../src/group.cpp	/^void Group::updatePeer(int peerId, QString name)$/;"	f	class:Group
updateSceneRect	./../src/chatlog/chatlog.cpp	/^void ChatLog::updateSceneRect()$/;"	f	class:ChatLog
updateServer	./../src/autoupdate.cpp	/^const QString AutoUpdater::updateServer = "https:\/\/dist-build.tox.im";$/;"	m	class:AutoUpdater	file:
updateServer	./../src/autoupdate.cpp	/^const QString AutoUpdater::updateServer = "https:\/\/tux3-dev.tox.im";$/;"	m	class:AutoUpdater	file:
updateServer	./../src/autoupdate.cpp	/^const QString AutoUpdater::updateServer;$/;"	m	class:AutoUpdater	file:
updateServer	./../src/autoupdate.h	/^    static const QString updateServer; \/\/\/< Hostname of the qTox update server$/;"	m	class:AutoUpdater
updateStatusLight	./../src/widget/friendwidget.cpp	/^void FriendWidget::updateStatusLight()$/;"	f	class:FriendWidget
updateStatusLight	./../src/widget/genericchatroomwidget.h	/^    virtual void updateStatusLight(){;}$/;"	f	class:GenericChatroomWidget
updateStatusLight	./../src/widget/groupwidget.cpp	/^void GroupWidget::updateStatusLight()$/;"	f	class:GroupWidget
updateTimer	./../src/chatlog/content/notificationicon.h	/^    QTimer* updateTimer = nullptr;$/;"	m	class:NotificationIcon
updateTrayIcon	./../src/widget/widget.cpp	/^void Widget::updateTrayIcon()$/;"	f	class:Widget
updateTypingNotification	./../src/chatlog/chatlog.cpp	/^void ChatLog::updateTypingNotification()$/;"	f	class:ChatLog
updaterBin	./../src/autoupdate.cpp	/^const QString AutoUpdater::updaterBin = "\/Applications\/qtox.app\/Contents\/MacOS\/updater";$/;"	m	class:AutoUpdater	file:
updaterBin	./../src/autoupdate.cpp	/^const QString AutoUpdater::updaterBin = "qtox-updater.exe";$/;"	m	class:AutoUpdater	file:
updaterBin	./../src/autoupdate.cpp	/^const QString AutoUpdater::updaterBin;$/;"	m	class:AutoUpdater	file:
updaterBin	./../src/autoupdate.h	/^    static const QString updaterBin; \/\/\/< Path to the qtox-updater binary$/;"	m	class:AutoUpdater
updates	./../libs/filter_audio/ns/ns_core.h	/^  int updates;$/;"	m	struct:NSinst_t_
upload	./../tools/update-server/deployUpdateFTP_32.py	/^def upload(file, rfile):$/;"	f
upload	./../tools/update-server/deployUpdateFTP_64.py	/^def upload(file, rfile):$/;"	f
uploadcmd1	./../tools/update-server/deployUpdateFTP_32.py	/^uploadcmd1 = "bash -c '"+'ftp -n tux3-dev.tox.im 0<<<"`echo -ne "user qtox-win-update-upload INSERT-PASSWORD-HERE\\ncd '+target+'\\nsend '$/;"	v
uploadcmd1	./../tools/update-server/deployUpdateFTP_64.py	/^uploadcmd1 = "bash -c '"+'ftp -n tux3-dev.tox.im 0<<<"`echo -ne "user qtox-win-update-upload INSERT-PASSWORD-HERE\\ncd '+target+'\\nsend '$/;"	v
uploadcmd2	./../tools/update-server/deployUpdateFTP_32.py	/^uploadcmd2 = '\\n"`"'+"'"$/;"	v
uploadcmd2	./../tools/update-server/deployUpdateFTP_64.py	/^uploadcmd2 = '\\n"`"'+"'"$/;"	v
upperLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             upperLimit;         \/\/ Upper limit for mic energy$/;"	m	struct:__anon1
upperPrimaryLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             upperPrimaryLimit;  \/\/ = RXX_BUFFER_LEN * 1342095;      -20 dBfs$/;"	m	struct:__anon1
upperSecondaryLimit	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             upperSecondaryLimit;\/\/ = RXX_BUFFER_LEN * 2677832;      -17 dBfs$/;"	m	struct:__anon1
ups_2_state	./../libs/filter_audio/filter_audio.c	/^    int32_t ups_2_state[8];$/;"	m	struct:__anon42	file:
upsample_audio	./../libs/filter_audio/filter_audio.c	/^static void upsample_audio(Filter_Audio *f_a, int16_t *out, const int16_t *in)$/;"	f	file:
useCustomDhtList	./../src/misc/settings.h	/^    bool useCustomDhtList;$/;"	m	class:Settings
useEmoticons	./../src/misc/settings.h	/^    bool useEmoticons;$/;"	m	class:Settings
useEmoticons	./../ui_generalsettings.h	/^    QCheckBox *useEmoticons;$/;"	m	class:Ui_GeneralSettings
useNativeStyle	./../src/misc/settings.h	/^    bool useNativeStyle;$/;"	m	class:Settings
useOtherPassword	./../src/coreencryption.cpp	/^void Core::useOtherPassword(PasswordType type)$/;"	f	class:Core
useableWidth	./../src/chatlog/chatlog.cpp	/^qreal ChatLog::useableWidth() const$/;"	f	class:ChatLog
usedConfig	./../libs/filter_audio/agc/analog_agc.h	/^    WebRtcAgc_config_t  usedConfig;$/;"	m	struct:__anon1
user	./../tools/publish.py	/^user = "tux3"$/;"	v
userAlias	./../src/friend.h	/^    QString userAlias, userName;$/;"	m	struct:Friend
userCount	./../src/audio.h	/^    static std::atomic<int> userCount;$/;"	m	class:Audio
userID	./../src/friend.h	/^    ToxID userID;$/;"	m	struct:Friend
userId	./../src/corestructs.h	/^    QString userId;$/;"	m	struct:DhtServer
userId	./../src/misc/settings.h	/^        QString userId;$/;"	m	struct:Settings::DhtServer
userName	./../src/friend.h	/^    QString userAlias, userName;$/;"	m	struct:Friend
userName	./../ui_identitysettings.h	/^    QLineEdit *userName;$/;"	m	class:Ui_IdentitySettings
userNameChanged	./../moc_identityform.cpp	/^void IdentityForm::userNameChanged(QString _t1)$/;"	f	class:IdentityForm
userNameLabel	./../ui_identitysettings.h	/^    QLabel *userNameLabel;$/;"	m	class:Ui_IdentitySettings
userWasMentioned	./../src/group.h	/^    int hasNewMessages, userWasMentioned;$/;"	m	class:Group
usernameChanged	./../moc_widget.cpp	/^void Widget::usernameChanged(const QString & _t1)$/;"	f	class:Widget
usernameSet	./../moc_core.cpp	/^void Core::usernameSet(const QString & _t1)$/;"	f	class:Core
vadFarend	./../libs/filter_audio/agc/digital_agc.h	/^    AgcVad_t      vadFarend;$/;"	m	struct:__anon4
vadMic	./../libs/filter_audio/agc/analog_agc.h	/^    AgcVad_t            vadMic;$/;"	m	struct:__anon1
vadNearend	./../libs/filter_audio/agc/digital_agc.h	/^    AgcVad_t      vadNearend;$/;"	m	struct:__anon4
vadThreshold	./../libs/filter_audio/agc/analog_agc.h	/^    int16_t             vadThreshold;       \/\/ Threshold for VAD decision$/;"	m	struct:__anon1
varianceLongTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t varianceLongTerm; \/\/ Q8$/;"	m	struct:__anon3
varianceShortTerm	./../libs/filter_audio/agc/digital_agc.h	/^    int32_t varianceShortTerm; \/\/ Q8$/;"	m	struct:__anon3
version	./../tools/publish.py	/^	version = 'qtox-'+platform+'-'+versionNumber$/;"	v
version	./../tools/publish.py	/^	version = 'qtox-'+versionNumber$/;"	v
version	./../tools/update-server/deployUpdateS3.py	/^version = Key(bucket)$/;"	v
versionNumber	./../tools/publish.py	/^versionNumber = str(time.time())$/;"	v
versionString	./../src/autoupdate.h	/^        QString versionString;$/;"	m	struct:AutoUpdater::VersionInfo
verticalLayout	./../ui_advancedsettings.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_AdvancedSettings
verticalLayout	./../ui_android.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_Android
verticalLayout	./../ui_avsettings.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_AVSettings
verticalLayout	./../ui_generalsettings.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_GeneralSettings
verticalLayout	./../ui_identitysettings.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_IdentitySettings
verticalLayout	./../ui_mainwindow.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_MainWindow
verticalLayout	./../ui_privacysettings.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_PrivacySettings
verticalLayout	./../ui_setpassworddialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SetPasswordDialog
verticalLayoutProxy	./../ui_generalsettings.h	/^    QVBoxLayout *verticalLayoutProxy;$/;"	m	class:Ui_GeneralSettings
verticalLayout_2	./../ui_advancedsettings.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_AdvancedSettings
verticalLayout_2	./../ui_android.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_Android
verticalLayout_2	./../ui_avsettings.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_AVSettings
verticalLayout_2	./../ui_generalsettings.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_GeneralSettings
verticalLayout_2	./../ui_identitysettings.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_IdentitySettings
verticalLayout_2	./../ui_mainwindow.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_MainWindow
verticalLayout_2	./../ui_privacysettings.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_PrivacySettings
verticalLayout_3	./../ui_advancedsettings.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_AdvancedSettings
verticalLayout_3	./../ui_generalsettings.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_GeneralSettings
verticalLayout_3	./../ui_identitysettings.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_IdentitySettings
verticalLayout_3	./../ui_loadhistorydialog.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_LoadHistoryDialog
verticalLayout_3	./../ui_mainwindow.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_MainWindow
verticalLayout_3	./../ui_privacysettings.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_PrivacySettings
verticalLayout_4	./../ui_generalsettings.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_GeneralSettings
verticalLayout_4	./../ui_identitysettings.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_IdentitySettings
verticalLayout_4	./../ui_mainwindow.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_MainWindow
verticalLayout_4	./../ui_privacysettings.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_PrivacySettings
verticalLayout_5	./../ui_avsettings.h	/^    QVBoxLayout *verticalLayout_5;$/;"	m	class:Ui_AVSettings
verticalLayout_5	./../ui_mainwindow.h	/^    QVBoxLayout *verticalLayout_5;$/;"	m	class:Ui_MainWindow
verticalSpacer	./../ui_advancedsettings.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_AdvancedSettings
verticalSpacer	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer	./../ui_privacysettings.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_PrivacySettings
verticalSpacer	./../ui_setpassworddialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_SetPasswordDialog
verticalSpacer_2	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_2;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer_3	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_3;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer_4	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_4;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer_5	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_5;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer_6	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_6;$/;"	m	class:Ui_FileTransferWidget
verticalSpacer_7	./../ui_filetransferwidget.h	/^    QSpacerItem *verticalSpacer_7;$/;"	m	class:Ui_FileTransferWidget
verticalSpacing	./../src/misc/flowlayout.cpp	/^int FlowLayout::verticalSpacing() const$/;"	f	class:FlowLayout
videoButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
videoEnabled	./../src/coreav.h	/^    bool videoEnabled;$/;"	m	struct:ToxCall
videoFrameReceived	./../moc_core.cpp	/^void Core::videoFrameReceived(vpx_image * _t1)$/;"	f	class:Core
videoGroup	./../ui_avsettings.h	/^    QGroupBox *videoGroup;$/;"	m	class:Ui_AVSettings
videoModescomboBox	./../ui_avsettings.h	/^    QComboBox *videoModescomboBox;$/;"	m	class:Ui_AVSettings
videoSource	./../src/coreav.h	/^    NetVideoSource videoSource;$/;"	m	struct:ToxCall
videoSurface	./../src/widget/netcamview.h	/^    VideoSurface* videoSurface;$/;"	m	class:NetCamView
videobuf	./../src/core.h	/^    static uint8_t* videobuf;$/;"	m	class:Core
videobuf	./../src/coreav.cpp	/^uint8_t* Core::videobuf;$/;"	m	class:Core	file:
videobufsize	./../src/core.h	/^    static const int videobufsize;$/;"	m	class:Core
visibilityChanged	./../src/chatlog/chatline.cpp	/^void ChatLine::visibilityChanged(bool visible)$/;"	f	class:ChatLine
visibilityChanged	./../src/chatlog/chatlinecontent.cpp	/^void ChatLineContent::visibilityChanged(bool)$/;"	f	class:ChatLineContent
visibilityChanged	./../src/chatlog/content/spinner.cpp	/^void Spinner::visibilityChanged(bool visible)$/;"	f	class:Spinner
visibilityChanged	./../src/chatlog/content/text.cpp	/^void Text::visibilityChanged(bool visible)$/;"	f	class:Text
visibleLines	./../src/chatlog/chatlog.h	/^    QList<ChatLine::Ptr> visibleLines;$/;"	m	class:ChatLog
volButton	./../src/widget/form/genericchatform.h	/^    QPushButton *fileButton, *emoteButton, *callButton, *videoButton, *volButton, *micButton;$/;"	m	class:GenericChatForm
volMuteToggle	./../moc_chatform.cpp	/^void ChatForm::volMuteToggle(int _t1)$/;"	f	class:ChatForm
volMuteToggle	./../src/coreav.cpp	/^void Core::volMuteToggle(int callId)$/;"	f	class:Core
waitUntilProcessed	./../src/ipc.cpp	/^bool IPC::waitUntilProcessed(time_t postTime, int32_t timeout\/*=-1*\/)$/;"	f	class:IPC
warn	./../android/gradlew	/^warn ( ) {$/;"	f
warningLabel	./../ui_advancedsettings.h	/^    QLabel *warningLabel;$/;"	m	class:Ui_AdvancedSettings
watcher_appeared	./../src/platform/statusnotifier/statusnotifier.c	/^watcher_appeared (GDBusConnection   *conn,$/;"	f	file:
watcher_signal	./../src/platform/statusnotifier/statusnotifier.c	/^watcher_signal (GDBusProxy      *proxy,$/;"	f	file:
watcher_vanished	./../src/platform/statusnotifier/statusnotifier.c	/^watcher_vanished (GDBusConnection   *conn,$/;"	f	file:
watcher_xml	./../src/platform/statusnotifier/interfaces.h	/^static const gchar watcher_xml[] =$/;"	v
webrtc_aec_instance_count	./../libs/filter_audio/aec/echo_cancellation.c	/^int webrtc_aec_instance_count = 0;$/;"	v
weightLogLrt	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 weightLogLrt;$/;"	m	struct:NsxInst_t_
weightSpecDiff	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 weightSpecDiff;$/;"	m	struct:NsxInst_t_
weightSpecFlat	./../libs/filter_audio/ns/nsx_core.h	/^  int16_t                 weightSpecFlat;$/;"	m	struct:NsxInst_t_
wfBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  float wfBuf[2][kExtendedNumPartitions * PART_LEN1];  \/\/ filter fft$/;"	m	struct:AecCore
wfft	./../libs/filter_audio/ns/ns_core.h	/^  float wfft[W_LENGTH];$/;"	m	struct:NSinst_t_
whiteNoiseLevel	./../libs/filter_audio/ns/ns_core.h	/^  float whiteNoiseLevel;  \/\/ Initial noise estimate.$/;"	m	struct:NSinst_t_
whiteNoiseLevel	./../libs/filter_audio/ns/nsx_core.h	/^  uint32_t                whiteNoiseLevel;  \/\/ Initial noise estimate.$/;"	m	struct:NsxInst_t_
widget	./../src/friend.h	/^    FriendWidget* widget;$/;"	m	struct:Friend
widget	./../src/group.h	/^    GroupWidget* widget;$/;"	m	class:Group
widget	./../src/nexus.h	/^    Widget* widget;$/;"	m	class:Nexus
widgetSettings	./../src/misc/settings.h	/^    QHash<QString, QByteArray> widgetSettings;$/;"	m	class:Settings
width	./../src/chatlog/chatline.h	/^    qreal width = 100.0;$/;"	m	class:ChatLine
width	./../src/chatlog/content/text.h	/^    qreal width = 0.0;$/;"	m	class:Text
widthMin	./../src/chatlog/chatlinecontentproxy.h	/^    int widthMin;$/;"	m	class:ChatLineContentProxy
widthPercent	./../src/chatlog/chatlinecontentproxy.h	/^    float widthPercent;$/;"	m	class:ChatLineContentProxy
win9xME_args	./../android/gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args_slurp	./../android/gradlew.bat	/^:win9xME_args_slurp$/;"	l
windShift	./../libs/filter_audio/ns/ns_core.h	/^  int windShift;$/;"	m	struct:NSinst_t_
window	./../libs/filter_audio/ns/ns_core.h	/^  const float* window;$/;"	m	struct:NSinst_t_
window	./../libs/filter_audio/ns/nsx_core.h	/^  const int16_t*          window;$/;"	m	struct:NsxInst_t_
windowGeometry	./../src/misc/settings.h	/^    QByteArray windowGeometry;$/;"	m	class:Settings
windowState	./../src/misc/settings.h	/^    QByteArray windowState;$/;"	m	class:Settings
window_id	./../src/platform/statusnotifier/statusnotifier.c	/^    guint32 window_id;$/;"	m	struct:_StatusNotifierPrivate	file:
worker	./../src/video/camera.h	/^    CameraWorker* worker;$/;"	m	class:Camera
workerAnchorLine	./../src/chatlog/chatlog.h	/^    ChatLine::Ptr workerAnchorLine;$/;"	m	class:ChatLog
workerLastIndex	./../src/chatlog/chatlog.h	/^    int workerLastIndex = 0;$/;"	m	class:ChatLog
workerStb	./../src/chatlog/chatlog.h	/^    bool workerStb = false;$/;"	m	class:ChatLog
workerThread	./../src/video/camera.h	/^    QThread* workerThread;$/;"	m	class:Camera
workerTimer	./../src/chatlog/chatlog.h	/^    QTimer* workerTimer = nullptr;$/;"	m	class:ChatLog
wrapDiv	./../src/chatlog/chatmessage.cpp	/^QString ChatMessage::wrapDiv(const QString &str, const QString &div)$/;"	f	class:ChatMessage
wrapMessage	./../src/historykeeper.cpp	/^QString HistoryKeeper::wrapMessage(const QString &str)$/;"	f	class:HistoryKeeper
write_pos	./../libs/filter_audio/other/ring_buffer.c	/^  size_t write_pos;$/;"	m	struct:RingBuffer	file:
x	./../libs/filter_audio/other/signal_processing_library.h	/^  int16_t x[2];$/;"	m	struct:__anon37
xPow	./../libs/filter_audio/aec/aec_core_internal.h	/^  float xPow[PART_LEN1];$/;"	m	struct:AecCore
xfBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  float xfBuf[2][kExtendedNumPartitions * PART_LEN1];  \/\/ farend fft buffer$/;"	m	struct:AecCore
xfBufBlockPos	./../libs/filter_audio/aec/aec_core_internal.h	/^  int xfBufBlockPos;$/;"	m	struct:AecCore
xfwBuf	./../libs/filter_audio/aec/aec_core_internal.h	/^  complex_t xfwBuf[kExtendedNumPartitions * PART_LEN1];$/;"	m	struct:AecCore
y	./../libs/filter_audio/other/signal_processing_library.h	/^  int16_t y[4];$/;"	m	struct:__anon37
yuvProgramm	./../src/widget/videosurface.h	/^    QOpenGLShaderProgram* yuvProgramm;$/;"	m	class:VideoSurface
zeroCtrlMax	./../libs/filter_audio/agc/analog_agc.h	/^    int32_t             zeroCtrlMax;        \/\/ Remember max gain => don't amp low input$/;"	m	struct:__anon1
zeroInputSignal	./../libs/filter_audio/ns/nsx_core.h	/^  int                     zeroInputSignal;  \/\/ Zero input signal flag.$/;"	m	struct:NsxInst_t_
~AVForm	./../src/widget/form/settings/avform.cpp	/^AVForm::~AVForm()$/;"	f	class:AVForm
~AddFriendForm	./../src/widget/form/addfriendform.cpp	/^AddFriendForm::~AddFriendForm()$/;"	f	class:AddFriendForm
~AdvancedForm	./../src/widget/form/settings/advancedform.cpp	/^AdvancedForm::~AdvancedForm()$/;"	f	class:AdvancedForm
~AndroidGUI	./../src/widget/androidgui.cpp	/^AndroidGUI::~AndroidGUI()$/;"	f	class:AndroidGUI
~Audio	./../src/audio.cpp	/^Audio::~Audio()$/;"	f	class:Audio
~AudioFilterer	./../src/audiofilterer.cpp	/^AudioFilterer::~AudioFilterer()$/;"	f	class:AudioFilterer
~CData	./../src/misc/cdata.cpp	/^CData::~CData()$/;"	f	class:CData
~CString	./../src/misc/cstring.cpp	/^CString::~CString()$/;"	f	class:CString
~Camera	./../src/video/camera.cpp	/^Camera::~Camera()$/;"	f	class:Camera
~CameraWorker	./../src/video/cameraworker.cpp	/^CameraWorker::~CameraWorker()$/;"	f	class:CameraWorker
~ChatForm	./../src/widget/form/chatform.cpp	/^ChatForm::~ChatForm()$/;"	f	class:ChatForm
~ChatLine	./../src/chatlog/chatline.cpp	/^ChatLine::~ChatLine()$/;"	f	class:ChatLine
~ChatLog	./../src/chatlog/chatlog.cpp	/^ChatLog::~ChatLog()$/;"	f	class:ChatLog
~Core	./../src/core.cpp	/^Core::~Core()$/;"	f	class:Core
~DocumentCache	./../src/chatlog/documentcache.cpp	/^DocumentCache::~DocumentCache()$/;"	f	class:DocumentCache
~EncryptedDb	./../src/misc/db/encrypteddb.cpp	/^EncryptedDb::~EncryptedDb()$/;"	f	class:EncryptedDb
~FileTransferWidget	./../src/chatlog/content/filetransferwidget.cpp	/^FileTransferWidget::~FileTransferWidget()$/;"	f	class:FileTransferWidget
~FilesForm	./../src/widget/form/filesform.cpp	/^FilesForm::~FilesForm()$/;"	f	class:FilesForm
~FlowLayout	./../src/misc/flowlayout.cpp	/^FlowLayout::~FlowLayout()$/;"	f	class:FlowLayout
~Friend	./../src/friend.cpp	/^Friend::~Friend()$/;"	f	class:Friend
~GeneralForm	./../src/widget/form/settings/generalform.cpp	/^GeneralForm::~GeneralForm()$/;"	f	class:GeneralForm
~GenericDdInterface	./../src/misc/db/genericddinterface.cpp	/^GenericDdInterface::~GenericDdInterface()$/;"	f	class:GenericDdInterface
~GenericForm	./../src/widget/form/settings/genericsettings.h	/^    ~GenericForm() {;}$/;"	f	class:GenericForm
~Group	./../src/group.cpp	/^Group::~Group()$/;"	f	class:Group
~HistoryKeeper	./../src/historykeeper.cpp	/^HistoryKeeper::~HistoryKeeper()$/;"	f	class:HistoryKeeper
~IPC	./../src/ipc.cpp	/^IPC::~IPC()$/;"	f	class:IPC
~IdentityForm	./../src/widget/form/settings/identityform.cpp	/^IdentityForm::~IdentityForm()$/;"	f	class:IdentityForm
~LoadHistoryDialog	./../src/widget/form/loadhistorydialog.cpp	/^LoadHistoryDialog::~LoadHistoryDialog()$/;"	f	class:LoadHistoryDialog
~Nexus	./../src/nexus.cpp	/^Nexus::~Nexus()$/;"	f	class:Nexus
~OfflineMsgEngine	./../src/offlinemsgengine.cpp	/^OfflineMsgEngine::~OfflineMsgEngine()$/;"	f	class:OfflineMsgEngine
~PlainDb	./../src/misc/db/plaindb.cpp	/^PlainDb::~PlainDb()$/;"	f	class:PlainDb
~PrivacyForm	./../src/widget/form/settings/privacyform.cpp	/^PrivacyForm::~PrivacyForm()$/;"	f	class:PrivacyForm
~SetPasswordDialog	./../src/widget/form/setpassworddialog.cpp	/^SetPasswordDialog::~SetPasswordDialog()$/;"	f	class:SetPasswordDialog
~SettingsWidget	./../src/widget/form/settingswidget.cpp	/^SettingsWidget::~SettingsWidget()$/;"	f	class:SettingsWidget
~SystemTrayIcon	./../src/widget/systemtrayicon.cpp	/^SystemTrayIcon::~SystemTrayIcon()$/;"	f	class:SystemTrayIcon
~Text	./../src/chatlog/content/text.cpp	/^Text::~Text()$/;"	f	class:Text
~ToxFile	./../src/corestructs.h	/^    ~ToxFile(){}$/;"	f
~VideoSurface	./../src/widget/videosurface.cpp	/^VideoSurface::~VideoSurface()$/;"	f	class:VideoSurface
~Widget	./../src/widget/widget.cpp	/^Widget::~Widget()$/;"	f	class:Widget
~Widget	./../updater/widget.cpp	/^Widget::~Widget()$/;"	f	class:Widget
